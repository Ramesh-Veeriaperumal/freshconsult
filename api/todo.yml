Todo:
 - combine all discussion methods into one and example requires feature before filter
 - Paginate fires extra queries?

Breaking changes in existing APIs:
 - Account suspended
 - day pass required
 - handle unverified request
 - Post validation
 - customer forum validation
 - Monitorship validation
 - Stamp type validation
Deferred:
 - caching(db also)
 - update (override or incremental) -  override
 - Should we need to use existing gem for date validations in model?
 - revisit all before filters and the order is a problem
 - api limit in response header
 - side loading associations(include as a param in GET requests)
 - paginate associations ???
 - need to revisit api_throttler (Should not allow requests which has content type as "application/json; charset=UTF- 8")
 - Should we need to introduce credits/merits for each usage of endpoint?

Completed:
 - Multijson parse error handling
 - pagination in index actions
 - 405 handling
 - need to add test to keep an eye on controllers filters(test should be written in such a way that it should break if new filters are added)
 - Do we need to have dependency test for lib/helper methods overriden in our helpers/libs
 - have to investigate open_forums
 - location header in create response 
 - 204 for delete?
 - Rescue 500
 - Enforce ssl
 - inherit instead of concern?
 - api limit in response header and allowed methods
 - need to add test to keep an eye on AR validations(test should be written in such a way that it should break if new validations are added)
 - 429 for api limit
 - tests for middleware
 - APiApplication controller and test_helper refactoring
 - change tests -  remove strings and use json expressions
 - forum category show
 - Allow header for 405
 - Nomenclature for concerns -  prefix with "concern"
 - attr_accessible wrap params -  self- - >inherited method
 - remove desc html from forum and write complete fields test
 - created_at and updated_at only for create
 - forums customers parameter validation
 - should handle post or put api request without/invalid content- type header with 415 error
 - post create
 - monitor
 - Corrected All rubocop info warnings
 - should handle unaccepted type in ACCEPT header with 406 error. # not needed as rails itself considers params[:format] 
 - should handle xml parse error excpetion in new version if content_type is application/xml
 - only visibility 4 has to allow customer params
 - caching in view
 - Metal

Not_necessary:
 - Clean up old discussions controller *****
 - Forum is not a number
 - rubocop customization to remove info severity
 - Have to take a call whether to include custom_code in base error class based on forthcoming error classess

