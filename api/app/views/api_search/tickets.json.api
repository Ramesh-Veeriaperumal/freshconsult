JSON.generate(@items.map do |item|
  response_hash = {
    cc_emails: item.cc_email.try(:[], :cc_emails),
    fwd_emails: item.cc_email.try(:[], :fwd_emails),
    reply_cc_emails: item.cc_email.try(:[], :reply_cc),
    fr_escalated: item.fr_escalated,
    spam: item.spam,
    email_config_id: item.email_config_id,
    group_id: item.group_id,
    priority: item.priority,
    requester_id: item.requester_id,
    responder_id: item.responder_id,
    source: item.source,
    company_id: item.company_id,
    status: item.status,
    subject: item.subject,
    to_emails: item.schema_less_ticket.try(:to_emails),
    product_id: item.schema_less_ticket.try(:product_id),
    id: item.display_id,
    type: item.ticket_type,
    due_by: item.due_by.try(:utc),
    fr_due_by: item.frDueBy.try(:utc),
    is_escalated: item.isescalated,
    description: item.ticket_body.description_html,
    description_text: item.ticket_body.description,
    created_at: item.created_at.try(:utc),
    updated_at: item.updated_at.try(:utc)
  }
  if item.custom_field.any?
    custom_fields = {}
    item.custom_field.each do |key, value|
      custom_fields[@name_mapping[key]] = value.respond_to?(:utc) ? value.utc : value
    end
    response_hash.merge!(custom_fields: custom_fields)
  end
  response_hash
end)
