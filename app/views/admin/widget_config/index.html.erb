<%= render :partial => "shared/colorpicker" %>
<% unless current_account.main_portal.preferences.nil? 
	$tab_color = current_account.main_portal.preferences[:tab_color]
   end %>	

<% content_for :sidebar do -%>
<%= render :partial => "helpnote" %>
<%- end %>

	 	<a href="/admin/home" class="btn pull-right"><%= t('go_back') %></a>

<%= content_tag( :h2, t("feedbackwidget_title"), :class => "title") %>
<%= content_tag( :div, t("feedbackwidget_intro"), :class => "intro") %>

<div>
	<ul data-tabs="tabs" class="tabs" id="fw-tabs">
	    <li class="active">      
	      <a href="#popup" data-toggle="tab" id="popup-tab"><%= t(".feedbackwidget_popup_tab") %></a>
	    </li>
	    <li class="">
	      <a href="#embedded" id="embedded-tab"><%= t(".feedbackwidget_embedded_tab") %></a>
	    </li>
	</ul>
</div>

<div class="tab-content" id="fw-tab-content">
  <div class="tab-pane active" id="popup">
    <%= render :partial => "popup_embedded_widget", :locals => {:selected_widget_type => "popup", :tab_color => $tab_color} %>
  </div>
  <div class="tab-pane" id="embedded">		
    <%= render :partial => "popup_embedded_widget", :locals => {:selected_widget_type => "embedded", :tab_color => $tab_color} %>
  </div>
</div>
<script src="/javascripts/freshwidget.js?v=2.1" type="text/javascript"></script>
<script type="text/javascript">
 wgu = <%= widget_asset_url.to_json %>;
</script>
<% javascript_tag do %>
	FreshWidget.init("", {
		"buttonText": "Support", 
		"buttonBg": "#000000", 
		"backgroundImage": "", 
		"alignment": "4", 
		"offset": "30%",
		"assetUrl": wgu.http
	});
	(function($){
		var WidgetFormHash = $H(); 

		$("#fw-tabs a").on("change", function(ev){			
			$("#fw-tab-content form:visible").trigger("change");
		})

		function changeCode(){
			var $activeForm = $("#fw-tab-content form:visible");

			if(!$activeForm.valid()) return;
			WidgetFormArray = $activeForm.serializeArray();
			WidgetFormHash.set("queryString", "");
			var widgetUrl = "";
			var websiteUrl = "";

			$("#assetUrl").val(wgu.http);
			$("#widget_url").val(wgu.http);


			$.each(WidgetFormArray, function(index, item){
				$item = $activeForm.find('[name=' + item['name'] + ']');
				if(item['value'] != ''){
					switch (item['name']){
					 	case "authenticity_token":
					 	break;
						case "submitThanks":
						case "formTitle":
						case "attachFile":
						case "screenshot":
						case "searchArea":
							WidgetFormHash.set("queryString", WidgetFormHash.get("queryString") + "&" + 
								$item.serialize());
						break;
						case "widgetType":
						case "responsive":
							WidgetFormHash.set("queryString", WidgetFormHash.get("queryString") + "&" + 
								$item.serialize());
							WidgetFormHash.set(item['name'], item['value']);
						break;
						case "httpsHttp":
							$("#assetUrl").val(wgu.https);
							$("#widget_url").val(wgu.https);
							
							break;
						case "widget_url":
						break;
						case "offset":
						case "formHeight":
							WidgetFormHash.set(item['name'], item['value'] + 'px');
						break;
						case "buttonBg":
							WidgetFormHash.set("buttonColor", 
								$.fn.mColorPicker.textColor($item.css("border-right-color")));
					 	default:
							WidgetFormHash.set(item['name'], item['value']);
						break;
					}
				}else{
					switch(item['name']){
						case "buttonText":
							WidgetFormHash.set(item['name'], $item.attr('placeholder'));
						break;
						case "formHeight":
						case "offset":
							WidgetFormHash.set(item['name'], $item.attr('placeholder') + 'px');
						break;
						case "backgroundImage":
							WidgetFormHash.set(item['name'], "");
						break;
					}
				}

			});
			
			constructCode(WidgetFormHash);
			FreshWidget.update(WidgetFormHash.toObject());

			//Update widget with the latest config changes
			jQuery('#freshwidget-frame').attr('src', '/widgets/feedback_widget/new?' + WidgetFormHash.get("queryString").sub('embedded','popup'));
		}
		
		function constructCode(data){
			var widget_url = $("#widget_url").val();
			var url = $("#url").val();
			widget_code_text = '<'+'script type="text/javascript" src="'+widget_url+'/freshwidget.js"></'+'script>\n'+
						'<'+'style type="text/css" media="screen, projection">\n' +
  						'\t@import url('+widget_url+'/freshwidget.css); \n'+
						'</'+'style> \n' +
						'<'+'script type="text/javascript">\n'+
						'\tFreshWidget.init("", ' + data.toJSON() + ' );\n' +
						'<'+'/script>';
						
			$("#popupCode").val(widget_code_text);

			var jsonData = data.toJSON();
			var objJsonData = jQuery.parseJSON(jsonData);

			var heightForm = $('');
			embed_code_text = '<'+'script type="text/javascript" src="'+widget_url+'/freshwidget.js"></'+'script>\n'+
						'<'+'style type="text/css" media="screen, projection">\n' +
  						'\t@import url('+widget_url+'/freshwidget.css); \n'+
						'</'+'style> \n' +
						'<'+'iframe class="freshwidget-embedded-form" id="freshwidget-embedded-form" src="'+url+'/widgets/feedback_widget/new?' + objJsonData.queryString + '" scrolling="no" height="' + objJsonData.formHeight +'" width="100%" frameborder="0" >\n'+
						'<'+'/iframe>';

			
			$("#embeddedCode").val(embed_code_text);

			var buttonTextFocus = $('[name="buttonText"]').is( ":focus" );
			var buttonColorFocus = $("#TabColor").is( ":focus" );
			if( !buttonTextFocus && !buttonColorFocus)
			{
				$(".ui-form").effect( "highlight", {color:"#E4E4E4"});
			}

		}	
		
		$(document).ready(function () {
			$("#assetUrl").val(wgu.http);
			$("#widget_url").val(wgu.http);
			$("#fw-tab-content form").change(changeCode);
			$("#fw-tab-content form:visible").find('[name="buttonText"]').keyup(changeCode);
	    	$('#TabColor').bind('colorpicked', changeCode);
				changeCode();

		     $('#select_id').select2({
		        minimumResultsForSearch : 1000 //Keep high search value to shut off search box. Couldnt find a better way.
		    });

		    $('.pseudoCheckbox').bind('change', function(ev) {
		    	$(this).siblings('[rel=pseudo]').val(this.checked ? '' : 'no');
			});

	  	});
	})(jQuery)
<% end %>
