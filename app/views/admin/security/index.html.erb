<% content_for :helpcard do %>
	<%= render :partial => "helpnote" %>
<% end %>
<%= content_tag(:h3, t(".security_title"), :class => "lead") %>
<% if @account.sso_enabled?
    sso_type = @account.sso_options.key?(:sso_type) ? @account.sso_options[:sso_type].to_s.to_sym : :simple  # default to simple for sso_enabled cases ( case for sso enabled accounts in prod )
  else
    sso_type = :none
  end%>
<%= form_for  @account, :url=> admin_security_path(@account) ,  :html => { :method => :put, :id => "sso_form" , :rel => 'validate' } do |f| %>
  <%= generate_breadcrumbs(params, f, :force_admin => true, :submit_text => "save", :redirect_to_admin => true) %>
  <%= f.error_messages %>
  <ul class="security-form">
    <li class="inline-field">
      <%= check_box('account', 'sso_enabled', options = { :checked => current_account.sso_enabled}, checked_value = "1", unchecked_value = "0") %> <span class="enable_heading"> <%=t(".enable_sso")%> </span>
      <div class="extra_tabbed lead" id="sso_enabled_content" style="display:<%= current_account.sso_enabled ? "block": "none" %>;">
        <!-- SSO BEGIN -->
        <ul>
          <li>
            <%= radio_button_tag("account[sso_options][sso_type]", "saml", (sso_type == :saml)) %>
            <span class="enable_heading"> <%=t(".enable_saml")%> </span>
            <%= content_tag( :div, t(".enable_saml_info"), :class => "info-data mt5" ) %>
            <div class="info-data"  id="saml_sso_form" style="display:<%= sso_type == :saml ? "block": "none" %>;">
              <ul class="ui-form-inline">
                <%= f.fields_for :sso_options, @account.sso_options do |p| %>
                  <li>
                    <%= p.label :login_url, t('.saml_login_url') %>
                    <%= content_tag( :div, t(".saml_login_url_info"), :class => "info-data" ) %>
                    <%= p.text_field :saml_login_url, :value => @account[:sso_options].default(:saml_login_url), :size => 50, :class => "text" %>
                  </li>
                  <li>
                    <%= p.label :logout_url, t('.saml_logout_url') %>
                    <%= content_tag( :div, t(".saml_logout_url_info"), :class => "info-data" ) %>
                    <%= p.text_field :saml_logout_url, :value => @account[:sso_options].default(:saml_logout_url), :size => 50, :class => "text" %>
                  </li>
                  <li>
                    <%= p.label :saml_cert, t('.saml_cert_fingerprint') %>
                    <% if @account.launched? :sha1_enabled %>
                      <%= content_tag(:div, t(".saml_cert_fingerprint_info"), :class => "info-data") %>
                    <% else %>
                      <%= content_tag(:div, t(".saml_cert_fingerprint_info_sha256"), :class => "info-data") %>
                    <% end %>
                    <%= p.text_field :saml_cert_fingerprint, :value => @account[:sso_options].default(:saml_cert_fingerprint), :size => 50, :class => "text" %>
                  </li>
                <% end %>
              </ul>
            </div>
          </li>
          <li>
            <%= radio_button_tag("account[sso_options][sso_type]", "simple", (sso_type == :simple)) %>
            <span class="enable_heading"> <%=t(".enable_simple_sso")%> </span>
            <%= content_tag( :div, t(".enable_sso_info"), :class => "info-data mt5" ) %>
            <div class="info-data"  id="simple_sso_form" style="display:<%= sso_type == :simple ? "block": "none" %>;">
              <ul class="ui-form-inline">
                <li>
                  <%= f.label :shared_secret, t('.shared_secret') %>
                  <%= content_tag( :div, t(".shared_secret_info"), :class => "info-data" ) %>
                  <%= content_tag( :div, @account.shared_secret, :class => "highlight-textbox-info" ) %>
                  <%= f.hidden_field :shared_secret, :value => @account.shared_secret, :class => "text", :disabled => true %>
                </li>
                <%= f.fields_for :sso_options, @account.sso_options do |p| %>
                  <li>
                    <%= p.label :login_url, t('.remote_login_url') %>
                    <%= content_tag( :div, t(".remote_login_url_info"), :class => "info-data" ) %>
                    <%= p.text_field :login_url, :value => @account[:sso_options].default(:login_url), :size => 50, :class => "text" %>
                  </li>
                  <li>
                    <%= p.label :logout_url, t('.remote_logout_url') %>
                    <%= content_tag( :div, t(".remote_logout_url_info"), :class => "info-data" ) %>
                    <%= p.text_field :logout_url, :value => @account[:sso_options].default(:logout_url), :size => 50, :class => "text" %>
                  </li>
                <% end %>
              </ul>
            </div>
          </li>
        </ul>
        <!-- SSO END -->
      </div>
    </li>
    <li>
      <%= check_box('account', 'ssl_enabled', options = { :checked => current_account.ssl_enabled}, checked_value = "1", unchecked_value = "0") %> <span class="enable_heading"> <%= t('.enable_SSL') %> </span>
      <%= content_tag( :div, :class => "info-data extra_tabbed" ) do %>
        <p>
          <%= t(".enable_SSL_anon") %>
        </p>
        <span class="warning">
        <% if current_account.ssl_enabled? %>
          <% if current_portal.main_portal? && !(current_account.main_portal.portal_url.blank?) && !(feature?(:custom_ssl)) %>
            <%= t(".customer_portal_ssl_warning") + current_account.full_domain + " to avoid SSL errors" %>
          <%end%>
          <%if !current_portal.main_portal?%>
            <%= t(".multiple_product_ssl_warning") %>
          <%end%>
        <%end%>
        </span>
      <% end %>
    </li>
    <span>
      <% if current_portal.main_portal && feature?(:custom_ssl) %>
        <% if @custom_ssl_requested == 0 && !@portal.elb_dns_name? %>
          <div class="extra_tabbed">
            <%= link_to_function t(".request_custom_ssl"), :id => "custom_ssl_link" %>
            <div class="custom_ssl_form hide">
              <p class="muted"><%= t(".ssl_info_new").html_safe %> </p>
              <div class="row-fluid">
                <label class="span2 helpdesk_url">
                  <%= t(".helpdesk_url") %>
                </label>
                <div class="span10">
                  <span class="span9">
                  <%= text_field_tag :domain_name, @portal.portal_url, { :class => "domain_field url_without_protocol required ignore_on_hidden" } %></span>
                  <span class="span3"><%= link_to_function t(".submit_request"), :class => "btn submit_request", "data-loading-text" => "Submitting..." %></span>
                </div>
              </div>
            </div>
          </div>
        <% elsif !@portal.elb_dns_name? %>
          <div class="extra_tabbed">
            <div class="custom_ssl_form" class="faded_text"> <%= t(".success_message")%> </div>
          </div>
        <% else %>
          <div class="extra_tabbed ssl_options" style="display:<%= current_account.ssl_enabled ? "block": "none" %>;">
            <br/>
            <label class="radio">
              <%= radio_button_tag "ssl_type", 0, !@portal.ssl_enabled?, { :class => "align" } %>
              <%= t(".default_ssl") %>
            </label>
            <label class="radio">
              <%= radio_button_tag "ssl_type", 1, @portal.ssl_enabled?, { :class => "align" } %>
              <%= t(".custom_ssl") %>
            </label>
            <div class="custom_ssl_form ssl_enabled_info">
              <%= t(".dns_name", :url => @portal.portal_url).html_safe %>
              <br/>
              <span class="elb_name"> <%= @portal.elb_dns_name %> </span>
            </div>
          </div>
        <% end %>
      <% end %>
    </span>

    <% if current_account.features_included?(:whitelisted_ips) %>
    <li class="inline-field">
      <%= check_box('account[whitelisted_ip_attributes]', 'enabled', options = { :checked => @whitelisted_ips.enabled}, checked_value = "1", unchecked_value = "0") %>
      <span class="enable_heading">
        <%=t(".whitelisted_ips_enabled")%>
      </span>
      <%= content_tag( :div, t(".whitelisted_ips_enabled_info"), :class => "info-data extra_tabbed" ) %>
      <div class="info-data extra_tabbed"  id="ip-form" style="display:<%= feature?(:whitelisted_ips) ? "block": "none" %>;">
        <%= f.fields_for :whitelisted_ip_attributes, @whitelisted_ips do |p| %>
        <%#= p.error_messages %>
        <%= p.hidden_field :id unless @whitelisted_ips.new_record? %>
        <%= content_tag( :div, t('.current_ip_information', :current_ip => request.env['CLIENT_IP'] ).html_safe, :class => "info-data" ) %>
        <br/><div class="row-fluid">
          <div class="span2">
              <label><%= t(".applies_to") %> :</label>
          </div>
          <div class="span10">
            <label class="radio-label">
              <input type="radio" name="account[whitelisted_ip_attributes][applies_only_to_agents]" id= "agents" value= "1" checked>
              <%= t(".only_agents") %>
            </label>
            <label class="radio-label">
              <input type="radio" name="account[whitelisted_ip_attributes][applies_only_to_agents]" id= "both" value= "0" >
              <%= t(".agents_customers") %>
            </label>
          </div>
        </div>
        <br/>
        <div class="row-fluid">
          <div class="span2"><%= p.label :ip_range, t('.ip_range') %></div>
          <div class="span10">
            <div id="security-ip-range-container"></div>
          </div>
        </div>
        <div class="row-fluid">
          <div class="span2"></div>
          <div class="span10">
            <a href="#" id="ip-range-btn">
              <span class="span8 app-omega"> 
                <i class="rounded-add-icon pull-left"></i> &nbsp&nbsp<%= t('.add_new') %>
              </span>
            </a>
          </div>
        </div>
        <% end %>
      </div>
    </li>
    <% end %>
    <li>
      <div class="ml10">
        <h3 class="rebrand-head-text top-space-none"><%= t('.admin_notifications') %></h3>
        <div class="row-fluid">
        <div class="span6">
          <div class="btn-bold pb5"><%= t('.send_notifications') %></div>
          <%= select_tag "account[account_configuration_attributes][]",
            options_for_select( @account.account_managers.collect{|i| [i.name, i.email]},
            selected = @account.account_configuration.contact_info[:notification_emails] ),
            { :class => "select2 required input-xlarge", :multiple => :multiple, :placeholder => t('.select_admin') } %>  
        </div>
        <div class="span6 notify-divider" style="">
          <div class="btn-bold pb5"><%= t('.notifications') %></div>
          <ul>
            <li>
              <%= t('.agent_create_or_delete') %>
            </li>
            <% if current_account.features_included?(:whitelisted_ips) %>
              <li>
                <%= t('.whitelisted_ip_modified') %>
              </li>
            <% end %>
          </ul>
        </div>
        </div>
        <div class="clear"></div>
      </div>
    </li>

    <li class="password-policy-section <%= 'disabled faded' if @account.sso_enabled? %>">
      <div class="ml10">
        <h3 class="rebrand-head-text top-space-none"><%= t('.password_policy') %></h3>  
          <p class="info-data">
            <%= t('.password_policy_info3') %>
            <%= t('.password_policy_info4') if(@agent_policy.new_record? or @contact_policy.new_record?) %>
          </p>
        <div class="row-fluid"> 
          <% unless freshid_enabled? %>
            <div class="span6 input-xlarge password-policy-container">
              <div class="btn-bold pb5"><%= t('.for_agents') %></div>
              <%= render :partial => "password_security",
                :locals => { :user => "agent", :policy => @agent_policy  } %>
            </div>
          <% end %>
          <div class="span6 notify-divider password-policy-container">
            <div class="btn-bold pb5"><%= t('.for_contacts') %></div>
            <%= render :partial => "password_security",
              :locals => { :user => "contact",  :policy => @contact_policy} %>
          </div>
          <div class="clear"></div>     
        </div>
      </div>  
    </li>
  </ul>

	<script id="security-ip-range-template" type="text/x-jquery-tmpl">
		<div class="row-fluid">
			<a href="#" class="delete-row">
        <i class="rounded-minus-icon"></i>
			</a>
			<input type="text" name="account[whitelisted_ip_attributes][ip_ranges][][start_ip]" value="${start_ip}" placeholder= "<%= t('.start_ip') %>" class="span4 required"/>
				&nbsp&nbsp-&nbsp&nbsp
			<input type="text" name="account[whitelisted_ip_attributes][ip_ranges][][end_ip]" value="${end_ip}" placeholder= "<%= t('.end_ip') %>" class="span4 required"/>
		</div>
	</script>

  <div class="button-container row-fluid itil-hide pt20">
    <%= link_to "#{t('cancel')}".html_safe, "/admin/home", :class => "btn" %>
    <%= f.submit t('save'), :class => "btn btn-primary" %>
  </div>
<% end %>

<%= javascript_tag do %>
  (function($){

    $('.custom_ssl_form, input').keypress(function(event) { return event.keyCode != 13; });

    $("#account_sso_enabled, #account_ssl_enabled, #account_whitelisted_ip_attributes_enabled").itoggle();

    $("#account_sso_enabled").bind("change",function(e){
      $("#sso_enabled_content").slideToggle(this.checked);
      $("#sso_enabled_content").find(":text").not(":disabled").val("");
      $(".password-policy-section").toggleClass("faded");
      $(".password-policy-section").toggleClass("disabled");

    });

    function slide($slideObj, condition){
      if(condition) 
        $slideObj.slideDown();
      else
        $slideObj.slideUp();
    }

    function ssoFormSlideHandler(){
      slide($('#simple_sso_form'), $('#account_sso_options_sso_type_simple').is(':checked'));
      slide($('#saml_sso_form'), $('#account_sso_options_sso_type_saml').is(':checked'));
      resetSSOFields();
    }
    
    function resetSSOFields(){
      if( !$('#account_sso_options_sso_type_simple').is(':checked')) {
        $('#account_sso_options_login_url').val("");
        $('#account_sso_options_logout_url').val("");
      }
      if( !$('#account_sso_options_sso_type_saml').is(':checked')) {
        $('#account_sso_options_saml_login_url').val("");
        $('#account_sso_options_saml_logout_url').val("");
        $('#account_sso_options_saml_cert_fingerprint').val("");
      }
    }

    $("#account_sso_options_sso_type_saml, #account_sso_options_sso_type_simple").bind("change", ssoFormSlideHandler );

    $(".policies-checkbox").click(function(){
      var container = $(this).parents('.policy-checkbox-container');
      var select_opt = container.find('.select2')
      if(select_opt){
        select_opt.attr('disabled', !$(this).is(":checked"));
        container.toggleClass('checked');
      }
    });

    $(".password-policy-toggle").click(function(){
      var container = $(this).parents('.password-policy-container');
      var section  = $(this).val();
      container.find('.password-policies').hide();
      container.find('.password-policies[data-section="'+section+'"]').show();
    });

    $("#account_ssl_enabled").bind("change", function(){
      $(".ssl_options").slideToggle(this.checked);
      if(!(this.checked)) $("#ssl_type_1").val("0");
    });

    $("#custom_ssl_link").click(function() {
      $(".custom_ssl_form").slideToggle();
    });

    $("#account_whitelisted_ip_attributes_enabled").bind("change", function(e){
      $('#ip-form').slideToggle(this.checked);
    });

    function validatePasswordPolicy(){
      $('.password-policy-container').each(function(){
        var is_default = $(this).find(".password-policy-toggle[value='default']").is(":checked");
        if(is_default){
          $(this).find(".advanced-policies").removeAttr('checked');
          $(this).find("#minimum-characters").val('');
          $(this).find("#password-expiry").val('');
          if($(this).find("#session-expiry"))
            $(this).find("#session-expiry").val('');
          $(this).find("#password-history").val('');
        }
      });
    }

    $('#sso_form').submit(function() {
       validatePasswordPolicy();
    });

    $(".submit_request").click(function(){

      if($("#sso_form").valid()){
        $(".submit_request").button('loading');
        var domain_name = $(".domain_field").val();
        $.ajax({
          type: 'POST',
                  url: '/admin/security/request_custom_ssl/?domain_name='+domain_name,
                  success: function(data){
                            $("#custom_ssl_link").hide();
                            $(".custom_ssl_form").html("<%= t(".thanks_message").html_safe%> <%= t(".success_message").html_safe.gsub('\"', "&quot;")%>");
                                    }
              });
      }
    });

    <% if current_account.features_included?(:whitelisted_ips) %>


      _ip_template = $("#security-ip-range-template").template();

      $("#ip-range-btn").bind("click", function(ev){
        ev.preventDefault();
        $.tmpl( _ip_template, { start_ip : "", end_ip : "" } ).appendTo( "#security-ip-range-container" );
      })

      $(document).on("click",".delete-row", function(ev){
        ev.preventDefault();
        if($(this).parent().parent().children().length > 1)
          $(this).parent().remove()
      })

      <% unless @whitelisted_ips.enabled.present? %>
        $("#ip-form").hide();
      <% end %>

      <% if @whitelisted_ips.ip_ranges.present? %>
        _data = <%= @whitelisted_ips.ip_ranges.to_json.html_safe %>
        _data.each(function(item){
          $.tmpl( _ip_template, item ).appendTo( "#security-ip-range-container" );
        });

        <%= @whitelisted_ips.applies_only_to_agents %> ? $("#agents").prop("checked",true) : $("#both").prop("checked",true)
        <%= @whitelisted_ips.enabled %> ? $("#ip-form").show() : $("#ip-form").hide()
      <% else %>
        $.tmpl( _ip_template, { start_ip : "<%= request.env['CLIENT_IP'] %>", end_ip : "<%= request.env['CLIENT_IP'] %>" } )
          .appendTo( "#security-ip-range-container" );
      <% end %>

      $('#sso_form').submit(function(){
        $('input[name="account[whitelisted_ip_attributes][ip_ranges][][start_ip]"]').each(function(){
          start_ip = $(this);
          end_ip = $(this).siblings('input[name="account[whitelisted_ip_attributes][ip_ranges][][end_ip]"]');
          if((start_ip.val() == "") && (end_ip.val() == ""))
          {
            $(this).siblings('.delete-row').trigger('click');
          }

          if((start_ip.val() != "") && (end_ip.val() == ""))
          {
            end_ip.val(start_ip.val());
          }

          if((start_ip.val() == "") && (end_ip.val() != ""))
          {
            start_ip.val(end_ip.val());
          }

        });
      })

    <% end %>

  })(jQuery)
<% end %>