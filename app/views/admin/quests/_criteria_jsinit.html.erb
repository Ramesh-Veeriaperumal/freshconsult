<%= javascript_include_tag  '/javascripts/report/date' %>
<%= javascript_include_tag  '/javascripts/report/daterangepicker.jQuery.js' %>
<%= stylesheet_link_tag 'ui.daterangepicker' %>

<% content_for :pagefixed do %>
  <% content_for :onload_script do %> 
    var Gamification = function($) {
      var base = this, selectListArr = ['','ticket','solution','forum'];

      base.init = function(cridefs, questinput, awardinput ) {
          base.cridefs = cridefs;
          var _mand_fields = {'quest_data_value': ['','<%= I18n.t('quests.ticket_mand') %>',
                                                    '<%= I18n.t('quests.solution_mand') %>',
                                                    '<%= I18n.t('quests.forum_mand') %>'],
                              'quest_badge_id': '<%= I18n.t('quests.badge_mand') %>'
                             },
              _mand_check_fails = false;
          
          $(".quest_types").live('change', function(ev) {
              base.onQuestChange(selectListArr[$(this).val()]);
          });

          base.onQuestChange(selectListArr[$("input[name=quest[quest_type]]:checked").val()]);

          base.questinput = questinput[0];
          base.awardinput = awardinput[0];
          
          if(base.questinput) {
              base.processInputFeeds();
          }
          
          //$("#show-new-badge").hide()

          $("#showbadges").live('click', function(ev) {
            $("#select-badge").dialog({  modal:true, width:'600px', height:'auto', position:'top',
            title: "Select badges to Unlock", resizable: false, draggable: false});
          });

          $("#select-badge .gamesettings-badges").live('click', function(ev) {
            $("#selected-badge").removeClass();
            var badge_class = "gamesettings-badges " + $(this).data('class');
            $("#selected-badge").html("<div class='"+badge_class+"' />");
            $("#select-badge").dialog('close');
            $("#selected-badge-name").text($(this).data('dataName'));
            $("#quest_badge_id").val($(this).data('badgeId'));

            console.log($(this).data('badgeId'));
            $("#showbadges").html("Change");
          });

          $('#formQuestNew').submit(function(e) {
            var questObj = {};
            var questData = [];

            questObj["value"] = jQuery("#quest_data_value").val();
            questObj["mode"] = jQuery("#quest_data_mode").val();
            questObj["date"] = jQuery("#quest_data_date").val();

            questData.push(questObj);

            jQuery("#quest_quest_data").val(questData.toJSON());

            jQuery.each(_mand_fields,function(index,value){
              _mand_check_fails = false;
              if(jQuery("#"+index).val() == ""){
                event.stopPropagation();
                var txt = (index == 'quest_data_value') ? 
                           value[jQuery("input[name=quest[quest_type]]:checked").val()] : value
                jQuery("#noticeajax").text(txt);
                jQuery("#noticeajax").show();
                closeableFlash('#noticeajax');
                _mand_check_fails = true;
                return false;
              }
            });
            if(_mand_check_fails){
              e.stopPropagation();
              e.stopImmediatePropagation();
              return false;
            }

          });
      };
      
      base.processInputFeeds = function() {
        jQuery.each(base.questinput[0], function(key, value) {
          jQuery("#quest_data_"+key).val(value);
        });
      }

      base.onQuestChange = function(type) {
          $("#RuleList").html("");
          $("#questDOM").html("");
          $("#enablequest").hide();

          if(base.cridefs[type]) {
            $("#enablequest").show();
            quest = base.cridefs[type];
              
            $.each(quest.input, function(index, value) {
                switch(value) {
                  case "questvalue":
                    quest.disp_name = quest.disp_name.replace("##questvalue##", "&nbsp;<input type='text' id='quest_data_value' class='smallinput' id='quest_criteria_value'/>");
                    break;
                  case "questmode":
                    modeHTML = "&nbsp;<select id='quest_data_mode'>";
                    $.each(quest.questmode, function(index, value) {
                        modeHTML += "<option value='" + value[0] + "'>" + value[1] + "</option>";
                    });
                    modeHTML += "</select>";
                    quest.disp_name = quest.disp_name.replace("##questmode##", modeHTML);
                    break;
                  case "questtime":
                   timeHTML = "&nbsp;<select name='quest_data_date' id='quest_data_date'>";
                   $.each(quest.questtime, function(index, value) {
                        timeHTML += "<option value='" + value[0] + "'>" + value[1] + "</option>";
                    });
                    timeHTML += "</select>";
                    quest.disp_name = quest.disp_name.replace("##questtime##", timeHTML);
                   break;
                  default:
                    break;
                }
            });

            var criHtml = quest.disp_name + "matching below conditions <br />";
            
            $("#questDOM").html(criHtml);
          }
      };

      return {
        init : base.init
      }

    }(jQuery);
    Gamification.init(<%= @criteria_defs %>, [<%= @quest_input%>], [<%= @award_input %>]);    
  <% end %>
  <% javascript_tag do %>
    // Condition Parsing 
    // This template contains the dom population information 
    var conditional_dom = function(filter, id, compName, initFeed){
      var type      = filter.domtype;
      var initFeed  = initFeed || {};
      var compName  = compName || "filter";
      // Conditional Dom created based on the options available 
      c_dom = "";
      switch (type) {
        case 'text':
        case 'number':
        case 'autocompelete':
          c_dom = FactoryUI.text("", "value", initFeed["value"], type);
          jQuery(c_dom).prop("id", id);     
          break;
        case 'dropdown':
          var choices = [];
          filter.choices.each(function(arrayItem){
            choices.push({
              name: arrayItem[0],
              value: arrayItem[1]
            });
          });
          c_dom = FactoryUI.dropdown(choices, "value");
          jQuery(c_dom).val(initFeed["value"]);
          break;
        case 'optgroup':
          c_dom = FactoryUI.optgroup(filter.choices, "value");
          jQuery(c_dom).val(initFeed["value"]);
          break;
        case 'paragraph':
          c_dom = FactoryUI.paragraph("", "value", initFeed["value"]);
          break;
        case 'comment':     
          c_dom = jQuery("<div class=\"s_comment\" />")
                .append(FactoryUI.paragraph("", "comment", initFeed["comment"]))
                .append(FactoryUI.checkbox("<%= I18n.t('ticket.note_form.private_note') %>", "private", initFeed["private"])); 
          break;
        case 'email_select':
        case 'email_text':
        case 'checkbox':
          if (compName == 'action') {
            var choices = [{
              name: 1,
              value: "<%= I18n.t(".selected") %>"
            }, {
              name: 0,
              value: "<%= I18n.t(".not_selected") %>"
            }];
            c_dom = FactoryUI.dropdown(choices, "value");
            jQuery(c_dom).val(initFeed["value"]);
          } 
          break;
        
        default:
          c_dom = "";
      }     
      return c_dom;
    }
    var active_email_body = null;
  <% end %>
  <%= javascript_include_tag "condition-filter" %>
<% end %>

<% content_for :onload_script do %> 
  var manipulateFilterData = function(_filter_data){
    var filterList = [];
    if(jQuery("input[name=quest[quest_type]]:checked").val() == 3 && jQuery("#quest_data_mode").val() == 2 ){
      jQuery.each(_filter_data, function(index,value){
        if(value.name != "customer_votes"){
          filterList.push(value);
        }
      });
    }
    else {
      filterList = _filter_data;
    }
    return filterList;
};
  <% if(filter_type == "quest") %>
    var op_hash = preProcessCondition(<%= @op_types %>, <%= @op_list %>);  
        filter_rule = new rules_filter("filter", $A([<%= @filter_defs %>]), "#filterDOM", {"operators": op_hash, "init_feed":$A(<%= @filter_input %>), selectListArr: ['','ticket','solution','forum'], delete_last: true,
        change_filter_data : manipulateFilterData});
        jQuery("#quest_data_mode").live('change',function(){
           filter_rule.refresh_list();
         });
  <% end %>
<% end %>
