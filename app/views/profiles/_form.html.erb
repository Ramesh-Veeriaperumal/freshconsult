<%= javascript_tag do %>

  jQuery(document).ready(function(){
 invokeRedactor('<%= "user_binfo" %>','signature');
 	<% unless freshid_enabled? || current_account.sso_enabled? %>
	    jQuery("#password_confirmation").rules("add", {
		    equalTo: "#password"
	  	});
	<% end %>

    // Code for inserting placeholders in agent signature
    var content = jQuery('label[for=agent_signature_html]').html();
    jQuery('label[for=agent_signature_html]')
      .attr('class','placeholder_wrapper')
      .html(content + '<a class="l_placeholder btn btn-mini btn-flat pull-right"><%= t('agent.insert_placeholder') %></a>');

    jQuery('.l_placeholder').bind("click", function(ev){
        active_email_body = jQuery("#user_binfo");
  			jQuery('#place-dialog').slideDown('fast', function(){
          		jQuery(this).groupPlaceholders();
  			});
  	});
  });
<% end %>
<% content_for :onload_script do %>

 jQuery("#add_new_mail").bind('click', function(ev){
  ev.preventDefault();
  if(!jQuery(this).hasClass('disabled'))
  {
  	if(!jQuery('#emails_con .error').is(':visible'))
  	{
		  var email = jQuery('#emails_con .display_label').length + jQuery('li.close').length;
		  name="user[user_emails_attributes]["+email+"][email]";
		  jQuery('#emails_con').append('<li class="close"><span id="cancel_email" class="profile"></span><input type="text" class="email valid cont" name = '+name+'></li>');
		}
	  jQuery(this).addClass('disabled');
	}
});

jQuery('.remove_image').on('click', function(){
	if(confirm("<%= t('merge_contacts.email_remove') %>"))
	{
		jQuery('#emails_con').append('<input name="deleted[]" type="hidden" value='+jQuery(this).data("email")+'>');
		jQuery(this).parent().remove();
	}
});

jQuery("#cancel_email").on('click', function(ev){
	ev.preventDefault();
	jQuery(this).parent().remove();
	jQuery('#add_new_mail').removeClass('disabled');
});

jQuery('#verify_email').on('click', function(){
	jQuery(this).text("<%= t('merge_contacts.please_wait') %>");
	jQuery(this).off('click');
	jQuery(this).addClass('disabled');
});

jQuery('.email').on('keyup', function(){
	a = jQuery('#add_email').parent().prev().find('input[type=text]');
	if(a.length)
		jQuery('#add_new_mail').toggleClass('disabled', !jQuery.trim(a.last().val()));
});

	<% if current_account.falcon_ui_enabled?(current_user) %>
		jQuery('.edit_agent').submit(function(event){
			var form = jQuery(this),
				url = form.action;
			event.preventDefault();
            form.ajaxSubmit({
			    success: function(data){
			       top.location.reload();
			    },
			    error: function(data){
			       window.location.reload();
				}
			});
		});
	<% end %>
<% end %>

<% user = @profile %>
<% user = @profile.user unless current_user.customer? %>

<%= fields_for "user", @profile do |usr| %>
    <%= error_messages_for :user %>
 	<ul class="ui-form">
    <% if freshid_enabled? %>
		<li>
			<div class="upload-avatar">
				<%= render :partial => "/shared/profile_avatar", :locals => { :user => user } %>
			</div>
		</li>
    <% else %>
      <li>
        <%= label(:user, :name, t("user.full_name") ) %>
          <%= text_field(:user, :name, :class => "text required", :value => user.name )  %>
      </li>
      <li>
        <%= label(:user, :job_title, t("user.title")) %>
        <%= text_field(:user, :job_title, :class => "text", :value => user.job_title ) %>
      </li>
      <li class="medium">
  			<%= label(:user, :email, t("user.email")) %>
  			<%= text_field(:user, :email, :class => "text required email disabled", :id => "email_primary" , :value => user.email , :disabled =>true) %>
  		</li>
  		<li class="small">
  			<%= label(:user, :phone, t("user.phone_no")) %>
  			<div>
  				<label class="overlabel" for="phone_work">Work</label>
  				<%= text_field(:user, :phone, :class => "text", :id => "phone_work", :value => user.phone ) %>
  			</div>
  			<div>
  				<label class="overlabel" for="phone_mobile">Mobile</label>
  				<%= text_field(:user, :mobile, :class => "text", :id => "phone_mobile" ,:value => user.mobile  ) %>
  			</div>
  		</li>
		<% end %>

		<% if current_user.customer?%>
			<li class="small">
				<%= label(:user, :twitter_id, t("user.twitter_id")) %>
				<%= text_field(:user, :twitter_id, :class => "text" ) %>
			</li>
			<li>
				<%= label(:user, :company_name, "Company") %>
				<%= text_field(:user, :company_name, :class => "text disabled", :id => "contact_customer", :disabled =>true ) %>
			</li>
		<%end%>
		<% unless freshid_enabled? %>
			<li>
				<%= render :partial => "/shared/profileavatar", :locals => { :user => user, :type => "edit" } %>
			</li>
		<% end %>
			<% if current_account.multi_timezone_enabled? %>
			<li <% if freshid_enabled? %> class="freshid_field" <% end %>>
				<%= label(:user , :time_zone, t("account.time_zone")) %>
				<%= time_zone_select(:user, :time_zone, ActiveSupport::TimeZone.all, :default => user.time_zone) %>
			</li>
			<% end %>
			<% if feature?(:multi_language) %>
        <% if current_account.falcon_ui_enabled?(current_user) %>
          <li <% if freshid_enabled? %> class="freshid_field" <% end %>>
            <%= label(:user, :language, t('account.language')) %>
            <%= select(:user, :language, mint_locales_with_separator, {:selected => user.language.to_sym()})%>
            <a href="javascript:toggleMessage()">
              <i class="info help-icon-language ficon-help-icon fsize-24" size="14"></i>
            </a>
            <%= render partial:'ui/falcon_languages_alert' %>
          </li>
        <% else %>
  				<li <% if freshid_enabled? %> class="freshid_field" <% end %>>
  					<%= label(:user, :language, t('account.language')) %>
  					<%= select(:user, :language, I18n.available_locales_with_name , {:selected => user.language.to_sym()})%>
  				</li>
        <% end %>
			<% end %>

		<%unless current_user.customer?%>
			<li>
				<%= label(:agent, :signature_html, t("agent.signature")) %>
				<label class="overlabel" for="user_binfo">
				</label>
				<%= text_area(:agent, :signature_html, :class => "text desc_info", :id => "user_binfo" , :value =>@profile.signature_value  ) %>
				<%= hidden_field(:agent, :user_id, :id => "user_id", :value =>@profile.user_id  ) %>
		</li>
		<%end%>
	</ul>
<% end %>

<% content_for :pagefixed do %>
	<%= render partial: "/shared/placeholder_help", locals: { placeholders: ticket_placeholders } %>
<% end %>
