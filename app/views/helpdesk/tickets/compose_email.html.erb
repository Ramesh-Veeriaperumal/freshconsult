<% content_for :sidebar do -%>
  <%= render :partial => "helpdesk/tickets/ticket_widget/sidebar",:locals =>{:from_page =>'new_outbound_email_page_side_bar'}%>
<%- end %>
<div class="templates-header-wrapper">
  <%= render :partial => "helpdesk/tickets/ticket_widget/new_email_title" %>
  <div class="muted">
        <%= t("ticket.compose.compose_email_info") %>
        <a href="https://support.freshdesk.com/support/solutions/articles/211974" target="_blank"><%= t("ticket.compose.learn_more") %></a>
 </div>

<% 
  sign_value = if (desp = @item.description_html).blank? & (sign = 
                  current_user.agent.signature_value).blank?
                desp.to_s
              else
                desp.present? ? (sign.present? ? desp + sign : desp) : ("<p><br /></p>"*2)+sign.to_s
              end
%>

<input type="hidden" value="<%= sign_value %>" id="signature" />

<div id="compose-new-email" class="compose-new-email">
  <%= form_for @item, :html => {:multipart => true, :id => "ComposeTicket", :ignore => "", :rel => "validate" } do |f| %>
  <div class="address-details">
    <div class="requester-email details-widget light-border">
    <label class="inline-label" for="cc-email-address"><%= t('ticket.compose.from') %> </label>
      <%= select_tag "helpdesk_ticket[email_config_id]", options_for_compose,  {:class => "required from_address_wrapper", :data => {:placeholder => t("ticket.compose.compose_choose_email")}}%>
    <div>
    </div>
    </div>
    <div class="to-address details-widget">
      <label class="inline-label" for="cc-email-address"><%= t('ticket.compose.to') %></label>
      <%= render(:partial => "/shared/autocomplete_email", :formats => [:html],  :locals => {:placeholder => "Type a contact", :object_name => :helpdesk_ticket, :url => requesters_search_autocomplete_index_path }) %>
      <span class="show-cc" data-action="show-cc"><%= t('helpdesk.shared.cc_label') %></span>
    </div>

      <div class="cc-address hide details-widget">
      <label class="inline-label" for="cc-email-address"><%= t('helpdesk.cc') %>: </label>
          <%= render :partial => "helpdesk/tickets/ticket_widget/new_email_cc" %>
          <span class="hide-cc" data-action="hide-cc"><%= t('helpdesk.shared.hide_cc') %></span>
    </div>

  </div>

  <!-- Note: when any changes made to the block below or TICKET_FIELD_ELEMENTS PARTIAL in the future,
      please update the memcache key version. key_name :: COMPOSE_EMAIL_FORM  -->
  <% cache_based_on_launch(:cache_new_tkt_comps_forms, agent_compose_email_memcache_key) do %>
    <div class="ticket-details">
      <%= ticket_body_form f %>
    </div>
    <div class="compose-new-ticket">
      <h3 class="lead"><%= t('ticket.compose.properties') %></h3>
      <%= render :partial => '/helpdesk/tickets/show/ticket_field_elements',  :locals => {:form_builder => f, :ticket =>  @item} %>
    </div>
  <% end%>
  <!-- block ends here -->

  <% end %>
  </div>
  </div>
  <input type="hidden" id="tags-value" value="<%= escape_javascript(current_account.tags.most_used(25).collect{|tag| tag.name}.join(',').html_safe) %>" />

<%= render :partial => "/helpdesk/tickets/canned_loading"  %>
<%= render :partial => "/helpdesk/tickets/show/multifile_template_new" %>
<%= render :partial => "/helpdesk/tickets/show/multifile_template"  %>

<script>
  // To load data from store to populate group for the first time.
  jQuery(document).ready(function(){
    // Load data into group, agent and product from data store if the page is cached
    PopulateData.fromStore("#helpdesk_ticket_group_id", 'group');
  })
</script>
