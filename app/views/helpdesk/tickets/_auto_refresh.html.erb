<% javascript_tag do %>
	var auto_refresh_socket = null;
	var auto_refresh_init_params = {};
	var updated_tickets = [];
	var new_ticket_ids = [];
	var updated_ticket_ids = [];
	var current_account_id = "<%=current_account.id%>";
	var current_user_id = "<%=current_user.id%>";
	var current_domain = "<%=current_account.full_domain%>";
	var request_type = "<%= request.ssl? %>"==true ? "https://" : "http://";

	auto_refresh_init_params.user_id = current_user_id;
	auto_refresh_init_params.ticket_channel = 'index_page:'+current_account_id+'*';
	auto_refresh_init_params.account_id = current_account_id;
	auto_refresh_init_params.domain_name = request_type+current_domain;


	jQuery("#index_refresh_alert").bind("click", function(ev){
    slide_up();
    jQuery("#FilterOptions").trigger("change");
    getFilterData();
  });

	jQuery("#SortMenu, .prev_page, .next_page, .toolbar_pagination_full").live("click", function(){
		slide_up();
  });

	jQuery(document).ready(function() {
		auto_refresh_socket = io.connect('<%= nodejs_url("auto_refresh") %>',{'force new connection':true});
		
		jQuery(document).bind('ticket_list', function(ev){
		  auto_refresh_socket.socket.disconnect();
		});
		
		auto_refresh_socket.on('connect', function(){
			auto_refresh_socket.emit('auto_refresh_subscribe', auto_refresh_init_params);
		});

		auto_refresh_socket.on('message', function(_params){
			var filter_options = JSON.parse(jQuery("input[name=data_hash]").val());
			var count = 0;

			// console.log("PARAMS::::" + _params);
			params = JSON.parse(_params);
			console.log("PARAMS::::" + params);

			if(jQuery("[data-ticket="+params.ticket_id+"]").length != 0){
				show_refresh_alert(params.ticket_id, params.type);
			} 
			else if(filter_options.length != 0)
			{
			  for (var i=0; i<filter_options.length; i++) {

			    if((filter_options[i].condition != "due_by") && 
			    			(filter_options[i].condition != "created_at") && 
			    									(filter_options[i].ff_name == "default")) {
			      if(filter_options[i].condition == "responder_id"){
			      	if((filter_options[i].value.split(',')).indexOf('0') >= 0) {
			      		filter_options[i].value += ","+current_user_id;
			      	}	
			      }
			      if((filter_options[i].value.split(',')).indexOf(params[filter_options[i].condition]+'') >= 0) {
			        count++;
			      }
			    } 
			    else if((filter_options[i].ff_name != "default"))
			    {
			    	if((filter_options[i].value.split(',')).indexOf(params[filter_options[i].ff_name]+'') >= 0) {
			        count++;
			      }
			    }
			    else 
			    {
						switch(filter_options[i].condition) {
							case "due_by":
							  var time = params[filter_options[i].condition];
					      if((filter_options[i].value.split(',')).indexOf(get_due_by_value(time)) >= 0) {
					        count++;
					      }
							  break;
							case "created_at":
							  var created_at = Date.parse(params[filter_options[i].condition]);
							  var created_at_filter = filter_options[i].value;
							  var options = { 'today' : Date.parse("<%= Time.now.midnight %>"),
							                  'week' : Date.parse("<%= Time.now.monday %>"),
							                  'month' : Date.parse("<%= Time.now.beginning_of_month %>"),
							                  'two_months' : Date.parse("<%= Time.now.beginning_of_month - 2.months %>"),
							                  'six_months' : Date.parse("<%= Time.now.beginning_of_month - 6.months %>") 
							                };
							  if(!isNaN(created_at_filter)){
							    if(((Date.now()-created_at)/60000) < ((filter_options[i].value)-'')){
							      count++;
							    }
							  } else {
							    if(created_at_filter == "yesterday"){
							      if((created_at < Date.today()) && ( created_at > Date.today().add({days : -1}) )){
							        count++;
							      }
							    } else {
							      if( created_at > options[created_at_filter]){
							        count++;
							      }
							    }
							  }
							  break;
						}
			    }
			  };

			  if(count == filter_options.length) {
			    show_refresh_alert(params.ticket_id, params.type);
			  }
			} else {
			  show_refresh_alert(params.ticket_id, params.type);
			}
		});
	});

	function get_due_by_value(time){
	  switch(true){
	    case time<0:
	    	return '1';
	    case time<24 && time>0:
	    	return '2';
	    case time>24 && time<48:
	    	return '3';
	    case time<8:
	    	return '4';
	  }		
	}

	function slide_up(){
  	jQuery("#index_refresh_alert").slideUp(100);
	}

	function show_refresh_alert(ticket_id, type){
		if(type == "new") new_ticket_ids.push(ticket_id);

		if(type == "update"){
			if(updated_ticket_ids.indexOf(ticket_id) < 0) updated_ticket_ids.push(ticket_id);
			if(new_ticket_ids.indexOf(ticket_id) >= 0) new_ticket_ids.pop(ticket_id);

			// Updating the existing tickets counter
			update_counter("#update_message", updated_ticket_ids.length);			
		}

		// Updating the new tickets counter
		update_counter("#new_ticket_message", new_ticket_ids.length);

		jQuery("#index_refresh_alert").slideDown(100);
		flash_ticket(ticket_id);
  }

  function update_counter(id, count){
  	$this = jQuery(id);

  	if(count > 0){
  		$this.text((count > 1) ? $this.data("textOther") : $this.data("textOne"))
	  			.attr("data-count", count)
	  			.show();
	  }
	  else{
	  	$this.hide();
	  }
  }

  // To highlight a ticket present in the current list view
  function flash_ticket(ticket_id){  	
    if(jQuery("[data-ticket="+ticket_id+"]")){
    	jQuery("[data-ticket="+ticket_id+"] .status-source").addClass('source-detailed-auto-refresh');
      jQuery("[data-ticket="+ticket_id+"] .status-source").attr("title","<%= t('ticket.ticket_updated_icon') %>");
      updated_tickets.push("[data-ticket="+ticket_id+"] td");
    }
  }
<% end %>