<% javascript_tag do %> 
  function lookup(searchString, callback) { 
    new Ajax.Request('<%= autocomplete_helpdesk_authorizations_path %>?v='+searchString, 
                                              { parameters: {name: searchString, rand: (new Date()).getTime()},
                                              onSuccess: function(response) {
                                                var choices = $A();
                                                response.responseJSON.results.each(function(item){
                  if(item.value == "") {
                    choices.push([item.id, item.id]);
                  } else {
                  choices.push([item.value +" <"+item.id+">", item.value +" <"+item.id+">" ]);
                  } 
                                                });                                                
                                                callback(choices);
                                              } });
                                            }
  var cachedBackend = new Autocompleter.Cache(lookup, {searchKey: 0, choices: 10});
  var cachedLookup = cachedBackend.lookup.bind(cachedBackend);

<% end %>
<%
  hide_class = conv_id.nil? ? "hide" : "" 
  note_details_id = conv_id.nil? ? "" : "note_details_#{@note.id}"
  %>
<div class="request_panel <%=hide_class%>" id="<%=cntid%>" rel="emitter" data-node-name="agent_replying">
  
  <div class="form_title"><%= t('.title') %>: <span><%= @ticket.requester.email %></span> </div>
  <div class="list_agents_replying" class="hide"></div>
  <% form_for note, :url => reply_helpdesk_ticket_conversations_path(@ticket), :html => { 
                        :multipart => true, 
                        :id => "HelpdeskReply",
                        "data-panel" => cntid,
                        "data-show-pseudo-reply" => 'true',
                        "data-fetch-latest" => 'true',
                        "data-cnt-id" => cntid,
                        "data-destroy-editor" => 'true',
                        "data-fulltext" => true
                      } do |f| %>
    <%= f.error_messages %>

    
    <ul class="ui-form dont-validate">
      <li class="inline-field field" >
          <%= f.label(:reply_email, "From:" ) %>

          <div class="request_form_options">
            <a  href="#" rel="toggle_email_container" id="add_cc_btn_<%=cntid%>"
                class="<%=@to_cc_emails.blank? ? '' : 'hide' %>" 
                data-container="cc-form-container-<%=cntid%>" 
                data-toggle-button="add_cc_btn_<%=cntid%>"
                data-toggle-checkbox="include_cc">
              <%= t(".cc") %>
            </a>
            <a  href="#" rel="toggle_email_container" id="add_bcc_btn-<%=cntid%>" 
                class="<%=bcc_drop_box_email.blank? ? '' : 'hide' %> "
                data-container="bcc-form-container-<%=cntid%>"
                data-toggle-button="add_bcc_btn-<%=cntid%>" 
                data-toggle-checkbox="include_bcc" >
              <%= t(".bcc") %>
            </a>
          </div>
          <input type="checkbox" class="hide" id="include_cc" name="include_cc"  <%=@to_cc_emails.blank? ? "" : "checked" %>  />              
          <input type="checkbox" class="hide" id="include_bcc" name="include_bcc" <%=bcc_drop_box_email.blank? ? "" : "checked" %> />
          
          <%= select :reply_email, :id, options_for_select(@reply_emails, @selected_reply_email),{}, {:class => 'select2 responder_field'} %>
      </li>
      <li class="inline-field field <%=@to_cc_emails.blank? ? "hide" : "" %> cc_fields" id="cc-form-container-<%=cntid%>">
        <label for="cc_emails_<%=cntid%>"><%= t(".cc") %>:</label>
        <a href="#" class="clear_emails" rel='toggle_email_container' 
            data-container="cc-form-container-<%=cntid%>" 
            data-toggle-button="add_cc_btn_<%=cntid%>" 
            data-clear="true"><%= t('clear') %></a>
            <div class="email_container">
              <input type="text" id="cc_emails_<%=cntid%>" name="helpdesk_note[cc_emails]" />
              <% javascript_tag do %>
                new Autocompleter.MultiValue("cc_emails_<%=cntid%>", cachedLookup, $A(<%= @to_cc_emails.map{|item|[item, item]}.to_json %>), {frequency: 0.1, acceptNewValues: true,separatorRegEx:/;|,/});
              <% end %>
            </div>
      </li>
      <li class="inline-field field <%=bcc_drop_box_email.blank? ? "hide" : '' %>  cc_fields" id="bcc-form-container-<%=cntid%>">
        <label for="cc_emails_<%=cntid%>"><%= t(".bcc") %>:</label>
        <a href="#" class="clear_emails" rel='toggle_email_container' 
            data-container="bcc-form-container-<%=cntid%>" 
            data-toggle-button="add_bcc_btn-<%=cntid%>" 
            data-clear="true"><%= t('clear') %></a>
            <div class="email_container">
              <input type="text" id="bcc_emails_<%=cntid%>" name="helpdesk_note[bcc_emails]" />
              <% javascript_tag do %>
                new Autocompleter.MultiValue("bcc_emails_<%=cntid%>", cachedLookup, $A(<%= bcc_drop_box_email.to_json unless bcc_drop_box_email.blank? %>), {frequency: 0.1, acceptNewValues: true,separatorRegEx:/;|,/});
              <% end %>
            </div>
      </li>
      <li class="inline-field field clearField message">
        <%= render :partial => 'helpdesk/tickets/show/editor_insert_buttons', :locals => { :cntid => cntid } %>
        <% conv_item = conv_id.nil? ? @ticket : @note %>
        <% f.fields_for(:note_body, Helpdesk::NoteBody.new) do |ff| %>
            <%= ff.text_area :body_html, :class => "required", :id => "#{cntid}-body", :value => bind_last_reply(conv_item, @signature, false, true) %>
            <%= ff.text_area :full_text_html, :id => "#{cntid}-body-fulltext", :value => "", :style => "display:none;" %>
        <% end %>
      </li>
      <li class="inline-field field attachment-options continous" id="attachment-options-reply">
          <% unless local_assigns[:no_attachments] %>
          <%= render :partial => "/helpdesk/tickets/show/attachment_form", :locals => { :attach_id => id , :nsc_param => "helpdesk_note" } %>
          <% end %>    
      </li>

      <li class="inline-field field continous">
        <div id="admin_canned_responses_response-attachments">
        </div>
      </li>

    </ul>
    
      <!-- reply will be always public -->
      <%= f.hidden_field :private , :value => false %>
      <!--reply source will be always email-->
      <%= f.hidden_field :source , :value => Helpdesk::Note::SOURCE_KEYS_BY_TOKEN["email"] %>
      <%= f.hidden_field :to_emails , :value =>  @ticket.requester.email %>
      <%= f.hidden_field :from_email, :id => "reply_from_email_#{cntid}", :value => @selected_reply_email%>
      <%= hidden_field_tag(:page , params[:page], :id=>:page  ) unless params[:page].nil? %>
      <%= hidden_field_tag(:ticket_status , '', :id=> "reply_ticket_status_#{cntid}"  )%>
      <div class="clearfix zeroh" ></div>
      <div class="post_in_forum">

        <span class="reply-draft" id="reply-draft">
          <div class="close-img" id="clear-draft"><span></span></div>
          <%= content_tag :div, "#{t("draft")} #{t("saving_draft")}", :class => "sav tooltip", "data-placement" => "below", :id => "draft-save", "title" => t("last_draft") %>
        </span>

        <!-- <label>
          <%# check_box_tag :quoted_text, "true", true %><%# t("ticket.include_quoted_text") %>
        </label> -->
        <% if privilege?(:view_forums) && !@ticket.ticket_topic.nil? && !(@ticket.ticket_topic.topic.locked) %>    
          <label>
              <%= check_box_tag :post_forums %><%= t("ticket.reply_form.post_to_linked_forum") %>
          </label>
        <% end %>
        <% if @ticket.account.survey.can_send?(@ticket, Survey::SPECIFIC_EMAIL_RESPONSE)%>
          <label>
            <%= check_box_tag :send_survey %><%= t("ticket.reply_form.send_satisfaction_survey") %>
          </label>
        <% end %> 
      </div>      

      <div class="btn-toolbar">
        <span>
          <%= link_to(t('cancel'), '#', :class => "btn cancel_btn", "data-show-pseudo-reply" => 'true',"data-cnt-id" => cntid , "data-clear-draft" => 'true') %>
        </span>

        <span class="btn-group  <% if privilege?(:edit_ticket_properties) %>dropup<%end%>">
          <a class="btn btn-primary submit_btn">
            <%= t('ticket.reply_form.send') %>
            <% if privilege?(:edit_ticket_properties) %>
              <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="#">
                <span class="caret"></span>
              </a>
            <% end %>
          </a>
          <% if privilege?(:edit_ticket_properties) %>
          <ul class="dropdown-menu custom_statuses pull-right">
            <%
            ticket_statuses = current_account.ticket_status_values.reject{|status| status.status_id == 2 }
            %>
            <% ticket_statuses.each do |status| %>
            <li>
              <a href="#" rel="custom-reply-status" data-status-name='<%= status.name %>' data-cnt-id='<%=cntid%>' data-status-val='<%= status.status_id %>' >
                <%= t('ticket.reply_form.send_and_set_as', 
                      { :status => (status.is_default ? t(status.name.downcase) : status.name) }) %>
                </a>
              </li>
              <% end %>
            </ul>
          <% end %>
        </span>
        
      </div>

    <% end %>
</div>
<% content_for :pagefixed do %>
  <% javascript_tag do %>

    jQuery("#HelpdeskReply")      
      .bind("submit", function(ev){
      if(!jQuery('#include_cc').is(':checked'))
          jQuery('[name="helpdesk_note[cc_emails][]"]').val('');
      if(!jQuery('#include_bcc').is(':checked'))
          jQuery('[name="helpdesk_note[bcc_emails][]"]').val('');
        <%= remote_function :url => clear_draft_helpdesk_ticket_path, :method => :delete, :type => :synchronous %>
        isDirty = false;
      })
      .validate();  

    jQuery('#HelpdeskReply select#reply_email_id').live('change',function(e){
      var selectObj = jQuery(e.target),
          form = e.target.form,
          fromEmail = selectObj.val();
          form['helpdesk_note[from_email]'].value = fromEmail;
    })

  <% end %>
<% end %>