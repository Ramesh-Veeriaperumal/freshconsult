<script src="/javascripts/frameworks/socket.io.js" type="text/javascript"></script>
<!-- **** Agent Collision flip animation start **** -->
<div class="ticket-notifications" id="agent_collision_show">
  <div class="view-flip" rel="notice-popover"  id="agents_viewing" data-object="viewing" data-placement="right" title="Currently viewing">
    <a href="#">
      <div class="flip-front"></div>
      <div class="flip-back">0</div>
    </a>
  </div>

  <div class="reply-flip" rel="notice-popover" id="agents_replying" data-object="replying" data-placement="right" title="Currently replying">
    <a href="#">
      <div class="flip-front"></div>
      <div class="flip-back">0</div>
    </a>
  </div>
</div>

<% content_for :pagefixed do %>
<% javascript_tag do %>
    jQuery('#agent_collision_placeholder').append(jQuery('#agent_collision_show').detach());

    var agents = { viewing:[], replying:[] };
    var init_params = {};
    var current_user = "<%= escape_javascript(current_user.name) %>";
    init_params.agent = current_user;
    init_params.account_id = <%= current_account.id%>;
    init_params.ticket_id = <%= @ticket.id %>;  

    jQuery("#notification").bind("click", function(ev){
      if(jQuery(this).hasClass("active")){
        window.location = '<%= helpdesk_ticket_path(ticket.display_id) %>';
      }
    })
    
    function update_viewing(_agents) {
      agents.viewing = _agents.without(current_user);
      if(agents.viewing.size()) update_notification_ui();
    }

    function update_replying(_agents) {   
      agents.replying = _agents.without(current_user);
      agents.replying.each(function(item){
        agents.viewing = agents.viewing.without(item);             
      });
      if(agents.replying.size()) update_notification_ui();
    }            
    
    function update_reload(){
      jQuery('.source-badge-wrap .source').addClass('collision_refresh').attr('title', 'Click here to refresh the ticket');
    }                                     
    
    function humanize_name_list(data, action) {
      var text = '';
      if (data.length == 1) {
        text = '<strong>' + data[0] + '</strong> is also ' + action + '.';
      } else if (data.length == 2) {
        text = '<strong>' + data[0] + '</strong> and <strong>' + data[1] + '</strong>  are also ' + action + '.';
      } else if (data.length > 2)  {
        text = '<strong>' + data[0] + '</strong> and <strong>' + (data.length - 1) + ' more </strong>  are also ' + action + '.';
      }

      return text;
    }
    
    function update_notification_ui(){   
      agents.viewing = agents.viewing.uniq();
      agents.replying = agents.replying.uniq();
      jQuery("#agents_viewing").toggleClass("active", (agents.viewing.size() != 0) ).effect("highlight", { color: "#fffff3" }, 400);
      jQuery("#agents_viewing .flip-back").html(agents.viewing.size());
      jQuery("#agents_replying").toggleClass("active", (agents.replying.size() != 0) ).effect("highlight", { color: "#fffff3"  }, 400);      
      jQuery("#agents_replying .flip-back").html(agents.replying.size());
      jQuery(".list_agents_replying").toggleClass("hide", (agents.replying.size() == 0) ).html(humanize_name_list(agents.replying, 'replying'));
    }

    jQuery(document).ready(function() {   
      var socket = io.connect('<%= nodejs_url("collision") %>');

      jQuery(document).unbind('disconnectNode');
      jQuery(document).bind('disconnectNode', function(ev){
        socket.socket.disconnect();
      });

      socket.on('connect', function() {
          
          socket.emit('set_params', init_params);  
          socket.on('ready', function(){    
            socket.emit('get_exiting_viewers', init_params.account_id);
            socket.emit('get_exiting_replying', init_params.account_id);

            jQuery('div[rel=emitter]').bind("visibility", function(ev){
              // Emitting a node message when agent is replying, forwarding or adding a note inside the ticket details page
              socket.emit((jQuery(this).data("nodeName") + ((jQuery(this).css("display") == "block") ? "" : "_stopped")), init_params.account_id )
            });   
          });     

          <% unless @draft.nil? %>
            jQuery('#cnt-reply').trigger("visibility");
          <% end %>
      });

      socket.socket.on('error', function (error_msg){
        //console.log('Unable to connect Socket.IO', error_msg);
      });
 
      socket.on('message', function(_params){
        params = JSON.parse(_params);

        switch(params.type){
          case "connected":
            agents.viewing.push(params.agent);
          break;
          case "disconnected":
            agents.replying = agents.replying.without(params.agent);  
            agents.viewing = agents.viewing.without(params.agent);
          break;
          case "agent_replying":   
            agents.viewing = agents.viewing.without(params.agent); 
            agents.replying.push(params.agent);
          break;
          case "agent_replying_stopped":
            agents.viewing.push(params.agent);                
            agents.replying = agents.replying.without(params.agent);
          break;
          case "updated":  
            update_reload();
          break;
        }                      
        update_notification_ui();
      });
    
      socket.on('recieve_existing_viewers', update_viewing); 
      socket.on('recieve_existing_replying', update_replying);
 
      //jQuery('.conversation_thread div[rel=emitter]').watch("display,visibility", function() { showStatus("changed...") });

      jQuery("[rel=notice-popover]")      
          .popover({
            html: true,           
            trigger: "manual",
            content: function(){
              container = "";
              if(this.id != "notification"){
                agents[jQuery(this).data("object")].each(function(item){
                  container += "<div>" + item + "</div>";
                });                         
              }else{
                container += "Click to refresh ticket...";
              }
              return container;
            },
            template: '<div class="arrow notice-arrow"></div><div class="ticket-notice-popover"><div class="title"></div><div class="content"><p></p></div></div>'
          }).live({ 
            mouseenter: function(){  
              if(jQuery(this).hasClass("active"))
                jQuery(this).popover('show');
            }, 
            mouseleave: function(){
              jQuery(this).popover('hide');
            }
          });
                    
    });  
    
<% end %>
<% end %>