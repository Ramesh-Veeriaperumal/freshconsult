<%= javascript_tag do %> 
  function lookup(searchString, callback) { 
    new Ajax.Request('<%=requesters_search_autocomplete_index_path%>?q='+encodeURIComponent(searchString), 
                                              { 
                                              method : "GET",
                                              onSuccess: function(response) {
                                                var choices = $A();
                                                response.responseJSON.results.each(function(item){
                                                  choices.push([item.details, item.details]);
                                                });                                                
                                                callback(choices);
                                              } });
                                            }
  var cachedBackend = new Autocompleter.Cache(lookup, {searchKey: 0, choices: 10});
  var cachedLookup = cachedBackend.lookup.bind(cachedBackend);

<% end %>
<%
  hide_class = conv_id.nil? ? "hide" : "" 
  note_details_id = conv_id.nil? ? "" : "note_details_#{@note.id}"
  %>
<div class="request_panel <%=hide_class%>" id="<%=cntid%>" rel="emitter" data-node-name="agent_replying">
  
  <div class="form_title"><%= t('.title') %></div>
  <%= form_for note, :url => reply_to_forward_helpdesk_ticket_conversations_path(@ticket), :html => { 
                        :multipart => true, 
                        :id => "HelpdeskReplyFwd_#{@note.id}",
                        "rel"  => "reply_to_forward_form",
                        "data-panel" => cntid,
                        "data-form" => "inline_form",
                        "data-show-pseudo-reply" => 'true',
                        "data-fetch-latest" => 'true',
                        "data-cnt-id" => cntid,
                        "data-destroy-editor" => 'true',
                        "data-fulltext" => true
                      } do |f| %>
    <%= f.error_messages %>

    
    <ul class="ui-form dont-validate botm-space">
      <li class="inline-field field" >
        <%= f.label(:reply_email, t("ticket.from"), :class => "mailaddr-label from" ) %>
        <input type="checkbox" class="hide" id="include_cc" name="include_cc"  <%=@note.cc_emails.blank? ? "" : "checked" %>  />
        <input type="checkbox" class="hide" id="include_bcc" name="include_bcc" <%=bcc_drop_box_email.blank? ? "" : "checked" %> />
        <span>
          <%= @selected_reply_email %>
        </span>
      </li>


      <li class="inline-field field cc_fields" id="to-form-container-<%=cntid%>">
        <label class = "mailaddr-label" for="to_emails_<%=cntid%>"><%= t(".to") %>:</label>
        <div class="request_form_options">
          <a  href="#" rel="toggle_email_container" id="add_cc_btn_<%=cntid%>"
              class="<%=@note.cc_emails.blank? ? '' : 'hide' %>" 
              data-container="cc-form-container-<%=cntid%>" 
              data-toggle-button="add_cc_btn_<%=cntid%>"
              data-toggle-checkbox="include_cc">
            <%= t(".cc") %>
          </a>
          <a  href="#" rel="toggle_email_container" id="add_bcc_btn-<%=cntid%>" 
              class="<%=bcc_drop_box_email.blank? ? '' : 'hide' %> "
              data-container="bcc-form-container-<%=cntid%>"
              data-toggle-button="add_bcc_btn-<%=cntid%>" 
              data-toggle-checkbox="include_bcc" >
            <%= t(".bcc") %>
          </a>
        </div>
        <div class="email_container">
          <input type="text" id="to_emails_<%=cntid%>" name="helpdesk_note[to_emails]" />
          <%= javascript_tag do -%>
            new Autocompleter.MultiValue("to_emails_<%=cntid%>", cachedLookup, $A(<%= @to_email.map{|item|[item, item]}.to_json.html_safe %> ), {frequency: 0.1, acceptNewValues: true,separatorRegEx:/;|,/});
          <%- end %>
        </div>
      </li>

      <li class="inline-field field <%=@note.cc_emails.blank? ? "hide" : "" %> cc_fields" id="cc-form-container-<%=cntid%>">
        <label class = "mailaddr-label" for="cc_emails_<%=cntid%>"><%= t(".cc") %>:</label>
        <a href="#" class="clear_emails" rel='toggle_email_container' 
            data-container="cc-form-container-<%=cntid%>" 
            data-toggle-button="add_cc_btn_<%=cntid%>" 
            data-clear="true"><%= t('clear') %>
        </a>
            <div class="email_container">
              <input type="text" id="cc_emails_<%=cntid%>" name="helpdesk_note[cc_emails]" />
              <%= javascript_tag do %>
                new Autocompleter.MultiValue("cc_emails_<%=cntid%>", cachedLookup, $A(<%= @to_cc_emails.map{|item|[item, item]}.to_json.html_safe %>), {frequency: 0.1, acceptNewValues: true,separatorRegEx:/;|,/});
              <% end %>
            </div>
      </li>
      <li class="inline-field field <%=bcc_drop_box_email.blank? ? "hide" : '' %>  cc_fields" id="bcc-form-container-<%=cntid%>">
        <label class = "mailaddr-label" for="cc_emails_<%=cntid%>"><%= t(".bcc") %>:</label>
        <a href="#" class="clear_emails" rel='toggle_email_container' 
            data-container="bcc-form-container-<%=cntid%>" 
            data-toggle-button="add_bcc_btn-<%=cntid%>" 
            data-clear="true"><%= t('clear') %></a>
        <div class="email_container">
          <input type="text" id="bcc_emails_<%=cntid%>" name="helpdesk_note[bcc_emails]" />
          <%= javascript_tag do %>
            new Autocompleter.MultiValue("bcc_emails_<%=cntid%>", cachedLookup, $A(<%= bcc_drop_box_email.to_json.html_safe unless bcc_drop_box_email.blank? %>), {frequency: 0.1, acceptNewValues: true,separatorRegEx:/;|,/});
          <% end %>
        </div>
      </li>
      <li class="inline-field field clearField message">
        <%= render :partial => 'helpdesk/tickets/show/editor_insert_buttons', :locals => { :cntid => cntid } %>
        <% conv_item = conv_id.nil? ? @ticket : @note %>
        <%= f.fields_for(:note_body, Helpdesk::NoteBody.new) do |ff| %>
            <%= ff.text_area :body_html, :class => "required", :id => "#{cntid}-body", 
                              :value => bind_last_conv(conv_item, @signature, true),
                              :"data-quoted-textarea" => "##{cntid}-quoted", :"data-wrap-font-family" => true %>
            <%= ff.text_area :full_text_html, :id => "#{cntid}-body-fulltext", :value => "", :style => "display:none;" %>
            <%= text_area_tag "quoted_text_html", quoted_text(conv_item), { :id => "#{cntid}-quoted", :class => "hide" } %>
        <% end %>        
      </li>
      <li class="inline-field field continous file_size_alert hide" id="file_size_alert_<%= cntid %>">
        <span class="alert-text"><%= t('helpdesk.tickets.show.reply_form.not_sent') %></span>
        <%= t('helpdesk.tickets.note.attachment_size.exceed') %>
      </li>
      <li class="inline-field field attachment-options continous" id="attachment-options-reply">
          <% unless local_assigns[:no_attachments] %>
          <%= render :partial => "/helpdesk/tickets/show/attachment_form", :locals => { :attach_id => "reply-to-forward-#{@note.id}" , :nsc_param => "helpdesk_note" } %>
          <% end %>    
      </li>
    </ul>
    
      <%= f.hidden_field :private , :value => true %>
      <%= f.hidden_field :category , :value => Helpdesk::Note::CATEGORIES[:reply_to_forward] %>
      <!--reply source will be always email-->
      <%= f.hidden_field :source , :value => Helpdesk::Note::SOURCE_KEYS_BY_TOKEN["note"] %>
      <%= f.hidden_field :from_email, :id => "reply_from_email_#{cntid}", :value => @selected_reply_email%>
      <%= f.hidden_field :email_config_id, :value => @selected_email_config_id %>
      <%= hidden_field_tag(:page , params[:page], :id=>:page  ) unless params[:page].nil? %>
    
<!--       <div id="toggle-note-visibility">
        <label><%= t("helpdesk.tickets.note.public_note_tip") %></label>
      <div>  -->

      <div class="button-container">   

        <%= button_to_function(t('cancel'), "jQuery('##{cntid}').hide()", :class => "btn cancel_btn cancel", :"data-cnt-id" => cntid  ) %>
        <%= submit_tag(t('ticket.reply_form.send'), :class => "btn btn-primary special" ) %>

      </div>

  <% end %>
</div>


<script type="text/javascript">
  invokeRedactor('<%= "#{cntid}-body" %>', 'cnt-reply');
  jQuery('html, body').animate({
        scrollTop: jQuery("#<%= cntid %>").offset().top-110
    }, 100);

</script>
  <%= javascript_tag do %>

    jQuery("#HelpdeskReplyFwd_<%= @note.id%>")      
      .bind("submit", function(ev){
      if(!jQuery('#include_bcc').is(':checked'))
          jQuery('[name="helpdesk_note[bcc_emails][]"]').val('');
          isDirty = false;
      })
      .validate();  

  <% end %>
