<div id="bulkcontent">
<div id="bulkfull">
<div class="bulktickets" id="bulktickets">
<% if privilege?(:edit_ticket_properties) %>
  <div id="update-fields">
    <div class="content clearfix scrollbar">
    <% helpdesk_submit_options = []%>
  	<% current_portal.ticket_fields.each  do |field| %>
      <% next if field.section_field? %>
      <% dom_type = (field.field_type == "nested_field") ? "nested_field" : field.dom_type %>
      <%= ticket_field_element(field, dom_type, {:class => "field-item"}) %>

      <%  if field.has_section?
            field.picklist_values.each do |picklist|
              next if picklist.section.blank?
              %>
              <textarea class="hide" id='<%="picklist_section_#{picklist.id}"%>'>
                <div class="ticket_section">
                <% picklist.section_ticket_fields.each do |section_tkt_field|
                  dom_type = (section_tkt_field.field_type == "nested_field") ? "nested_field" : 
                                                                      section_tkt_field.dom_type
                  %><%= ticket_field_element(section_tkt_field, 
                                             dom_type, 
                                             { :class => "hide field-item",
                                               :style => "display:inline;"},
                                              picklist.id.to_s) %><%
                end
                %>
                </div>
              </textarea>
            <% end
          end
      %>

	  <%end%>
    <div class="field-item">
      <label for="helpdesk_ticket_tags_label" rel="inputcheckbox"><input class="update-check-for-fields" id="helpdesk_ticket_tags_label" name="helpdesk_ticket_tags_label" type="checkbox" value=""><%= t('ticket_fields.fields.tags') %></label>
      <input type="text" id="helpdesk_tags" name="helpdesk[tags]" rel="inputtextbox" />
    </div>
  </div>
</div>
<% end %>
<%= form_for :helpdesk_note,   :html => {  :multipart => true, :id =>"replymultiple"} do |f|%>
<% if privilege?(:reply_ticket) %>
  <div id="reply-fields">
    <div id="content-bulk" class="content clearfix">
      <div class="field-item" id="bulkreplycheck">
        <label for="addbulkreply" rel="inputcheckbox">
          <input id="addbulkreply" type="checkbox" name="Add Bulk Reply" value="addbulkreply" /> Add Bulk Reply
        </label> 
      </div>
      <div class="request_panel clearBoth hide" id="bulkreplyform">
        <%= render :partial => "/helpdesk/tickets/reply_multiple", :locals => { :helpdesk_submit_options=>helpdesk_submit_options, :id => 'reply-multiple', :cntid => "cnt-reply-multiple", :email_configs => current_account.email_configs, :f => f} %>
      </div>
    </div>  
  </div> 
<% end %>
</div>
<div id="bulk-response-group" class="hide">
  <a id="no-response">&laquo; <%= t('canned_folders.back_to_bulk') %></a>
  <div id="bulk_canned_response_holder"> 
  </div> 
</div>
</div>
</div>
<% end %>
<%= javascript_tag do %> 
  jQuery('#ticket_cancel_multiple_button').die('click')
  jQuery('#ticket_cancel_multiple_button').live('click',
   	function(){
  		active_dialog.dialog('close');
   	});

  jQuery("#reply-multiple-cnt-reply-multiple-body").val("");
  jQuery("#reply-multiple-cnt-reply-multiple-body").attr('disabled', true);

  jQuery('#no-response').hide();
  function submitBulkUpdate(){
    if( !($('addbulkreply') && $('addbulkreply').checked) ||
      jQuery("#reply-multiple-cnt-reply-multiple-body").valid()) {
      <%= "reply_multiple_submit('#{update_multiple_helpdesk_bulk_ticket_actions_path}', 'put', jQuery('#update-fields .update-check-for-fields:checked').parent().parent().find('select, input:text').get() )".html_safe %>
      jQuery("#ticket_update_multiple_button, #ticket_cancel_multiple_button").attr('disabled','disabled');
      jQuery('#loader').addClass("sloading loading-small loading-align");      
    }
  }
  jQuery('#no-response').die('click');
  jQuery('#no-response').live('click', function(){
    jQuery('#bulkcontent').css('height','auto');
    jQuery('#bulktickets').removeClass('bulk-tickets-animation', function() {
      jQuery('#bulk-response-group').addClass('hide');
    });
    jQuery('#no-response').toggle('fast');
    jQuery('#clear-search').trigger('click');
});

  jQuery("[rel=inputselectbox],[rel=inputtextbox]").die('change');
 jQuery("[rel=inputselectbox],[rel=inputtextbox]").live('change',  function(ev){
    if(jQuery(this).attr('id')=="helpdesk_ticket_group_id")
    {
      if(jQuery('#helpdesk_ticket_responder_id_label').is(':checked'))
      {
        jQuery('#helpdesk_ticket_responder_id_label').prop('checked', false); 
        jQuery('#helpdesk_ticket_responder_id_label').parent().removeClass('active');
      }
      value=jQuery(this).find(':selected').attr('value');
      groupchange(value);
    }
    if(jQuery(this).val() != ''){
      jQuery(this).parent().find("input").prop("checked", true);
      jQuery(this).parent().find("label").addClass("active");
    }
    else{
    jQuery(this).parent().find("input").prop("checked", false);
    jQuery(this).parent().find("label").removeClass("active");
  }
  }); 
  
  jQuery("[rel=inputcheckbox]").die('click');
  jQuery("[rel=inputcheckbox]").live('click',  function(ev){
    if(jQuery(this).parent().find("input").is(':checked'))
    {
      jQuery(this).addClass("active");
      if(jQuery(this).attr('for')=="addbulkreply")
      {
        jQuery("#bulkreplyform").show();
        jQuery("#bulkreplyform textarea").addClass('required_redactor');
        jQuery("#reply-multiple-cnt-reply-multiple-body")
            .attr('disabled', false)
            .getEditor().focus();
      }
    }
    else
    {
      jQuery(this).removeClass("active");
      jQuery(this).parent().find('.level_2, .level_3').slideUp();
      if(jQuery(this).attr('for')=="addbulkreply")
      {
        jQuery("#bulkreplyform").hide();
        jQuery("#bulkreplyform textarea").val("");
        jQuery("#reply-multiple-cnt-reply-multiple-body").attr('disabled', true);
        jQuery("#bulkreplyform textarea").removeClass('required_redactor');
      }
      jQuery(this).parent().find("select").find('option:first').prop('selected', 'selected');
      }
    });

function groupchange(value){
    this.value = value;
    jQuery('#helpdesk_ticket_responder_id')
             .html("<option value=''><%=t('select')%></option>");
	 blank_value = "No Change";
     jQuery.ajax({
       type:        'GET',
       url: 		'/helpdesk/commons/group_agents/'+this.value+'?blank_value=<%=t('select')%>',
       contentType: 'application/text',
       success:     function(data){

                        jQuery('#helpdesk_ticket_responder_id')
                         .html(data);
                    }
     });
   }
jQuery('.ui-icon-closethick').die('click');
jQuery('.ui-icon-closethick').live('click', function(){
  if(!jQuery('#no-response').is(':hidden'))
    jQuery('#no-response').click();
});

      jQuery("#replymultiple").on("submit",function(e){
        submitBulkUpdate();
      });

    jQuery("#helpdesk_tags").select2({  
      tags: "<%= escape_javascript(current_account.tags.most_used(25).collect{|tag| tag.name}.join(',').html_safe) %>".split(","),
      tokenSeparators: [',']
    });

  // Need to make the code generic to handle the custom dropdown fields sections.
  jQuery("#helpdesk_ticket_ticket_type")
    .on("change", function(e){
      var id = jQuery("option:selected", this).data("id");
      jQuery('.ticket_section').remove();
      var element = jQuery('#picklist_section_'+id).parent();
      if(element.length != 0) {
        jQuery(jQuery('#picklist_section_'+id).val()
                .replace(new RegExp('&lt', 'g'), '<')
                .replace(new RegExp('&gt', 'g'), '>'))
              .insertAfter(jQuery("#helpdesk_ticket_ticket_type").parent());
      }
  });
<% end %>
