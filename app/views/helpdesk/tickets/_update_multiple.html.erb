<% if current_account.parent_child_tkts_enabled? %>
  <div class="alert notice parent_error_alert hide">

    <a href="#" onclick="jQuery('.parent_error_alert').hide();return false;" class="close"></a>
  </div>
<% end %>
<div id="bulkcontent">
<div id="bulkfull">
<div class="bulktickets" id="bulktickets">
<% if privilege?(:edit_ticket_properties) %>
  <div id="update-fields">
    <div class="content clearfix scrollbar">
    <% helpdesk_submit_options = []
      ticket_fields = current_portal.ticket_fields
      if current_account.shared_ownership_enabled?
        default_field_order = TicketConstants::SHARED_DEFAULT_FIELDS_ORDER.keys
        default_fields  = ticket_fields.select{|tf| default_field_order.include?(tf.field_type)}
        other_fields    = ticket_fields - default_fields
        default_fields.sort! {|x,y| default_field_order.index(x.field_type).to_i <=> default_field_order.index(y.field_type).to_i }
        ticket_fields = (default_fields + other_fields)
      end
      %>
  	<% ticket_fields.each  do |field| %>
      <% next if field.section_field? %>
      <% dom_type = (field.field_type == "nested_field") ? "nested_field" : field.dom_type %>
      <%= ticket_field_element(field, dom_type, {:class => "field-item #{field.field_name}"}) %>

      <%  if field.has_section?
            field.picklist_values.each do |picklist|
              next if picklist.section.blank?
              %>
              <textarea class="hide" id='<%="picklist_section_#{picklist.id}"%>'>
                <div class="ticket_section">
                <% picklist.section_ticket_fields.each do |section_tkt_field|
                  dom_type = (section_tkt_field.field_type == "nested_field") ? "nested_field" :
                                                                      section_tkt_field.dom_type
                  %><%= ticket_field_element(section_tkt_field,
                                             dom_type,
                                             { :class => "hide field-item",
                                               :style => "display:inline;"},
                                              picklist.id.to_s) %><%
                end
                %>
                </div>
              </textarea>
            <%  end
          end
      %>

	  <%end%>
    <% unless select_all%>
      <div class="field-item">
        <label for="helpdesk_ticket_tags_label" rel="inputcheckbox"><input class="update-check-for-fields" id="helpdesk_ticket_tags_label" name="helpdesk_ticket_tags_label" type="checkbox" value=""><%= t('ticket_fields.fields.tags') %></label>
        <input type="text" id="helpdesk_tags" name="helpdesk[tags]" rel="remote-tag" data-allow-create = <%= current_user.privilege?(:create_tags)%> />
      </div>
    <% end %>
  </div>
</div>
<% end %>
<%= form_for :helpdesk_note,   :html => {  :multipart => true, :id =>"replymultiple"} do |f|%>
<% if privilege?(:reply_ticket) && !select_all%>
  <div id="reply-fields">
    <div id="content-bulk" class="content clearfix">
      <div class="field-item" id="bulkreplycheck">
        <label for="addbulkreply" rel="inputcheckbox">
          <input id="addbulkreply" type="checkbox" name="Add Bulk Reply" value="addbulkreply" /> Add Bulk Reply
        </label>
      </div>
      <div class="request_panel clearBoth hide" id="bulkreplyform">
        <%= render :partial => "/helpdesk/tickets/reply_multiple", :locals => { :helpdesk_submit_options=>helpdesk_submit_options, :id => 'reply-multiple', :cntid => "cnt-reply-multiple", :email_configs => current_account.email_configs, :f => f} %>
      </div>
    </div>
  </div>
  <input type="hidden" value="<%= search_term %>" name="search_term">
<% end %>
</div>

<div id="bulk-response-group" class="hide">
  <a id="no-response">&laquo; <%= t('canned_folders.back_to_bulk') %></a>
  <a href="/helpdesk/canned_responses/folders" target="_blank" class="pull-right modal-bulk-header-button"><%= t('ticket.create_new_ca') %></a>
  <div id="bulk_canned_response_holder">
  </div>
</div>
<% if select_all %>
  <div class="admin_bulk_actions_notification hide">
    <%= t('ticket.admin_select_all.bulk_all_notification.text',
            :count => "<span class='admin_select_all_ticket_count'></span>"
        ).html_safe
    %><br/>
    <%= t('ticket.admin_select_all.please_note') %>
    <ol class="admin_select_all_notification_list">
      <li><%= t('ticket.admin_select_all.bulk_all_notification.list1') %></li>
      <li><%= t('ticket.admin_select_all.bulk_all_notification.list2') %></li>
      <li><%= t('ticket.admin_select_all.bulk_all_notification.list3') %></li>
    </ol>
    <%= t('ticket.admin_select_all.bulk_all_notification.are_you_sure') %>
  </div>
<% end %>
</div>
<% if select_all %>
  <div class="button-container">
    <a href="javascript:void(0)" class="btn hide" id="bulk_back"><%= t('back') %></a>
    <a href="javascript:void(0)" class="btn" id="bulk_cancel" data-dismiss="modal"><%= t('cancel') %></a>
    <a href="javascript:void(0)" class="btn btn-primary" id="bulk_toggle"><%= t('confirm') %></a>
    <%= submit_tag t('update'),:class => "btn btn-primary hide",
      "data-submit" => "modal", :id => "bulk_submit",
      "data-loading-text" => t('please_wait')
    %>
  </div>
<% end %>
</div>
<% end %>
<%= javascript_tag do %>
  var parentChildFeatureEnabled = <%= current_account.parent_child_tkts_enabled? %>;
  var groupToStatusText = "<%= I18n.t('internal_group_actions') %>";
  var agentToGroupText = "<%= I18n.t('internal_agent_actions') %>";
  var MAX_TAG_LENGTH_MSG = "<%= I18n.t('helpdesk.tickets.show.max_tag_length_msg') %>";
  var enableDropDowns = false;
  var sharedOwnershipEnabled = <%= current_account.shared_ownership_enabled? %>;

  jQuery('#ticket_cancel_multiple_button').off('click')
  jQuery('#ticket_cancel_multiple_button').on('click', function(){
  		active_dialog.dialog('close');
 	});

  jQuery("#reply-multiple-cnt-reply-multiple-body").val("");
  jQuery("#reply-multiple-cnt-reply-multiple-body").attr('disabled', true);
  <% if select_all %>
    updateNotificationTicketCount();
    function updateNotificationTicketCount() {
      var tkt_count = parseInt(jQuery("#ticket_list_count").text());
      if (!isNaN(tkt_count) && jQuery(".admin_select_all_ticket_count").length > 0){
        jQuery(".admin_select_all_ticket_count").text(tkt_count);
      }
    }
    var switchBulkActionTab = function(){
      jQuery("#bulk_toggle").toggleClass("hide");
      jQuery("#bulk_back").toggleClass("hide");
      jQuery("#bulk_submit").toggleClass("hide");
      jQuery("#bulktickets").toggleClass("hide");
      jQuery(".admin_bulk_actions_notification").toggleClass("hide");
    }
    jQuery("#bulk_toggle, #bulk_back").bind("click", function(ev){
      switchBulkActionTab();
    });

    jQuery("#bulk_cancel").bind("click", function(ev){
      if(jQuery("#bulk_toggle").hasClass("hide")){
        switchBulkActionTab();
      }
    })
  <% end %>
  jQuery('#no-response').hide();
  function submitBulkUpdate(){
    if( !($('addbulkreply') && $('addbulkreply').checked) ||
      jQuery("#reply-multiple-cnt-reply-multiple-body").valid()) {
      <% unless select_all %>
        <%= "reply_multiple_submit('#{update_multiple_helpdesk_bulk_ticket_actions_path}', 'put', jQuery('#update-fields .update-check-for-fields:checked').parent().parent().find('select, input:text, input#bulk_customers_filter').get() )".html_safe %>
      <% else %>
        <%= "helpdesk_generic_submit('replymultiple', '#{update_multiple_helpdesk_select_all_ticket_actions_path}', 'put', (jQuery('#update-fields .update-check-for-fields:checked').parent().parent().find('select, input:text').get()).concat(jQuery('#FilterOptions').serializeArray()))".html_safe %>
      <% end %>
      jQuery("#ticket_update_multiple_button, #ticket_cancel_multiple_button").attr('disabled','disabled');
      jQuery('#loader').addClass("sloading loading-small loading-align");
    }
  }
  jQuery('#no-response').off('click');
  jQuery('#no-response').on('click', function(){
    jQuery('#bulkcontent').css('height','auto');
    jQuery('#bulktickets').removeClass('bulk-tickets-animation', function() {
      jQuery('#bulk-response-group').addClass('hide');
    });
    jQuery('#no-response').toggle('fast');
    jQuery('#clear-search').trigger('click');
});

  jQuery("[rel=inputselectbox],[rel=inputtextbox],#helpdesk_tags").off('change');
  jQuery('body').on('change', "[rel=inputselectbox],[rel=inputtextbox],#helpdesk_tags",  function(ev){
    if(jQuery(this).attr('id')=="helpdesk_ticket_group_id" && jQuery("#helpdesk_ticket_group_id").val() != "-1")
    {
      if(jQuery('#helpdesk_ticket_responder_id_label').is(':checked'))
      {
        jQuery('#helpdesk_ticket_responder_id_label').prop('checked', false);
        jQuery('#helpdesk_ticket_responder_id_label').parent().removeClass('active');
      }
      value=jQuery(this).find(':selected').val();
      jQuery('.responder_id label').addClass('sloading loading-small loading-right');

      groupchange(value);
    }
    if(jQuery(this).attr('id')=="bulk_customers_filter"){
      if(jQuery(this).val() == ""){
        jQuery(this).parent().parent().find("label").removeClass("active");
        jQuery(this).parent().parent().find("#helpdesk_ticket_company_id_label").prop("checked", false);
      } else {
        jQuery(this).parent().parent().find("#helpdesk_ticket_company_id_label").prop("checked", true);
        jQuery(this).parent().parent().find("label").addClass("active");
      }
    }
    if(jQuery(this).val() != ''){
      jQuery(this).parent().find("input").prop("checked", true);
      jQuery(this).parent().find("label").addClass("active");
    }
    else{
    jQuery(this).parent().find("input").prop("checked", false);
    jQuery(this).parent().find("label").removeClass("active");
  }
  });

  jQuery("[rel=inputcheckbox]").off('click');
  jQuery("[rel=inputcheckbox]").on('click',  function(ev){
    if(jQuery(this).parent().find("input").is(':checked'))
    {
      jQuery(this).addClass("active");
      if(jQuery(this).attr('for')=="addbulkreply")
      {
        jQuery("#bulkreplyform").show();
        jQuery("#bulkreplyform textarea").addClass('required_redactor');
        jQuery("#reply-multiple-cnt-reply-multiple-body")
            .attr('disabled', false)
            .getEditor().focus();
      }
    }
    else
    {
      jQuery(this).removeClass("active");
      jQuery(this).parent().find('.level_2, .level_3').slideUp();
      if(jQuery(this).attr('for')=="addbulkreply")
      {
        jQuery("#bulkreplyform").hide();
        jQuery("#bulkreplyform textarea").val("");
        jQuery("#reply-multiple-cnt-reply-multiple-body").attr('disabled', true);
        jQuery("#bulkreplyform textarea").removeClass('required_redactor');
      }
      jQuery(this).parent().find("select").find('option:first').prop('selected', 'selected');
      }
  });

  function groupchange(value){
    this.value = value;
    jQuery('#helpdesk_ticket_responder_id').html("<option value=''><%=t('select')%></option>");
    jQuery("#bulk-submit, #bulk-cancel").attr('disabled', 'disabled');
    blank_value = "No Change";
    jQuery.ajax({
      type:        'GET',
      url: 		'/helpdesk/commons/group_agents/'+this.value+'?blank_value=<%=t('select')%>&allow_none=true',
      contentType: 'application/text',
      success:     function(data){
          jQuery('#helpdesk_ticket_responder_id').html(data);
          jQuery('.responder_id label').removeClass('sloading loading-small loading-right');
          jQuery("#bulk-submit, #bulk-cancel").removeAttr('disabled');
      }
    });
  }

  jQuery('.ui-icon-closethick').off('click');
  jQuery('.ui-icon-closethick').on('click', function(){
    if(!jQuery('#no-response').is(':hidden'))
      jQuery('#no-response').click();
  });

  jQuery("#replymultiple").on("submit",function(e){
    submitBulkUpdate();
  });

  jQuery(".dynamic_sections")
    .on("change", function(e){
      var id;
      var selected = jQuery(this).find(':selected');
      if (selected.length > 0){
        id = selected.data().id;
      }
      var nextElement = jQuery(this).parent().next();
      if (nextElement.hasClass('ticket_section')){
        nextElement.remove();
      }
      var element = jQuery('#picklist_section_'+id).parent();
      if(element.length != 0) {
        jQuery(jQuery('#picklist_section_'+id).val()
              .replace(new RegExp('&lt', 'g'), '<')
              .replace(new RegExp('&gt', 'g'), '>'))
            .insertAfter(jQuery("#"+this.id).parent());
      }
  });

  //code added for shared-ownership changes
  if(sharedOwnershipEnabled){
    //add info icons dynamically
    jQuery('.internal_group_id label').append("&nbsp;<i class='ficon-notice-o ficon-rotate-180deg tooltip'></i>");
    jQuery('.internal_group_id label .ficon-notice-o').attr('title', groupToStatusText);

    jQuery('.internal_agent_id label').append("&nbsp;<i class='ficon-notice-o ficon-rotate-180deg tooltip'></i>");
    jQuery('.internal_agent_id label .ficon-notice-o').attr('title', agentToGroupText);

    jQuery('body').on('click', '.isDisabled .ficon-notice-o.ficon-rotate-180deg', function(e){
        e.preventDefault();
        e.stopPropagation();
    });

    //check for status of the tickets and disable internal dropdowns if status not equal
    var is_search_page = window.location.pathname.indexOf("search") > -1 ? true : false
    var ticketStatuses = is_search_page ? jQuery("#search-page-results :checkbox:checked") : jQuery('.tickets tbody tr .check :checkbox:checked');
    function checkForTicketStatus(){
      if(ticketStatuses.length > 1){
        var size = ticketStatuses.length;
        ticketStatuses.each(function(index, element){
          if(index < (size-1)){
            if(element.getAttribute('data-ticket-status') === ticketStatuses[index+1].getAttribute('data-ticket-status')){
              enableDropDowns = true;
            }else{
              enableDropDowns = false;
              return false;
            }
          }
        });
      }else{
        enableDropDowns = true;
      }

      jQuery('.internal_group_id, .internal_agent_id').addClass('isDisabled');
      if(enableDropDowns){
        loadGroupsForStatus("", ticketStatuses[0].getAttribute('data-ticket-status'));
      }
    }

    checkForTicketStatus();

    function loadGroupsForStatus(prev_val, status){
      jQuery('.internal_group_id label').addClass('sloading loading-small loading-right');
      jQuery("#bulk-submit, #bulk-cancel").attr('disabled', 'disabled');
      var url = "/helpdesk/commons/status_groups?status_id=";
      jQuery.ajax({
        type: "GET",
        url: prev_val == "" ? url+status : url+status+"&group_id="+prev_val,
        contentType: "application/text",
        success: function(data){
          jQuery('.internal_group_id #helpdesk_ticket_internal_group_id').html(data).trigger('change');
          jQuery('.internal_group_id label').removeClass('sloading loading-small loading-right');
          jQuery("#bulk-submit, #bulk-cancel").removeAttr('disabled');
          var select_group = jQuery('.internal_group_id select')[0];
          if(select_group.options.length > 1){
            jQuery('.internal_group_id').removeClass('isDisabled');
          }else{
            jQuery('.internal_group_id').addClass('isDisabled');
            select_group.options[0].text = "...";
            jQuery('.internal_group_id select').trigger('change');
          }
        }
      });
    }

    jQuery('#bulktickets #helpdesk_ticket_status').change(function(event){
      var select_group = jQuery('.internal_group_id select')[0];
      var prev_val = select_group.options[select_group.selectedIndex].value;
      var status = jQuery(".status #helpdesk_ticket_status").val();
      if(jQuery('#helpdesk_ticket_internal_group_id_label').is(':checked'))
      {
        jQuery('#helpdesk_ticket_internal_group_id_label').prop('checked', false);
        jQuery('#helpdesk_ticket_internal_group_id_label').parent().removeClass('active');
      }
      loadGroupsForStatus(prev_val, status);
    });

    jQuery('#bulktickets #helpdesk_ticket_internal_group_id').change(function(e){
      jQuery('.internal_agent_id label').addClass('sloading loading-small loading-right');
      var select_group = jQuery('#bulktickets .internal_agent_id select')[0];
      var prev_val = select_group.options[select_group.selectedIndex].value;
      if(jQuery('#helpdesk_ticket_internal_agent_id_label').is(':checked'))
      {
        jQuery('#helpdesk_ticket_internal_agent_id_label').prop('checked', false);
        jQuery('#helpdesk_ticket_internal_agent_id_label').parent().removeClass('active');
      }
      jQuery("#bulk-submit, #bulk-cancel").attr('disabled', 'disabled');
      if(this.value){
        url = '/helpdesk/commons/group_agents/';
        jQuery.ajax({
          type: 'GET',
          url:  prev_val == "" ? url+this.value : url+this.value+"?agent="+prev_val,
          contentType: 'application/text',
          success: function(data){
            jQuery('.internal_agent_id #helpdesk_ticket_internal_agent_id').html(data).trigger('change');
            jQuery('.internal_agent_id label').removeClass('sloading loading-small loading-right');
            jQuery("#bulk-submit, #bulk-cancel").removeAttr('disabled');
            var select_agent = jQuery('.internal_agent_id select')[0];
            if(select_agent.options.length > 1){
              jQuery('.internal_agent_id').removeClass('isDisabled');
            }else{
              jQuery('.internal_agent_id').addClass('isDisabled');
              select_agent.options[0].text = "...";
              jQuery('.internal_agent_id select').trigger('change');
            }
          }
        });
      }else{
        jQuery('.internal_agent_id').addClass('isDisabled');
        jQuery('#helpdesk_ticket_internal_agent_id').html("<option value=''>...</option>").trigger('change');
        jQuery('.internal_agent_id label').removeClass('sloading loading-small loading-right');
        jQuery("#bulk-submit, #bulk-cancel").attr('disabled', 'false');
        jQuery("#bulk-submit, #bulk-cancel").removeAttr('disabled');
      }
    });

  }

  jQuery('#helpdesk_ticket_responder_id').append("<option value='-1'><%= t("unassign") %></option>");
  jQuery('#helpdesk_ticket_group_id').append("<option value='-1'><%= t("unassign") %></option>");

  //code added for parent child
  if(parentChildFeatureEnabled){
    jQuery('body').on('change', '#helpdesk_ticket_status', function(e){
      if((this.value == "4" || this.value == "5") && confirm_text !== ""){
        jQuery('#bulk .modal-body .parent_error_alert').show();
      }else{
        jQuery('#bulk .modal-body .parent_error_alert').hide();
      }
    });
    var association = "1";
    var associated = 0;
    var confirm_text = "";
    jQuery('#ticket-list tr.active').each(function(){
      if (jQuery(this).data('association') == association) {
        associated++;
      }
    });
    if(associated > 0){
      confirm_text = I18n.t('ticket.association.bulk_close_tickets', { count: associated });
      jQuery('#bulk .modal-body .parent_error_alert').prepend(confirm_text);
    }
  }
<% end %>
