<% content_for :pagefixed do %>
	<%= javascript_include_tag "helpdesk/multifile.js" %>	
  <%= javascript_include_tag "helpdesk/page_switcher" %>
	<% javascript_tag do %>
		swapEmailNote = function(action, link)
		{
			if(action == "reply")
			{
				jQuery('#cnt-note').hide();
				jQuery('#cnt-tweet').hide();
				jQuery('#cnt-fb-post').hide();
				jQuery('#cnt-reply').toggle();
				tinyMCE.execInstanceCommand("send-email-cnt-reply-body","mceFocus",false);
			}
			else if (action == "note")
			{
				jQuery('#cnt-reply').hide();
				jQuery('#cnt-tweet').hide();
				jQuery('#cnt-fb-post').hide();
				jQuery('#cnt-note').toggle();
				//setCaretToPos($('add-note-cnt-note-body'), 0);
			}
			else if (action == "fb_post")
			{
				jQuery('#cnt-reply').hide();
				jQuery('#cnt-tweet').hide();
				jQuery('#cnt-note').hide();
				jQuery('#cnt-fb-post').toggle();
				setCaretToPos($('send-fb-post-cnt-fb-post-body'), 0);
			
			}
			else
			{
				jQuery('#cnt-reply').hide();
				jQuery('#cnt-note').hide();
				jQuery('#cnt-fb-post').hide();
				jQuery('#cnt-tweet').toggle();
				setCaretToPos($('send-tweet-cnt-tweet-body'), 0);			
			}
		}
		Helpdesk.swapEmailNote = function(cls, private, submit, link, id){
			var el = $(id);
			el.show();
			if(private){
				el.down('li[datafor=note]').show();
				el.down('li[datafor=email]').hide();	
			}else{
				el.down('li[datafor=email]').show();
				el.down('li[datafor=note]').hide();
			}
			el.down('input[type=submit]').value = submit;
			el.down('input[id$=private]').value = private;
			
			link.addClassName('active');
			link.siblings().each(function(l){ l.removeClassName('active'); });
		}
		Helpdesk.submitToTicket = function(cls, private, submit, link){			 
			var el = $('note-form-container');
			el.down('input[id$=private]').value = private;
			if(el.down('textarea').value.trim() != ''){
				el.down('form').submit();
			}
		}
		
    jQuery(document).ready(function(){
      var activeCnt = jQuery("#TicketProperties"); 
      jQuery(".rtPanel a").bind("click", function(e){
        e.preventDefault();
        
        var link = this;
        activeCnt.hide().removeClass(link.getAttribute("classname"));
        activeCnt.parent().get(0).className = "rtDetails";
        if(!$(link.getAttribute("cntid"))){
          jQuery("#componentlist").addClass("loading-center");
          activeCnt = jQuery("<div class='' />")
                        .attr("id", link.getAttribute("cntid"))
                        .appendTo("#componentlist");
          jQuery.ajax({
              url:      link.href, 
              success:  function(data){
                          jQuery("#"+link.getAttribute("cntid"))
                              .append(data);
                          jQuery("#componentlist").removeClass("loading-center");
                        }
                      });
        }else{
          activeCnt = jQuery("#"+link.getAttribute("cntid")).show();
        }        
        activeCnt.parent().addClass(link.getAttribute("classname"));
        jQuery(link).parent().find(".active").removeClass("active");
        jQuery(link).addClass("active")
      });
      
      jQuery('#custom_ticket_form').validate(); 


      // Updating Various items when a Timeentry is added or removed
      jQuery('#timesheetlist div.timeentry').livequery(function(ev){
        jQuery('#timesheet_count').html(jQuery('#timesheetlist div.timeentry').size());
      }, function(ev){
        jQuery('#timesheet_count').html(jQuery('#timesheetlist div.timeentry').size());
      });
      
    });

    function show_canned_response(ticket_id){
      jQuery("#canned_response_container")
        .show().addClass("loading");
      jQuery("#canned_response_list")
        .load("/helpdesk/tickets/canned_reponse/"+ticket_id, function(){
          jQuery("#canned_response_container")
            .removeClass("loading");
        })
        .show();        
    }
        
    jQuery("#Merge").dialog2();

		function insertIntoConversation(value){
			note_area  = jQuery('#cnt-note');
			reply_area = jQuery('#cnt-reply');
			tweet_area = jQuery('#cnt-tweet');
			if(note_area.css("display") == 'block'){
				tinyMCE.execInstanceCommand("add-note-cnt-note-body","mceInsertContent",false, value);
			} 
			else if(tweet_area.css("display") == 'block'){
				get_short_url(value, function(bitly){
						insertTextAtCursor( $('send-tweet-cnt-tweet-body'), bitly || value );
						jQuery('#send-tweet-cnt-tweet-body')
								.trigger("focus")
								.trigger("keydown");
				});			
			}
			else{
				if(reply_area.css("display") == 'none')
					jQuery('#ReplyButton').trigger("click");
               
        tinyMCE.execInstanceCommand("send-email-cnt-reply-body","mceInsertContent",false, value);
			}
		}
		
		function getCannedResponse(ticket_id, ca_resp_id){
  	  jQuery("#canned_response_container").addClass("loading")
  		jQuery.ajax({	type: 'POST',
  						url: '/helpdesk/tickets/get_ca_response_content/'+ticket_id+'?ca_resp_id='+ca_resp_id,
  						contentType: 'application/text',
  						async: false,
  						success: function(data){		
  									insertIntoConversation(data);
  							    jQuery("#canned_response_list")
  							      .removeClass("loading")
  							      .hide(300);
  								}
  						});
  		return true;
  	}
	
    jQuery('a.submit').live("click", function(ev){
			ev.preventDefault();
			jQuery(this).button("loading");
			jQuery(this).parents("form").submit();
		});
  <% end %>
<% end %> 
<%= include_tiny_mce_if_needed %>
<% content_for :sidebar do %>
	<%= render :partial => "ticket_sidebar" unless @ticket.deleted %>
<% end %>

	<% if @ticket.deleted %>
		<div class="alert-message block-message warning">
			<div class="alert-actions-right">
      	<%= link_to(t('ticket.restore_btn'), restore_helpdesk_ticket_path(@ticket), :method => :put, :class => "btn small", :title => t('ticket.restore_btn_title') ) %>
    	</div>
  		<p><strong><%=t('this_ticket_has_been_deleted') %></strong></p>
		</div>
  <% end %>
  <div class="request_details">
      <div class="requestCnt request-cnt-first"> 
        <% unless @ticket.deleted %>
          <div class="request_status">
            <ul>
              <li>
                <b><%= t('ticket.status') %></b>: <span id="status_name_id"><%= h(@ticket.status_name) %></span>
              </li>
              <li>
                <b><%= t('ticket.priority') %></b>: <%= h(@ticket.priority_name) %>
              </li>
            </ul>
          </div>
        <% end %>
      <h3 class="title">
        <em><%= "##{@ticket.display_id}" %></em>
        <b><%= h(@ticket.subject) %></b>
      </h3>
			<div class="description">         
        <div class="user_details">
			<%= user_avatar(@ticket.requester)  %>
			<% if is_application_installed?("capsule_crm") %>
				<textarea id="widget-capsule-crm" style="display:none;">
					<% @liquid_objects = {"requester" => @ticket.requester} %>
				 	<%= get_app_widget_script("capsule_crm", "contact_widget", @liquid_objects) %>
				</textarea>
				<div class="app-link">
					<a data-placement="topRight" href="#" rel="widget-popover" data-widget-container="widget-capsule-crm">
						<%= image_tag("application-logo-small/capsule_crm.png") %>
					</a>
				</div> 
	        <% end %>
          <div>
						<%= content_tag :span, "", :class => "custom-tip-bottom icon-image source-#{@ticket.source_name.downcase}", :title => t("ticket.reported_from_source", :source => @ticket.source_name.downcase) %>
            <%= t('ticket.reported_by', :requester => link_to(h(@ticket.requester.display_name),@ticket.requester, :class => "user_name"))%>  
						<%="&lt;#{@ticket.requester.email}&gt;" if @ticket.requester.email%>
          </div>

          <div> 
            <%= t('ticket.created_on', :time => formated_date(@ticket.created_at)) %>
            <% metainfo = @ticket.notes.find_by_source(Helpdesk::Note::SOURCE_KEYS_BY_TOKEN["meta"]) %>
            <% unless (metainfo.blank?) %>
              <span class="meta_icon" title="<%= metainfo.body %>"> 
                <%= t(".meta") %>
              </span>
            <% end %>
          </div> 
        </div>
        <% unless @ticket.deleted %>
          <div class="ticket_actions action_icons">          	
           	<div class="item-right-actions">
        			<ul class="nav-drop"> 
        				<li>
        					<a href="#" class="menu-trigger nav-item-icon"><span class="item-options"></span></a>
                  <ul class="menu-box">
                    <li class="menu-item"> 
                       <%= link_to(t('ticket.edit_btn'), edit_helpdesk_ticket_path(@ticket)  ) %>     
                    </li>	 
                    <li class="menu-item">
                      <%= link_to(t('ticket.delete_btn'), @ticket, :method => :delete, :title => t('ticket.delete_btn_title')) %>
                    </li>
                  </ul>
                </li> 
              </ul>
            </div>
            <div class="action_buttons clearfix">
              <%= link_to( "Print", print_helpdesk_ticket_path(@ticket), :target => "_blank") %>
              <%= link_to t('ticket.merge_btn'), "/helpdesk/tickets/show_tickets_from_same_user/#{@ticket.display_id}", :id => "Merge", :title => "Merge ticket"  %>
              <%= link_to(t('ticket.close_btn'), close_helpdesk_ticket_path(@ticket), :method => :put, :title  => t('ticket.close_btn_title'), :class => "last") unless @ticket.closed? %> 
            </div>	
            <div class="floatr">              
              <span id="monitor">
                <%= render :partial => "/helpdesk/subscriptions/monitor" %>
              </span>
              <span id="spamicon">
                <%= render :partial => "spam", :locals => { :ticket => @ticket } %>
              </span>
            </div>
     	</div>	
      <% end %>
      <div id="description-full" style="display:block" class="request_mail details min_height">
    		<%= @ticket.description_html %>
      </div>
      <% unless @ticket.attachments.empty? %>
        <span class="seperator"></span>
        <h4><%= pluralize(@ticket.attachments.size, t("attachment"), t("attachments")) %></h4>
        <ul class="attachment_list">
          <%= render :partial => '/helpdesk/shared/attachment', :collection => @ticket.attachments, :locals => {:show_delete => true, :url => [@item] } %>
        </ul>
      <% end %>
      <% unless @ticket.ticket_topic.nil? %>
        <div class="info-highlight">
          <%= t(".linked_ticket")%>
          "<%= link_to("#{truncate(@ticket.topic.title)}", category_forum_topic_path(@ticket.topic.forum.forum_category.id, @ticket.topic.forum.id, @ticket.topic.id), :class => "link_to") %>"
        </div>
      <% end %>
    </div>
  </div>
		<div class="request-well">
			<% unless @ticket.deleted %>
				<div class="button-container">
					<%= link_to_function(t('ticket.reply_to'), "swapEmailNote('reply', this)", :class => 'uiButton small', :id => "ReplyButton") unless @item.from_email.nil? %>
					<%= link_to_function("Tweet", "swapEmailNote('tweet', this)", :class => 'uiButton small', :id => "TweetButton") if @item.requester && @item.is_twitter?%>
					<%= link_to_function("Comment", "swapEmailNote('fb_post', this)", :class => 'uiButton small', :id => "FacebookButton") if @item.requester && @item.fb_post%>
					<%= link_to_function(t('ticket.add_note'), "swapEmailNote('note', this)", :class => 'uiButton small', :id => "AddNoteButton") %>		
					<%= link_to_function "Add time", "jQuery('#add_new_time_entry').toggle();", :id => "time_sheet", :title => "Add time entry", :class => "uiButton small" %>
      		
				</div>				
			<% end %>
			
			<% unless @ticket_notes.blank? && @ticket.time_sheets.blank? %>
				<ul class="tabs" data-tabs="tabs">
      		<li>
						<a href="#Pages">
							<h4 class="title">Conversation <span class="pill"><%= @ticket_notes.size %></span></h4>
						</a>
					</li>
      		<li class="active">
						<a href="#timesheet">
							<h4 class="title">Time sheet <span class="pill" id="timesheet_count"><%= @ticket.time_sheets.size %></span></h4>
						</a>
					</li>
    	  </ul>
    	<% end %>
		  </div>
			<%= render(:partial => '/helpdesk/shared/reply_form', :locals => { :id => 'send-email', :cntid => 'cnt-reply', :note => [@ticket, Helpdesk::Note.new(:private => false)] }) %>

			<%= render(:partial => '/helpdesk/shared/note_form', :locals => { :id => 'add-note',	:cntid => "cnt-note", :note => [@ticket, Helpdesk::Note.new(:private => true)] }) %>

			<%= render(:partial => '/helpdesk/shared/tweet_form', :locals => {:id => 'send-tweet', :cntid => 'cnt-tweet', :note => [@ticket, Helpdesk::Note.new(:private => true)] }) %>
			<%= render(:partial => '/helpdesk/shared/facebook_form', :locals => {:id => 'send-fb-post', :cntid => 'cnt-fb-post', :note => [@ticket, Helpdesk::Note.new(:private => true)] }) %>
			<div class="tab-content">
				<div class="requestCnt request-conversation tab-pane" id="Pages">
					<div class="canned-response-menu hide" id="canned_response_container"> 
            <div>
              <%= link_to("Add Canned response", new_admin_canned_response_path, :target => "_blank", :class => "button") if(current_user.admin?) %>
            </div>
            <div id="canned_response_list"></div>
    		  </div>
					<% unless @ticket_notes.blank? %>
						<%= render :partial => 'note', :collection => @ticket_notes %>
						<%= will_paginate @ticket_notes %>
					<% end %>	
			  </div>			  
				<div class="requestCnt request-conversation active tab-pane" id="timesheet">
					<%= render :partial => "helpdesk/time_sheets/new", :locals => { :ticket_id => @ticket.id } %>
					<%= render :partial => "helpdesk/time_sheets/time_sheets_for_ticket" unless @ticket.time_sheets.blank? %>
				</div>
			</div>
	</div>


<% content_for :pagefixed do %> 
  <%= pageless(@ticket_notes.total_pages, helpdesk_ticket_helpdesk_notes_path(@ticket)) %>  
<% end %>


<% 
# Agent email will be fetched from responder. if responder is not assigned then it will be taken from loggedin agent.
	agent = @ticket.responder
	agent = current_user if agent.blank?
	@liquid_values = {"requester" => @ticket.requester, "ticket" => @ticket, "agent" => agent}
# For edit/delete page append one more parameter 'integrated_resource' in @liquid_values
%>

<%  installedApp = get_app_details("freshbooks");
#	@time_sheet_entry.integrated_resources.find_by_installed_application_id(installedApp);
#	@liquid_values["integrated_resource"] = integrated_resource
	unless installedApp.blank?  %>
		<%fb_code = get_app_widget_script("freshbooks", "freshbooks_timeentry_widget", @liquid_values)%>
	 	<%= Liquid::Template.parse(fb_code).render("ticket" => @ticket) %> <!--This is to replace the ticket props in the notes field-->
<% end %>

<%  installedApp = get_app_details("harvest");
#	@time_sheet_entry.integrated_resources.find_by_installed_application_id(installedApp);
#	@liquid_values["integrated_resource"] = integrated_resource
	unless installedApp.blank?  %>
		<%fb_code = get_app_widget_script("harvest", "harvest_timeentry_widget", @liquid_values)%>
	 	<%= Liquid::Template.parse(fb_code).render("ticket" => @ticket) %> <!--This is to replace the ticket props in the notes field-->
<% end %>
