<% content_for :sidebar do -%>
     <%= render :partial => "/helpdesk/integrations/crm_widget", :locals => {:user => @ticket.requester} %>
  
  <div class="rtCnt sidepanel ticket-panel">
    <%= ticket_sidebar unless @ticket.deleted %>
  </div>
<%- end %>
<%= include_stylesheets :redactor  %>
<%= include_javascripts :redactor  %>

<script type="text/javascript" src="/javascripts/redactor/langs/<%=current_account.language%>.js"></script>
<%= render :partial => "ticket_info" %>       

<div class="request-well">			
	<%= ticket_tabs %>        
	<% unless @ticket.deleted %>
		<div class="replylinks">
			<%= link_to_function("<span></span>" + t('ticket.reply_to'), "swapEmailNote('cnt-reply', this)", :id => "ReplyButton", :class => "button email reply") unless @item.from_email.nil? %>
			<%= link_to_function("<span></span>" + t('fwd_to'), "swapEmailNote('cnt-fwd', this)", 
				:id => "FwdButton", :class => "button forward reply") %>
			<%= link_to_function("<span></span>" + t('ticket.reply_to'), "swapEmailNote('cnt-tweet', this)",  :id => "TweetButton", :class => "button tweet reply") if @item.requester && @item.is_twitter?%>
			<%= link_to_function("<span></span>" + t('ticket.reply_to'), "swapEmailNote('cnt-fb-post', this)",  :id => "FacebookButton", :class => "button facebook reply") if @item.requester && @item.is_facebook?%>
			<%= link_to_function(t('ticket.add_note'), "swapEmailNote('cnt-note', this)", :id => "AddNoteButton", :class => "button") %>		
			<%= link_to_function(t("ticket.add_time"), "jQuery('#TimesheetTab').click(); jQuery(this).button('toggle')", :id => "TimeSheetButton", :title => "Add time entry", :class => "button") if feature?(:timesheets) %>
		</div>
	<% end %>
</div>		
<div class="tab-content">
	<div class="requestCnt request-conversation active tab-pane set-top" id="Pages">
		<div id="TicketForms">
		  <%= render(:partial => '/helpdesk/shared/reply_form', :locals => { :id => 'send-email', :cntid => 'cnt-reply', :note => [@ticket, Helpdesk::Note.new(:private => false)], :conv_id => nil }) %>
		  <%= render(:partial => '/helpdesk/shared/forward_form', :locals => { :id => 'send-fwd-email', :cntid => 'cnt-fwd', :note => [@ticket, Helpdesk::Note.new(:private => true)], :conv_id => nil }) %>
		  <%= render(:partial => '/helpdesk/shared/note_form', :locals => { :id => 'add-note',	:cntid => "cnt-note", :note => [@ticket, Helpdesk::Note.new(:private => true)] }) %>
		  <%= render(:partial => '/helpdesk/shared/tweet_form', :locals => { :id => 'send-tweet', :cntid => 'cnt-tweet', :note => [@ticket, Helpdesk::Note.new(:private => true)] }) %>
		  <%= render(:partial => '/helpdesk/shared/facebook_form', :locals => { :id => 'send-fb-post', :cntid => 'cnt-fb-post', :note => [@ticket, Helpdesk::Note.new(:private => true)] }) %>
		  <% content_for :pagefixed do %> 
			<div class="canned-response-menu hide" id="canned_response_container"> 
			  <div>
			    <%= link_to("Add Canned response", new_admin_canned_response_path, :target => "_blank", :class => "button") if(current_user.admin?) %>
			  </div>
			  <div id="canned_response_list"></div>
			</div>
		  <% end %>
		</div> 
		<% unless @ticket_notes.blank? %>
			<%= render :partial => 'note', :collection => @ticket_notes %>
			<%= will_paginate @ticket_notes %>
		<% end %>	
  </div>			  
	<div class="requestCnt request-conversation tab-pane" id="Timesheet">
	  <div class="loading-box"></div>
	</div>
</div>



<% content_for :pagefixed do %> 
  <%= pageless(@ticket_notes.total_pages, helpdesk_ticket_helpdesk_notes_path(@ticket)) %>  
	<% javascript_tag do %>
	var activeForm = null;

	swapEmailNote = function(formid, link){  
			jQuery("#PagesTab").click();
			
			if((activeForm != null) && (jQuery(activeForm).get(0).id != formid))
				jQuery("#"+activeForm.get(0).id).hide();
			
			invokeRedactor(formid+"-body");

			activeForm = jQuery('#'+formid).slideDown();
			switch(formid){
				case 'cnt-reply':
					// jQuery('#reply_cc_emails_id').trigger("cc_visibility");
				case 'cnt-note':
					insertIntoConversation("");					
				break; 
				case 'cnt-fb-post': 
					setCaretToPos($('send-fb-post-cnt-fb-post-body'), 0); 
				break;
				case 'cnt-tweet' : 
					setCaretToPos($('send-tweet-cnt-tweet-body'), 0);
				break;
			}

		}

    function show_canned_response(button, ticket_id){
      jQuery("#canned_response_container").css(jQuery(button).offset());
      jQuery("#canned_response_container")
        .show().addClass("loading");
      jQuery("#canned_response_list")
        .load("/helpdesk/tickets/canned_reponse/"+ticket_id, function(){
          jQuery("#canned_response_container")
            .removeClass("loading");
        })
        .show();        
    }
         
    function invokeRedactor(element_id){
         jQuery('#'+element_id).redactor({ focus: true, autosave: '<%=save_draft_helpdesk_ticket_path%>', interval: 30, autoresize:false, buttons:['bold','italic','underline','|','unorderedlist', 'orderedlist',  '|','fontcolor', 'backcolor', '|' ,'link']});
     }

		function insertIntoConversation(value){
			note_area  = jQuery('#cnt-note');
			reply_area = jQuery('#cnt-reply');
			fwd_area = jQuery('#cnt-fwd')
			tweet_area = jQuery('#cnt-tweet');
			if(note_area.css("display") == 'block'){     
				jQuery("#cnt-note-body").insertHtml(value);
			} 
			else if(tweet_area.css("display") == 'block'){
				get_short_url(value, function(bitly){
						insertTextAtCursor( $('send-tweet-cnt-tweet-body'), bitly || value );
						jQuery('#send-tweet-cnt-tweet-body')
								.trigger("focus")
								.trigger("keydown");
				});			
			}
			else{
				if(reply_area.css("display") == 'none' && fwd_area.css("display") == 'none')
					jQuery('#ReplyButton').trigger("click");
		        	var msg_body_id = reply_area.css("display") == 'none' ? "cnt-fwd" : "cnt-reply"
		       		jQuery("#"+msg_body_id+"-body").insertHtml(value);
			}        
			
			return;
		}
		
		function getCannedResponse(ticket_id, ca_resp_id){
  	  jQuery("#canned_response_container").addClass("loading")
  		jQuery.ajax({	type: 'POST',
  						url: '/helpdesk/tickets/get_ca_response_content/'+ticket_id+'?ca_resp_id='+ca_resp_id,
  						contentType: 'application/text',
  						async: false,
  						success: function(data){		
  									insertIntoConversation(data);
  							    jQuery("#canned_response_list")
  							      .removeClass("loading")
  							      .hide(300);
  								}
  						});
  		return true;
  	}

  	function showHideEmailContainer(){
  		jQuery(".ccEmailMoreContainer").toggle();
  		if(jQuery(".ccEmailMoreContainer").css("display") == "inline"){
  			jQuery(".ccEmailMoreLink").text('');
  		}
  	}

  	function showHideToEmailContainer(){
  		jQuery(".toEmailMoreContainer").toggle();
  		if(jQuery(".toEmailMoreContainer").css("display") == "inline"){
  			jQuery(".toEmailMoreLink").text('');
  		}
  	}


	
  <% end %>

<% end %>

<% content_for :onload_script do -%> 	
	jQuery('#custom_ticket_form').validate();
	<% unless @draft.nil? %>
	jQuery(window).load(function(){jQuery("#ReplyButton").trigger('click');});
	<% end %>
<%- end %>