<!-- Note: when any changes made to TICKET_FORM PARTIAL in the future,
      please update the memcache key version. key_name :: AGENT_NEW_TICKET_FORM  -->

<%= ticket_form.error_messages %>
<% current_portal.ticket_fields_including_nested_fields.each do |field|
    next if field.section_field?
    if is_edit or params[:template_form]
      field_value = @item.send(field.field_name)
      field_value = nested_ticket_field_value(@item, field) if field.field_type == "nested_field"
    elsif field.is_default_field? or !params[:topic_id].blank?
      field_value = @item[field.field_name]
    end
    field_label = ( field.is_default_field? ) ? I18n.t("ticket_fields.fields.#{(field.name)}").html_safe :
                                                (field.label).html_safe
  %>
  <%= construct_new_ticket_element f, :helpdesk_ticket,
                                  field,
                                  field_label,
                                  field.dom_type,
                                  field.required,
                                  field_value,
                                  "",
                                  false,
                                  is_edit  %>

  <% if field.has_section?
    section_container = construct_new_section_fields(f, :helpdesk_ticket, field, is_edit, @item, false) %>
    <%=content_tag(:li, section_container.html_safe)%>
  <% end %>
  <%#= render(:partial => "/shared/nested_fields", :locals => { :ticket => nil, :category => field, :category_field_value =>  field_value, :type => "edit"}) if field.field_type == "nested_field"%>
<% end %>

<% values = params[:template_form] ? @template.template_data[:tags] : @item.tags.collect{|tag| tag.name}.join(',')%>
<%= render :partial => "/helpdesk/tickets/remote_tags" , :locals => {:values => values }%>

<%= ci_fields(ticket_form)%>
<input type="hidden" id="companyurl" value="<%= helpdesk_commons_user_companies_path %>" />
<%= javascript_tag do %>
  jQuery("#helpdesk_ticket_email").blur(function(){
    var ticket_email = jQuery("#helpdesk_ticket_email").val();

    if($requester_val != jQuery("input.requester").val()){
      jQuery.ajax({ url: "<%= helpdesk_commons_user_companies_path %>?email="+ticket_email,
        success: function(data){
          if(data != false){
            jQuery('#helpdesk_ticket_company_id').empty();
            for(var i=0; i<data.length; i++){ 
              jQuery("<option/>").val(data[i][1]).html(data[i][0]).appendTo("#helpdesk_ticket_company_id");
            }
            jQuery('#helpdesk_ticket_company_id').val('').change();
            jQuery('.default_company').insertAfter(jQuery(".default_requester")).show();
            jQuery('#helpdesk_ticket_company_id').removeAttr("disabled");
          }else{
            jQuery('.default_company').slideUp();
            jQuery('#helpdesk_ticket_company_id').attr("disabled", true);
          }
        }
      });
    }
  });

  if(<%= is_edit %> == true && (jQuery("#helpdesk_ticket_company_id").attr("disabled") != "disabled"))
    jQuery('.default_company').insertAfter(jQuery(".default_requester")).show();

  jQuery("#helpdesk_tags").select2({
    tags: "<%= escape_javascript(current_account.tags.most_used(25).collect{|tag| tag.name}.join(',').html_safe) %>".split(","),
    tokenSeparators: [',']
  });

  // Need to make the code generic to handle the custom dropdown fields sections.
  jQuery("#helpdesk_ticket_ticket_type")
    .on("change", function(e){
      var id = jQuery("option:selected", this).data("id");
      jQuery('ul.ticket_section').remove();
      var element = jQuery('#picklist_section_'+id).parent();
      if(element.length != 0) {
        element.append(jQuery('#picklist_section_'+id).val()
                .replace(new RegExp('&lt', 'g'), '<')
                .replace(new RegExp('&gt', 'g'), '>'));
      }
  }).trigger("change");
     //TODO - Change to a generic truncate function.
  jQuery('.invalid_attachment a').livequery(function(ev){
      jQuery(this).text(jQuery(this).text().substring(0,19)+"...");
    });

  jQuery('#helpdesk_ticket_status').bind('change' , function(event){
    var select_group = jQuery('#Pagearea .default_internal_group select')[0];
    var prev_val = select_group.options[select_group.selectedIndex].value;
    jQuery('#Pagearea .compose-new-ticket .default_internal_group label').addClass('sloading loading-small loading-right');
    jQuery.ajax({
      url: prev_val == "" ? "/helpdesk/commons/status_groups?status_id="+this.value : "/helpdesk/commons/status_groups?status_id="+this.value+"&group_id="+prev_val,
      type: "GET",
      contentType: "application/text",
      success: function(data){
        jQuery('#helpdesk_ticket_internal_group_id').html(data).trigger('change');
        jQuery('#Pagearea .compose-new-ticket .default_internal_group label').removeClass('sloading loading-small loading-right');
      }
    });
  });

  jQuery('#helpdesk_ticket_internal_group_id').bind("change", function(e){
    var select_group = jQuery('#Pagearea .default_internal_agent select')[0];
    var prev_val = select_group.options[select_group.selectedIndex].value;
    if(this.value){
      jQuery('#Pagearea .compose-new-ticket .default_internal_agent label').addClass('sloading loading-small loading-right');

      jQuery.ajax({
        type: 'GET',
        url:  prev_val== "" ? '/helpdesk/commons/group_agents/'+this.value : '/helpdesk/commons/group_agents/'+this.value+"?agent="+prev_val,
        contentType: 'application/text',
        success: function(data){
          jQuery('#helpdesk_ticket_internal_agent_id').html(data).trigger('change');
          jQuery('#Pagearea .compose-new-ticket .default_internal_agent label').removeClass('sloading loading-small loading-right');
        }
      });
    }else{
      jQuery('#helpdesk_ticket_internal_agent_id').html("<option value=''>...</option>").trigger('change');
    }
  });
<% end %>
