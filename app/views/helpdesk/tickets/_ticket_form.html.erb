<%= ticket_form.error_messages %>
<%= hidden_field_tag  :topic_id,  params[:topic_id] %> 
<% current_portal.ticket_fields.each do |field|
    next if field.section_field?
    if is_edit
      field_value = @item.send(field.field_name)
      field_value = nested_ticket_field_value(@item, field) if field.field_type == "nested_field"
    elsif field.is_default_field? or !params[:topic_id].blank?
      field_value = @item[field.field_name]
    end
    field_label = ( field.is_default_field? ) ? I18n.t("ticket_fields.fields.#{(field.name)}").html_safe : 
                                                (field.label).html_safe
  %>
  <%= construct_ticket_element f, :helpdesk_ticket, 
                                  field, 
                                  field_label, 
                                  field.dom_type, 
                                  field.required, 
                                  field_value, 
                                  "", 
                                  false, 
                                  is_edit  %>

  <% if field.has_section?
    section_container = construct_section_fields(f, field, is_edit, @item, false) %>
    <%=content_tag(:li, section_container.html_safe)%>
  <% end %>
  <%#= render(:partial => "/shared/nested_fields", :locals => { :ticket => nil, :category => field, :category_field_value =>  field_value, :type => "edit"}) if field.field_type == "nested_field"%>
<% end %>

<li class = "text default_tags field">
    <%= fields_for :helpdesk  do |ticket| %>
      <%= ticket.label(:tags, t('ticket_fields.fields.tags')) %>
      <%= ticket.text_field :tags, :value => @item.tags.collect{|tag| tag.name}.join(','), 
                                   :class => "select2 input-xxlarge"%>
    <%end%>
</li>
<%= ci_fields(ticket_form)%>

<% content_for :onload_script do -%> 

  invokeRedactor('helpdesk_ticket_ticket_body_attributes_description_html', 'ticket');
  jQuery('input.requester').focus();
  jQuery('#helpdesk_ticket_group_id')
    .on("change", function(e){
      jQuery('#helpdesk_ticket_responder_id')
              .html("<option value=''>...</option>");
      jQuery.ajax({
        type:        'GET',
        url: 		     '/helpdesk/commons/group_agents/'+this.value,
        contentType: 'application/text',
        success:     function(data){
                        jQuery('#helpdesk_ticket_responder_id')
                          .html(data);
                     }
      });
    });

  jQuery("#helpdesk_tags").select2({  
    tags: "<%= escape_javascript(current_account.tags.most_used(25).collect{|tag| tag.name}.join(',').html_safe) %>".split(","),
    tokenSeparators: [',']
  });

  // Need to make the code generic to handle the custom dropdown fields sections.
  jQuery("#helpdesk_ticket_ticket_type")
    .on("change", function(e){
      var id = jQuery("option:selected", this).data("id");
      jQuery('ul.ticket_section').remove();
      var element = jQuery('#picklist_section_'+id).parent();
      if(element.length != 0) {
        element.append(jQuery('#picklist_section_'+id).val()
                .replace(new RegExp('&lt', 'g'), '<')
                .replace(new RegExp('&gt', 'g'), '>'));
      }
  }).trigger("change");

<%- end %>
