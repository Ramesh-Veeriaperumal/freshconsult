<%= form_tag({:action => :export_csv, :a=>params[:a], :i=>params[:i] }, { :method => :post, :id => 'exportFilter', :class => "form-horizontal" }) do %>
  <input type="hidden" name="data_hash" value="" />
	<ul class="configure_export">
		<li class="control-group">
				<label class="control-label"><strong><%= t("export_data.select_format") %></strong></label>
				<div class="controls">
					<label class="radio inline">
						<%= radio_button_tag(:format, "csv", true) %>
						<%= t('export_data.csv') %>
					</label>
					<label class="radio inline">
						<%= radio_button_tag(:format, "xls", false) %>
						<%= t('export_data.xls') %>
					</label>
				</div>
		</li>
		<li class="control-group">
			<label class="control-label"><%=t('export_data.filter_label_agent').html_safe%> </label>
			<div class="controls">
				<%= select_tag "ticket_state_filter", options_for_select(TicketConstants::STATES_HASH.map {|k,v| [v,k]}, [:created_at]), {:class => "select2","data-minimum-results-for-search" => "1000"} %>
				<%= select_tag "date_filter", options_for_select(TicketConstants::CREATED_BY_OPTIONS), :class => "select2","data-minimum-results-for-search" => "1000" %>
			</div>
		</li>
		<div class="controls hide" id="datepicker">
			<input type="text" id="start_date" date="" name="start_date" class="text auto" size="15" />&nbsp;-
			<input type="text" id="end_date" date="" class="text auto" name="end_date" size="15" />
		</div>
		<hr/>
		<li>
      <div class="options-header">
			<label class="select-header">
          <span class="select-all-label">
            <%= check_box_tag :toggle_checks, '', false, :class => 'tooltip', :"data-placement" => 'below',
                    :title => t('export_data.check_uncheck_title') %>
              <strong><%= t('export_data.select_header') %></strong>
          </span>
			</label>
        <span class="additional-fields-label">
          <a href="#" data-show="<%= t("export_data.show_additional_fields")%>"
                      data-hide="<%= t("export_data.hide_additional_fields")%>"
                      data-additional-shown="false">
                      <%= t("export_data.show_additional_fields")%></a>
          <span href="#" id="additional-help-icon" class="tooltip inline-block mt2" title="<%= t('export_data.additional_fields_help') %>" data-placement="right">
            <i class="ficon-help fsize-20" size="30"></i>
          </span>
        </span>
        </div>
      <br/>
      <div class="info-highlight error hide" id="err_no_fields_selected">
        <%= t('export_data.no_fields_selected') %>
      </div>
      <div id="ticket_fields">

        <div class="additional-fields hide">
          <div class = "threecol-form">
            <%= render partial: "export_options", :locals => { headers: @additional_csv_headers, retain_fields: false} %>
          </div>
        </div>
        <div class="default-ticket-fields">
          <div class="threecol-form">
            <%= render partial: "export_options", :locals => { headers: @default_csv_headers, retain_fields: true} %>
          </div>
        </div>
			</div>
		</li>
	</ul>	
<%end%>
<%= javascript_tag do %>
// For Select all/none functionality 
	jQuery('#toggle_checks').on('change', function () {
    if(jQuery(".additional-fields-label a").data("additionalShown") == true){
      jQuery('[id^=export_fields]').prop('checked', jQuery(this).is(":checked"));
    }else{
      jQuery('.default-ticket-fields [id^=export_fields]').prop('checked', jQuery(this).is(":checked"));
    }

	});

	//For toggling select all/none checkbox when toggling fields -->
	jQuery('[id^=export_fields]').on('change', function () {
		var count = 0;
		if(jQuery(".additional-fields-label a").data("additionalShown") == true){
			jQuery('[id^=export_fields]').each(function(i,ele){ if(ele.checked) count++; });
			jQuery('#toggle_checks').prop('checked', (jQuery('[id^=export_fields]').length == count));
		}else{
			jQuery('.default-ticket-fields [id^=export_fields]').each(function(i,ele){ if(ele.checked) count++; });
			jQuery('#toggle_checks').prop('checked', (jQuery('.default-ticket-fields [id^=export_fields]').length == count));
		}
	});

  jQuery("#exportFilter").submit(function () {  

	if (jQuery('#ticket_fields :checked').length == 0) {
		jQuery('#err_no_fields_selected').removeClass('hide');
		jQuery('#export_tickets').data().freshdialog['$submitBtn'].button('reset');
		return false;
	} else {
		jQuery('#err_no_fields_selected').addClass('hide');
		
	 	getFilterData();
		jQuery("#exportFilter input[name=data_hash]").val(query_hash.toJSON());
		jQuery("#ExportToCSV").prop('disabled', 'disabled').switchClass("uiButton", "sloading loading-small", 0);
		setTimeout(function(){
			active_dialog.dialog("close");
			jQuery("#ExportToCSV").removeAttr('disabled', 'disabled').switchClass("sloading-small", "uiButton", 0);
		}, 1000);
	}
  });

  jQuery('#export_cancel').click(function(ev){
  	active_dialog.dialog("close");
  	ev.preventDefault();
	});
  jQuery("#date_filter").change(function(){
  	jQuery("#datepicker").toggle(jQuery("#date_filter").val() == "<%=TicketConstants::CREATED_BY_KEYS_BY_TOKEN[:custom_filter]%>");
  });

  jQuery("div.nested_field label.prime").change(function(ev){  	
  	_condition = !jQuery(this).children("input").prop("checked");
  	jQuery(this).siblings(".level").children("input").prop({ "checked": !_condition });
  });

  var date_today = new Date();
  jQuery(document).ready(function() {
		var dates = jQuery( "#start_date, #end_date" ).datepicker({
			changeMonth: true, 
			changeYear: true,
			numberOfMonths: 3,
			showButtonPanel: true,
			maxDate: "today",
			showOn: "both", 
			dateFormat: getDateFormat('datepicker'),
			disabled: false,
			onSelect: function( selectedDate ) {
				var option = this.id == "start_date" ? "minDate" : "maxDate",
					instance = jQuery( this ).data( "datepicker" ),
					date = jQuery.datepicker.parseDate(
						instance.settings.dateFormat ||
						jQuery.datepicker._defaults.dateFormat,
						selectedDate, instance.settings );
				dates.not( this ).datepicker( "option", option, date );
				jQuery(this).prop("date", date);
			}
		});
		setExportCreatedRange();
	});
	jQuery("#start_date, #end_date").bind('keypress keyup keydown', function(ev) {
	ev.preventDefault();
   	return false;
  });


  jQuery(".additional-fields-label a").on("click", function(ev){
    var current_val = jQuery(this).text().trim();
    if(jQuery(this).data("additionalShown") == false){
      jQuery(this).text(jQuery(this).data("hide"));
      jQuery(this).data("additionalShown", true);
      jQuery(".additional-fields").show();
      jQuery("#export_fields_display_id").trigger("change");
    }else{
      jQuery(this).text(jQuery(this).data("show"));
      jQuery(this).data("additionalShown", false);
      jQuery(".additional-fields").hide();
      jQuery("#export_fields_display_id").trigger("change");
    }
  });
<% end %>
