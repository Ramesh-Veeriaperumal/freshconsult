<%= will_filter_scripts_tag %>
<%= link_to("Save this View...", "/helpdesk/tickets/custom_view_save", :title => "Save ticket view", :class => "slim-button floatr dialog2", :dialogWidth => "540px", :id => "save_filter") %> 
    <h3 class="title">Filters</h3>
    <form id="FilterOptions" action="#">
      <input type="hidden" name="data_hash" value="" />
      <input type="hidden" name="wf_order" value="<%= current_wf_order %>" />
      <input type="hidden" name="wf_order_type" value="<%= current_wf_order_type %>" />    
  		<input type="hidden" name="page" value="1" />
    </form>
      <% @show_options.each_with_index do |c_hash, i| %> 
        <% container = (c_hash[:options].size < 5)? "dropdown" : "multi_select" %> 
    	    <% content_tag :div,{ :id          => "div_ff_#{c_hash[:condition]}", 
                              :class       => "ff_item", 
                              :condition   => c_hash[:condition],
                              :operator    => c_hash[:operator],
                              :container   => container } do %>
          <h4 class="title"><%= c_hash[:name] %></h4>           
          <%= render :partial => "/helpdesk/tickets/containers/#{container}", :locals => { :options => c_hash[:options], :name => c_hash[:name], :selected_val => @current_options[c_hash[:condition].to_s].to_s.split(",") } %>
        <% end %>
      <% end %>
   

<% javascript_tag do %> 
	var query_hash  = $A();
  
  function getFilterData(){
    query_hash = $A(); 
    jQuery("div.ff_item").map(function () {
      condition = this.getAttribute("condition");
      container = this.getAttribute("container");
      operator  = this.getAttribute("operator");
      _selector = 'input:checkbox:checked'; 
          
      if(container == "multi_select") _selector = 'option:selected';
          
      value = jQuery(this).find(_selector).map(function(){ return this.value; }).get();
                        
      if(value.length){
        query_hash.push({ 
          condition : this.getAttribute("condition"), 
          operator  : this.getAttribute("operator"),
          value     : value.toString()
        });
      }
    });
		jQuery("#FilterOptions input[name=page]").val(1);
  }
  
	jQuery(document).ready(function(){	  
	  if('<%=@ticket_filter.accessible.visibility%>' == '<%=Admin::UserAccess::VISIBILITY_KEYS_BY_TOKEN[:group_agents]%>')
		{
			jQuery('#accessible_group').show();	
			jQuery('#visibility_group_id').removeAttr('disabled');
		}
		else
		{
			jQuery('#visibility_group_id').attr('disabled','disabled');
		}
		
		getFilterData();
    jQuery(".filter_item").bind("change", function(){
      jQuery("#save_filter").show();
      getFilterData();
      jQuery("#FilterOptions input[name=data_hash]").val(query_hash.toJSON()).trigger("change");  
    });	
    jQuery(".wf_order_type, .wf_order").live("click", function(ev){
      ev.preventDefault();
      jQuery("#FilterOptions input[name="+this.className+"]").val(this.getAttribute(this.className)).trigger("change");
    });	
		jQuery(".toolbar_pagination a, .toolbar_pagination_full a").live("click", function(ev){
			ev.preventDefault();
			jQuery("#FilterOptions input[name=page]").val(getParameterByName("page", this.href)).trigger("change");
		});		
  });
  
  jQuery("#FilterOptions").change(function(){
    jQuery("#ticket-list").html("<div class='loading-box'></div>"); 
     jQuery.ajax({
        url: "/helpdesk/tickets/custom_search",
        type: "POST",
        dataType: "script",
        data: jQuery(this).serializeArray(),
        success: function(msg){ 
          //jQuery("#ticket-list").hide().html(msg).fadeIn(300);
        }
      }); 
  });
  
  
	function toggleGroup(access_id){	
		if (access_id == '<%=Admin::UserAccess::VISIBILITY_KEYS_BY_TOKEN[:group_agents]%>')
		{
			jQuery('#accessible_group').show();
			jQuery('#visibility_group_id').removeAttr('disabled');
		}
		else
		{
			jQuery('#accessible_group').hide();	
			jQuery('#visibility_group_id').attr('disabled','disabled');
		}
	}
 
<% end %>