<%= include_tiny_mce_if_needed %>
<div class="request_panel hide" id="<%=cntid%>">
    <% form_for note, :html => {:multipart => true, :id => "HelpdeskFwd" } do |f| %>
    <%= f.error_messages %>
    <% capsule_config = get_app_config('capsule_crm') 
    
      bcc_drop_box_email = (capsule_config.blank?) ? [] : capsule_config["bcc_drop_box_mail"].split( /,* /).map{|item|[item, item]}
      fixed_bcc = (current_account.bcc_email.blank?) ? [] : current_account.bcc_email.split( /,* /).map{|item|[item, item]}
      bcc_drop_box_email += fixed_bcc  
    %>
       
    <ul class="ui-form dont-validate">
				<div class="request_form_options">
					<a href="#" class="slim-button" rel="fwd_cc_button_<%=cntid%>" data-input="#include_cc" data-parent="#fwd-cc-form-container-<%=cntid%>" data-show-text="<%= t(".addcc")%>" data-hide-text="<%= t(".removecc")%>" id="add_fwd_cc_btn">
						<%= t(".addcc") %>
					</a>
					<a href="#" class="slim-button"  rel="fwd_cc_button_<%=cntid%>" data-input="#include_bcc" data-parent="#fwd-bcc-form-container-<%=cntid%>" data-show-text="<%= t(".addbcc")%>" data-hide-text="<%= t(".removebcc")%>" id="add_fwd_bcc_btn" >
						<%= (bcc_drop_box_email.blank?)? t(".addbcc"): t(".removebcc")  %>
					</a>
					<%= link_to_function( t(:'ticket.canned_responses.insert_ca_response') + " &raquo;", "show_canned_response(#{@ticket.id})", :class => "slim-button insert-canned-response", :id => "#{cntid}") %>
        </div>
        <% javascript_tag do %>
  jQuery('a[rel=fwd_cc_button_<%= cntid %>]').click(function(ev){
    ev.preventDefault();
    jQuery(jQuery(this).data("parent")).toggle();
    jQuery(this).trigger("textChange");
    
  }).bind("textChange", function(ev){
    _condition = (jQuery(jQuery(this).data("parent")).css("display") != "none");
    jQuery(this).text( _condition ? jQuery(this).data("hideText") : jQuery(this).data("showText")); 
    jQuery(jQuery(this).data("input")).prop("checked", _condition);
  });
  <% end %>
  		<%= content_tag( :h4, t("fwd_to"), :class => "title", :id => "fwd_title" ) %>
      <li class="inline-field field" >
            <%= f.label(:reply_email, "From:", :class => "caption" ) %>
            <div class="fields">
              <%= select :reply_email, :id, options_for_select(@reply_email, @selected_reply_email) %>
          </div>
        </li>
        <li class="inline-field field" id="fwd_to_mail">
            <%= f.label(:forward_email, "To:", :class => "caption" ) %>
            <div class="fields">
                
                <input type="text" id="to_emails_<%=cntid%>" name="to_emails" />
                <% javascript_tag do -%>
                  new Autocompleter.MultiValue("to_emails_<%=cntid%>", cachedLookup, $A(), {frequency: 0.1, acceptNewValues: true,separatorRegEx:/;|,/});
                <%- end %>
            </div>
        </li>
        <li class="inline-field field hide" id="fwd-cc-form-container-<%=cntid%>" style='display:none'>
            <label class="caption">
                <%= t(".cc") %>:
            </label>
	          <div class="fields" id="fwd_cc_emails_id" rel="fwd_cc_div" data-button="#add_fwd_cc_btn"  data-parent="#fwd-cc-form-container"> 
                
                <input type="text" id="fwd_cc_emails_<%=cntid%>" name="fwd_cc_emails" />
                <% javascript_tag do -%>
                  new Autocompleter.MultiValue("fwd_cc_emails_<%=cntid%>", cachedLookup, $A(), {frequency: 0.1, acceptNewValues: true,separatorRegEx:/;|,/});
        <%- end %>
            </div>
        </li>
		    <li class="inline-field field" id="fwd-bcc-form-container-<%=cntid%>" style='display:<%= bcc_drop_box_email.blank? ? "none": "block" %>;'>
			    <label class="caption">
            <%= t(".bcc") %>:
          </label>

          <div class="fields">
            
            <input type="text" id="bcc_emails_<%=cntid%>" name="bcc_emails" />
            <% javascript_tag do -%>
              new Autocompleter.MultiValue("bcc_emails_<%=cntid%>", cachedLookup, $A(<%= bcc_drop_box_email.to_json unless bcc_drop_box_email.blank? %>), {frequency: 0.1, acceptNewValues: true,separatorRegEx:/;|,/});
            <% end %>
          </div>
        </li>
        <li class="inline-field field">
            <label class="caption">
                <%= t("message") %>:
            </label>
            <div class="fields">
              <% conv_item = conv_id.nil? ? @ticket : @note %>
                <%= f.text_area :body_html, :class => "required mceEditor", :id => "#{id}-#{cntid}-body", :value => bind_last_conv(conv_item, @signature, true) %>
            </div>
        </li>
        <!-- forward will be always private -->
        <%= f.hidden_field :private , :value => true %>
        <%= f.hidden_field :source , :value => Helpdesk::Note::SOURCE_KEYS_BY_TOKEN["forward_email"] %>
        <%= hidden_field_tag(:page , params[:page], :id=>:page  ) unless params[:page].nil? %>
        <li class="inline-field field">
            <div class="attachment-options fields" id="attachment-options-forward-<%=cntid%>">
              <% attachments = conv_item.attachments %>
              <% if(attachments.size > 0) %>
                Attachments
                <div class="attachments">
                  <% attachments.each do |attachment| %>
                    <div class="item">
                      <span> <%= attachment.content_file_name %> 
                      - <a href="javascript:void(0)" onclick="jQuery(this).parent().parent().remove(); return false;">remove</a>
                        <input type="hidden" name="helpdesk_note[attachments][][resource]" value="<%=attachment.id%>" />
                      </span>
                    </div>
                    <% end %>
                </div>
              <% end %>
                <% unless local_assigns[:no_attachments] %>
                <%= render :partial => "/helpdesk/shared/attachment_form", :locals => { :attach_id => id , :nsc_param => "helpdesk_note" } %>
                <% end %>
            </div>            
        </li>
    </ul>
    <div class="button-container">         
    	<%= submit_tag(t('ticket.reply_form.send'), :class => "uiButton special" ) %>
  		<%= button_to_function(t('cancel'), "jQuery('#cnt-fwd').slideUp()", :class => "uiButton" ) %>
    </div>

    <% end %>
</div>
<% content_for :pagefixed do %>
  <% javascript_tag do %>
  	jQuery("#HelpdeskFwd").validate();	
  <% end %>
<% end %>
