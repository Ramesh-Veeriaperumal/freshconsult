<% current_portal.ticket_fields_including_nested_fields.each do |field|
    next if field.section_field? || ["email","source"].include?(field.field_name) || field.shared_ownership_field?
    @ticket ||= current_account.tickets.new
    if is_edit
      field_value = field.field_type == "nested_field" ? nested_ticket_field_value(@tkt_template, field) : @tkt_template.template_data[field.field_name]
    elsif field.is_default_field?
      field_value = @ticket[field.field_name]
    end
    field_label = ( field.is_default_field? ) ? I18n.t("ticket_fields.fields.#{(field.name)}").html_safe : (field.label).html_safe
  %>
  <%= construct_new_ticket_element f, :template_data,
                                  field,
                                  field_label,
                                  field.dom_type,
                                  field.required,
                                  field_value,
                                  "",
                                  false,
                                  is_edit  %>

  <% if field.has_section?
    section_container = construct_new_section_fields(f, :template_data, field, is_edit, @tkt_template, false) %>
    <%=content_tag(:li, section_container.html_safe)%>
  <% end %>
<% end %>

<li class="text default_tags field">
      <%= fields_for :template_data  do |ticket| %>
      <%= ticket.label(:tags, t('ticket_fields.fields.tags')) %>
      <%= ticket.hidden_field :tags, :value => @tkt_template.template_data[:tags], :rel => "remote-tag" %>
      <% end %>
</li>

<% content_for :onload_script do -%>
  var MAX_TAG_LENGTH_MSG = "<%= I18n.t('helpdesk.tickets.show.max_tag_length_msg') %>";
  invokeRedactor('template_data_ticket_body_attributes_description_html', 'template');
  jQuery('input.requester').focus();
  jQuery('#template_data_group_id')
    .on("change", function(e){
      var select_agent = jQuery('#template_data_responder_id')[0];
      var prev_val = select_agent.options[select_agent.selectedIndex].value;

      jQuery('#template_data_responder_id')
              .html("<option value=''>...</option>");
      jQuery.ajax({
        type:        'GET',
        url: 		     prev_val == "" ? '/helpdesk/commons/group_agents/'+this.value : '/helpdesk/commons/group_agents/'+this.value+"?agent="+prev_val,
        contentType: 'application/text',
        success:     function(data){
                        jQuery('#template_data_responder_id')
                          .html(data).trigger('change');
                     }
      });
    });

  // Need to make the code generic to handle the custom dropdown fields sections.
  jQuery("#template_data_ticket_type")
    .on("change", function(e){
      var id = jQuery("option:selected", this).data("id");
      jQuery('ul.ticket_section').remove();
      var element = jQuery('#picklist_section_'+id).parent();
      if(element.length != 0) {
        element.append(jQuery('#picklist_section_'+id).val()
                .replace(new RegExp('&lt', 'g'), '<')
                .replace(new RegExp('&gt', 'g'), '>'));
      }
  }).trigger("change");
     //TODO - Change to a generic truncate function.
  jQuery('.invalid_attachment a').livequery(function(ev){
      jQuery(this).text(jQuery(this).text().substring(0,19)+"...");
    });
    
    //Disable button on submit
    jQuery("#ticket_template").on('submit', function(){
      if(jQuery(this).valid()){
       jQuery(this).find(".btn").attr("disabled", true);
      }
    });

<%- end %>
