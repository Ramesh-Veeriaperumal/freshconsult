<% form_for [@parent, @item], 
			:html => { 
				:multipart => true,
				:id => "edit_#{@item.id}",
				:rel => 'edit_note_form', 
				"data-panel" => "edit-#{@item.id}",
				"data-show-pseudo-reply" => 'false',
				"data-fetch-latest" => 'false',
				"data-cnt-id" => @item.id

			} do |f| %>
	<ul class="ui-form dont-validate">
		<li class="inline-field field continous">
			<%= f.hidden_field :source , :value => Helpdesk::Note::SOURCE_KEYS_BY_TOKEN["note"]%>
			<% f.fields_for :note_body, @item.note_body do |ff| %>
				<%= ff.text_area :body_html, :class => "required", :value => @item.body_html, :id =>"#{@item.id}-body" %>
			<% end %>
		</li>
		<li class="inline-field field attachment-options continous" id="attachment-options-note">
			<%= render :partial => "/helpdesk/tickets/show/attachment_form", :locals => { :attach_id => "edit-note-#{@item.id}" , :nsc_param => "helpdesk_note" } %>
		</li>
		<li class="button-container hide">
			<%= submit_tag(t("update"), :class => "uiButton special") %>
			<%= button_to_function(t('cancel'), "jQuery('#edit-#{@item.id}').slideUp();jQuery('#note_details_#{@item.id}').show()", :class => "uiButton" ) %>
		</li>
	</ul>
	<div class="btn-toolbar">
		<%= button_to_function(t('cancel'), "jQuery('#edit-#{@item.id}').slideUp();jQuery('#note_details_#{@item.id}').show()", :class => "btn" ) %>
    	<%= submit_tag(t("update"), :class => "btn btn-primary") %>
    </div>
    <div class="clearfix"></div>
<% end %>
<% javascript_tag do %>
	invokeRedactor('<%= "#{@item.id}-body" %>', 'cnt-reply');

	jQuery(document).ready(function(){
		jQuery("#Edit_Note_<%= @item.id %>")
			.validate();
	});
<% end %>