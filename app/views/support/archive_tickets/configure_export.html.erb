<%= form_tag(export_csv_support_archive_tickets_path(:a => params[:a], :i => params[:i]), { :method => :post, :class => "form-portal" }) do %>
  	<input type="hidden" name="data_hash" value="" />
  	<input type="hidden" name="_method" value="post" />
  	<div class="row-fluid">
  		<div class="span2">
  			<label class="lead-small"><%= t("export_data.select_format") %></label>
  		</div>
  		<div class="span8">
  			<label class="radio inline">
				<%= radio_button_tag(:format, "csv", true) %>
				<%= t('export_data.csv') %>
			</label>
			<label class="radio inline">
				<%= radio_button_tag(:format, "xls", false) %>
				<%= t('export_data.xls') %>
			</label>
  		</div>
  	</div>
	<fieldset class="row-fluid">
		<div class="span4">
			<label class="lead-small"><%=t('export_data.filter_label_customer')%></label>
			<%= select_tag "date_filter", options_for_select(TicketConstants.archive_date_options), 
				{ :class => "export-custom-select" } %>
		</div>
		<div id="datepicker" class="hide">
 			<div class="span4">	
 				<label class="lead-small">From</label>
				<input type="text" placeholder="<%=t('export_data.from')%>" id="start_date" date="" 
					class="text auto" size="15" />
			</div>
			<div class="span4 omega">
				<label class="lead-small">To</label>
				<input type="text" placeholder="<%=t('export_data.to')%>" id="end_date" date="" 
					class="text auto" size="15" />
			</div>
			<input type="hidden" id="start_export_clone" date="" name="start_date" size="10" />&nbsp;
			<input type="hidden" id="end_export_clone" date="" name="end_date" size="10" />
		</div>
	</fieldset>
	<fieldset>
		<div class="control-group">
			<label class="lead-small"><%= t("export_data.field_select_title") %></label>

			<div class="alert alert-error hide" id="err_no_fields_selected"> <%= t('export_data.no_fields_selected') %> </div>
			<div class="row-fluid" id="ticket_fields">
	 			<% @csv_headers.each do |head| %>
	 			  	<div class="span4 <%= head[:type] %> <%= cycle("", "", "omega") %>">
		  				<label class="checkbox nested-parent"> 
		    				<%= check_box_tag "export_fields[#{head[:value]}]", head[:label_in_portal] || head[:label], head[:selected] %> 
							<%= (head[:label_in_portal] || head[:label]).html_safe %>														
		  				</label>
		  				<% head[:levels].each do |level| %>
			  				<label class="checkbox nested-child"> 
			    				<%= check_box_tag "export_fields[#{level[:name]}]", (level[:label_in_portal] || level[:label]), false  %> 
								<%= (level[:label_in_portal] || level[:label]).html_safe %>
			  				</label>
			  			<% end %>
	  			    </div>	
	 			<% end %>
			</div>
		</div>
	</fieldset>
<%end%>

<%= javascript_tag do %>
	!function( $ ) {

		$(function () {

			"use strict"

			$('#archive-export-modal form').on('submit', function(){
				setInterval( function(){
					$('#archive-export-modal a[data-submit]').button('reset')
				}, 3000);
			})

			$(".nested-parent").on("change", function(ev){
				var _condition = $(this).children("input").prop("checked")
	  			$(this).siblings(".nested-child").children("input").prop({ "checked": _condition })
			})

			var date_today = new Date()

			$("#date_filter").on("change", function(ev){
				$("#datepicker").toggle($(this).val() == 4)
			})

			var dates = jQuery( "#start_date" ).datepicker({
			changeMonth: true, 
			changeYear: true,
			numberOfMonths: 3,
			showButtonPanel: true,
			maxDate: date_today,
			showOn: "focus", 
			altField: "#start_export_clone",
    		altFormat: 'yy-mm-dd',
			dateFormat: getDateFormat('datepicker'),
			disabled: false,
			onSelect: function( selectedDate ) {
				var option =  "minDate",
					instance = jQuery( this ).data( "datepicker" ),
					date = jQuery.datepicker.parseDate(
						instance.settings.dateFormat ||
						jQuery.datepicker._defaults.dateFormat,
						selectedDate, instance.settings );
				dates.not( this ).datepicker( "option", option, date );
				jQuery(this).prop("date", date);

			var minDate = jQuery("#start_date").datepicker('getDate');
            minDate.setDate(minDate.getDate()); 
            jQuery("#end_date").datepicker( "option", "minDate", minDate);
 		
 			//logic check : startdate <= enddate 
			var startISO = jQuery("#start_export_clone").val();
            var endISO = jQuery("#end_export_clone").val();
              if(jQuery.datepicker.parseDate('yy-mm-dd', startISO) > jQuery.datepicker.parseDate('yy-mm-dd', endISO))
              {
                jQuery('#end_export_clone').datepicker( "setDate", startISO );
                var datepickerStart = jQuery('#start_date').val();
                jQuery('#end_date').datepicker( "setDate", datepickerStart );
              }

			}
		});

		jQuery("#start_date").val("<%= formated_date(6.month.ago,{:format => :short_day_separated, :include_year => true, :translate => true})%>");
		jQuery("#start_export_clone").val("<%= formated_date(6.month.ago,{:format => :short_day_separated, :include_year => true, :translate => false})%>");
		

		var dates = jQuery( "#end_date" ).datepicker({
			changeMonth: true, 
			changeYear: true,
			numberOfMonths: 3,	
			showButtonPanel: true,
			maxDate: date_today,
			showOn: "focus", 
			altField: "#end_export_clone",
    		altFormat: 'yy-mm-dd',
			dateFormat: getDateFormat('datepicker'),
			disabled: false,
			onSelect: function( selectedDate ) {
				var option = "maxDate",
					instance = jQuery( this ).data( "datepicker" ),
					date = jQuery.datepicker.parseDate(
						instance.settings.dateFormat ||
						jQuery.datepicker._defaults.dateFormat,
						selectedDate, instance.settings );
				dates.not( this ).datepicker( "option", option, date );
				jQuery(this).prop("date", date);

			var maxDate = jQuery("#end_date").datepicker('getDate');
            maxDate.setDate(maxDate.getDate()); 
            jQuery("#start_date").datepicker( "option", "maxDate", maxDate);

			//logic check : startdate <= enddate 
            var startISO = jQuery("#start_export_clone").val();
            var endISO = jQuery("#end_export_clone").val();
              if(jQuery.datepicker.parseDate('yy-mm-dd', startISO) > jQuery.datepicker.parseDate('yy-mm-dd', endISO))
              {
                jQuery('#start_export_clone').datepicker( "setDate", endISO );
                var datepickerEnd = jQuery('#end_date').val();
                jQuery('#start_date').datepicker( "setDate", datepickerEnd );
              }

			}
		});
		jQuery("#end_date").val("<%= formated_date(Time.now,{:format => :short_day_separated, :include_year => true, :translate => true})%>");
		jQuery("#end_export_clone").val("<%= formated_date(Time.now,{:format => :short_day_separated, :include_year => true, :translate => false})%>");
		})

	}(window.jQuery)
	jQuery("#start_date, #end_date").bind('keypress keyup keydown', function(ev) {
   	ev.preventDefault();
   	return false;
  });
<% end %>
