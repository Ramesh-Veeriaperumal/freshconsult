<% readonly = !global_access? %>

<h3 class="lead"><%=title%></h3> <br/>
	<%= form_for(@group, :html => {:id => "group_form"}) do |f| %>
	  <%= f.error_messages %>
	   <div class="row-fluid group-management">
		 	<ul class="unstylGroup::d">
		 		<li class="row-fluid">
		 			<%= f.label :name, "<b> #{t('group.name')} </b>".html_safe , :class => "control-label span2" %>
					  <div class="span10">
						 <%= f.text_field :name , :class => "text required span12", :placeholder => t('group.name'), :disabled => readonly %>
					  </div>
		 		</li>
		 		<li class="row-fluid">
		 			 <%= f.label :description, "<b> #{t('description')} </b>".html_safe, :class => "control-label span2" %>
					  <div class="span10">
						 <%= f.text_area :description , :class => "text required smallpara span12", :placeholder => t('group.description').html_safe, :disabled => readonly %>
					  </div>
		 		</li>
		 		<% if feature?(:multiple_business_hours) %>
		 		<li class="row-fluid margin-bottom">
		 			 <%= f.label :business_calendar, "<b> #{t('group.business_calendar')} </b>".html_safe, :class => "control-label span2" %>
					  <div class="span10">
					  	<input type="hidden" id="business_calendar" name="group[business_calendar]" class="span5"
            					data-placeholder = "<%= t("group.select_business_calendar") %>" <%if readonly%> disabled <%end%> />
					  </div>
		 		</li>
		 		<% end %>
		 		<li class="row-fluid margin-bottom">
		 			<label class="control-label span2">
		 				<b><%=t('group.info1').html_safe%> (<span id="agents_count"><%= @group.agents.count %></span>)</b>
		 			</label>
		 			<div class="span10">
		 				<input type="hidden" id="agent_list" name="group[agent_list]" class="span12"
		 				data-placeholder = "<%= t("helpdesk.tickets.add_watcher.add_agent") %>" <%if readonly%> disabled <%end%> />
		 			</div>
				</li>

	 			 <% 
					account_id =  @group.account_id
					if account_id.nil?
						account_id = current_account.id
					end
					 @exclude_list = @group.excluded_agents(current_account) %>
				<%  
					if(@exclude_list.nil? ||@exclude_list.size == 0)
						showagent = "display:none"
					end 
				%>

        <% hide_escalation = readonly ? "display:none" : "" %>
        <li class="row-fluid mb20" style= <%=hide_escalation%> >
          <label class="control-label span2">
            <b><%=t('group.escalation_rule')%></b>
          </label>
          <div class="span10">
            <ul class="unstyled group-ticket-assign">
              <li class="row-fluid">
                <span class="span6 group-text-align"><%=t('group.info4')%> :</span>
                <%= f.select :assign_time , Group::ASSIGNTIME_OPTIONS,{}, { :class => 'select2 span3', 
                             :disabled => readonly } %>
              </li>
              <li class="row-fluid">
                <span class="span6 group-text-align"> &nbsp; &nbsp;<%=t('group.send_escalation_to')%> </span> 
                <input type="hidden" id="escalate_to" name="group[escalate_to]" class="span3"
                       data-placeholder = "<%= t("group.select_an_agent") %>" <%if readonly%> disabled <%end%> />
              </li>
            </ul>
          </div>
        </li>

        <br />
        <% if feature?(:round_robin) %>
          <span class ="seperator"></span>
          <div class="row-fluid mt20">
            <div class="span1">
              <%= f.check_box :ticket_assign_type, :value => '1', :checked => @group.ticket_assign_type == Group::     TICKET_ASSIGN_TYPE[:round_robin],:rel => "toggle"  %>
            </div>
            <div class="span11">
              <h5 class="lead small-lead"><%= t('group.ticket_assignment') %></h5>   
              <p class="muted lead-desc"> <%= t('group.auto_assignment_description') %></p>
            </div>
          </div>
          <div class="row-fluid ui-helper-hidden" id="toggle_availability_container">
            <div class="span1">
              <%= f.check_box :toggle_availability, :value => '1', :checked => @group.new_record? ? true : @group.toggle_availability?,
                  :rel => "toggle" %>
            </div>
            <div class="span11">
              <h5 class="lead small-lead"><%= t('group.toggle_availability_for_rr') %></h5>
              <p class="muted lead-desc ui-helper-hidden" id="toggle_disabled"> 
                <%=t('group.toggle_availability_disabled').html_safe%>
              </p>
              <div class="toggle_enabled ui-helper-hidden">    
              <p class="muted lead-desc"> 
                <%=t('group.toggle_availability_enabled').html_safe%>
              </p> 
              <p class="muted lead-desc"> 
                <%=t('group.toggle_availability_note').html_safe%>
              </p>
              </div> 
            </div>
          </div>
        <% end %>
        <br />
      </ul>
     </div>
     <br />
    <div class="button-container">

      <%= link_to t('cancel'), groups_path, :class => "btn" %>

      <%= f.submit t('save'), :class => "btn btn-primary" %>

    </div>
  <% end %>
<script type="text/javascript">

jQuery(document).ready(function() {

auto_assign_ticket = <%=@group.ticket_assign_type == Group::TICKET_ASSIGN_TYPE[:round_robin]%>,
toggle_state = <%=@group.toggle_availability %>;

if (auto_assign_ticket) 
  jQuery("#toggle_availability_container").show();

if(toggle_state) 
  jQuery(".toggle_enabled").show();
else
  jQuery("#toggle_disabled").show();

<%
all_agents = []
all_agents_list = @group.all_agents_list(current_account)
if all_agents_list
  all_agents_list.each do |req|
    all_agents << "{id: '#{req.user_id}',
                  value: '#{escape_javascript(req.user.name)}',
                  text: '#{escape_javascript(req.user.name)}'}"
  end
end

selected_agents = []
agents = @group.agents.order("name")
if agents
	 agents.each do |req|
    selected_agents << "{id: '#{req.id}',
                  value: '#{escape_javascript(req.name)}',
                  text: '#{escape_javascript(req.name)}'}"
  end
end 
%>

jQuery('#agent_list').select2({
	multiple: true,
	data: [<%=all_agents.join(",").html_safe%>],
	initSelection : function (element, callback) {
      callback( [<%=selected_agents.join(",").html_safe%>] );
    }
	
});
jQuery("#agent_list").select2("val",[]);

jQuery("#agent_list").on("change", function() {
	var agent_count = 0;
	agent_list = jQuery("#agent_list").val();
	if (agent_list != '')  agent_count = agent_list.split(",").size();
	jQuery("#agents_count").text(agent_count);
});

<%
	technicians = []
	technicians[0]="{id: '',value: '"+t('none')+"',text: '"+t('none')+"' }"
	account_id =  @group.account_id
	if account_id.nil?
		account_id = current_account.id
	end
	technician_list = Agent.technician_list(account_id)
	if technician_list
		technician_list.each do |req|
			technicians << "{id: '#{req.id}',
                  value: '#{escape_javascript(req.name)}',
                  text: '#{escape_javascript(req.name)}'}"
		end
	end

	escalate_to_agent = []
	if @group.escalate
		escalate_to_agent << "{id: '#{@group.escalate.id}',
                  value: '#{escape_javascript(@group.escalate.name)}',
                  text: '#{escape_javascript(@group.escalate.name)}'}"
    end
%>
jQuery('#escalate_to').select2({
	multiple: false,
	data: [<%=technicians.join(",").html_safe%>],
	initSelection : function (element, callback) {
        var data = {id: "<%=@group.escalate_to%>", text: "<%=@group.escalate && @group.escalate.name%>"};
        callback(data);
    }
});

jQuery("#escalate_to").select2("val",'<%=@group.escalate_to%>');

<%  if feature?(:multiple_business_hours) %>
<%
	calendar = []
	current_account.business_calendar.each do |bc|
		calendar << "{id: '#{bc.id}',
                  value: '#{escape_javascript(bc.name)}',
                  text: '#{escape_javascript(bc.name)}'}"
	end

	selected_bc = []
	if @group.business_calendar
		selected_bc << "{id: '#{@group.business_calendar.id}',
                  value: '#{escape_javascript(@group.business_calendar.name)}',
                  text: '#{escape_javascript(@group.business_calendar.name)}'}"
    end

%>

jQuery('#business_calendar').select2({
	multiple: false,
	minimumResultsForSearch: 1000, //Keep high search value to shut off search box. Couldnt find a better way.
	data: [<%=calendar.join(",").html_safe%>],
	initSelection : function (element, callback) {
		var data = {id: "<%=@group.business_calendar && @group.business_calendar.id%>", text: "<%=@group.business_calendar && @group.business_calendar.name%>"};
        callback(data);
    }
});

jQuery("#business_calendar").select2("val","<%=@group.business_calendar && @group.business_calendar.id%>");

jQuery("#group_ticket_assign_type").on('change', function(event){
  var toggle = this.checked? "show" : "hide";
  jQuery("#toggle_availability_container")[toggle]();
});
  
jQuery("#group_toggle_availability").on('change', function(event){
  if(this.checked){
    jQuery(".toggle_enabled").show();
    jQuery("#toggle_disabled").hide();
  }
  else{
    jQuery(".toggle_enabled").hide();
    jQuery("#toggle_disabled").show();
  }
});

<% end %>

});

</script>
