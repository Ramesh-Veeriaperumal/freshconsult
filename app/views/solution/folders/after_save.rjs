if @folder_meta.errors.empty?
	@folder_meta.reload
	if params[:action].eql?('create')
		page << "App.Solutions.AfterSave.hide('#new-fold');"
		page << "App.Solutions.AfterSave.hide('#folder-new');"
	else
		page << "App.Solutions.AfterSave.hide('#version-#{@folder_meta.id}-l#{params[:language_id]}');"
		page << "App.Solutions.AfterSave.hide('#folder-edit');"
	end
	if params[:article].present?
		page << "App.Solutions.AfterSave.reloadFolderSelect('#solution_article_meta_solution_folder_meta_id', 
												'#{escape_javascript(option_groups_from_collection_for_select(
												current_account.solution_category_meta.includes(:primary_category, :solution_folder_meta => :primary_folder).reject(&:is_default), 
												:solution_folder_meta, :name, :id, :name))}','#{@folder_meta.id}');"
	else
		page << "App.Solutions.AfterSave.postFolderAction(#{@folder_meta.solution_category_meta_id}, '#{escape_javascript( render :partial => 'solution/categories/folder', :locals => {:folder => @folder_meta})}', #{@folder_meta.id}, '#{params[:action]}', '#{escape_javascript( render :partial => '/solution/categories/edit_bar' ) if privilege?(:manage_solutions)}');"
	end
	page << "App.Solutions.NavMenu.reload()" if @folder.primary?
else
  # Hack for better text in error message
  if @folder_meta.errors.messages.has_key? :"solution_category_meta.primary_category.name"
    @folder_meta.errors.messages[:"category.name"] = @folder_meta.errors.messages.delete :"solution_category_meta.primary_category.name"
  end
  # Without the above hack, instead of saying "Category name has already been taken", it will say:
  # "Solution category meta primary category name has already been taken"
  # Temporary fix until the right way is found
  
  
	page.replace_html :"error_messages_#{params[:action].eql?('create') ? 'new_folder' : "#{@folder_meta.id}_l#{@language.id}"}", "#{error_messages_for :folder_meta}"
end