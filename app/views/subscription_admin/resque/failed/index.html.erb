
<% default_page_count = 25 %>
<% start = params[:start].to_i %>
<% per_page = (params[:per_page].to_i > 0) ? params[:per_page].to_i : default_page_count %>
<% failed = Resque::Failure.all(start, per_page) %>
<% index = 0 %>
<% date_format = "%Y/%m/%d %T %z" %>

<% javascript_tag do -%>
  jQuery('.header').hide();
<% end %>

<%= link_to "Overview", admin_resque_home_path(), {:class => "uiButton", :id => "overview_button" } %>

<% unless failed.blank? %>
  <% Resque.queues.each do |name| %>
    <%= link_to "Remove jobs in #{name.humanize}" , destroy_all_admin_resque_failed_path(:name => name), { :method => :delete, :class => "uiButton" , :id => "resque_btn"} %>
  <%end%>
<% end %>


<h1 class="failed_heading">Failed Jobs</h1>

<p >Showing <%=start%> to <%= start + ((failed.size < per_page) ? failed.size : per_page) %> of <b><%= size = Resque::Failure.count %></b> jobs</p>

<table width="100%" class="queues-wrapper">
  <tr>
    <th>Error</th>
    <th>Failed at</th>
    <th>Queue</th>
    <th></th>
  </tr>

  <% failed.each do |job|%>
    <% index += 1 %>
    <% id = start + index - 1 %>
    <% if job.nil? %>
      <tr>
        <td>Error</td>
        <td colspan="3">
          Job <%= id %> could not be parsed; perhaps it contains invalid JSON?
        </td>
      </tr>
    <% else %>
      <tr>
        <td>
          <%= job['error'] %>
        </td>
        <td>
          <span class="resque_time"><%= Time.parse(job['failed_at']).strftime(date_format) %></span>
        </td>
        <td>
          <%= job['queue'] %>
        </td>
        <td>
          <input type="button" class="show_trace" value="Show Stacktrace" />
          <%= link_to t('remove'), destroy_admin_resque_failed_path(id), { :method => :delete, :class => "btn" } %>
          
          <%= link_to 'retry', requeue_admin_resque_failed_path(id), { :method => :put, :class => "btn" } unless job['retired_at'] %>
        </td>
      </tr>
      <tr style="display:none">
        <td colspan="4">
          <dt>Worker</dt>
            <dd>
              <%= puts job['worker']%>
              <b class='resque_worker'><%= job['worker'].split(':')[0...2].join(':') %></b> on <b class='queue-tag'><%= job['queue'] %></b > at <b><span class="resque_time"><%= Time.parse(job['failed_at']).strftime(date_format) %></span></b>
            </dd>
            <dt class='failed_category'>Class</dt>
              <dd><code><%= job['payload'] ? job['payload']['class'] : 'nil' %></code></dd>
            <dt class='failed_category'>Arguments</dt>
              <dd><pre><%=h job['payload'] ? Array(job['payload']['args']).map { |a| a.inspect }.join("\n"): 'nil' %></pre></dd>
            <dt class='failed_category'>Exception</dt>
              <dd><code><%= job['exception'] %></code></dd>
          <dt>Stacktrace</dt>
            <dd>
              <pre><%=h job['backtrace'].join("\n") %></pre>
            </dd>
        </td>
      </tr>
    <% end %>
  <%end%>

</table>

<% if  start - default_page_count >= 0 || start + default_page_count <= size %>
<p class='pagination'>
  <% if start - default_page_count >= 0 %>
    <a href="<%= url_path request.path_info.sub('/','') %>?start=<%= start - default_page_count %>" >&laquo; less</a>
  <% end %>
  <% if start + default_page_count <= size %>
    <a href="<%= url_path request.path_info.sub('/','') %>?start=<%= start + default_page_count %>" >more &raquo;</a>
  <% end %>
</p>
<%end%>

<% javascript_tag do -%>
  jQuery(".show_trace").on("click", function(){
    if(jQuery(this).val() == "Show Stacktrace"){
      jQuery(this).parent().parent().next().show();
      jQuery(this).val("Hide Stacktrace");
    }
    else{
      jQuery(this).parent().parent().next().hide();
      jQuery(this).val("Show Stacktrace");
    }
  });
<% end %>