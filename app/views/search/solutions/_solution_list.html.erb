<form id="searchmoreform" class="searchmoreform" action="#">
	  <input class="text search_text_box" name="solution[search]" id="solution_search" placeholder="Search solutions">
	  <span class="searchicon"></span>
</form>
<div class="dialog-well links">
  <div id="default_solution_suggestions" class="request_well">
  	<table class="table table-striped">
    <%= each_or_message("article", @search_results, t(:'ticket.suggested_solutions.no_result')) %>
    </table>
  </div>
  <div id="more_search_results"></div>
</div>
<script type="text/javascript">

jQuery('#searchmoreform')
	.parentsUntil('.modal')
	.siblings('.modal-header')
	.append(jQuery('#searchmoreform').detach());

function respondWithSol(select, sol_id, url){	
	if (select == "url"){
		insertSuggestions(url);
	}
	else if(select == "none"){
		return true;		
	}
	else{
		handleSolutionDetail(sol_id);		
	}
}

function insertSuggestions(value)
{
	var element_id = jQuery('#suggested_solutions_show').data('editorId'),
		$element = jQuery("#"+element_id);

	jQuery('#related_solutions').modal('hide');

	if($element){
		//restoreCaretPosition(element_id);//method in ticket show page.
		if(element_id != "send-tweet-cnt-reply-body" && element_id != "send-fb-post-cnt-reply-body") {
	 		var $redactor = $element.data('redactor');

		 	$element.getEditor().focus();
	 		$redactor.saveSelection();
	  		$redactor.restoreSelection();
 			$element.insertHtml(value);
 		} else {
 			var textValue = jQuery("<div />").html(value).text();
			$element.focus();
 			insertTextAtCursor($element.get(0), textValue);
 			$element.keyup(); // to update the SendTweetCounter value
 		}
 	}
}

//Method to restore the caret position when editor loses focus.[Suggest solutions]
function restoreCaretPosition(element_id){
	range = document.getSelection().getRangeAt(0);
	var range = document.createRange();
	focusNode = jQuery('#'+element_id).data('focus_node');
	focusOffSet = jQuery('#'+element_id).data('focus_node_offSet');
	if(focusNode == undefined) return;
	range.setStart(focusNode, focusOffSet);
	range.setEnd(focusNode, focusOffSet);
	document.getSelection().removeAllRanges();
	document.getSelection().addRange(range);
}

function handleSolutionDetail(sol_id){
  jQuery.ajax({	type: 'POST',
    url: '/helpdesk/tickets/get_solution_detail/'+sol_id,
    success: function(data){ insertSuggestions(data); }
  });
  return true;
};

jQuery("div.item").live("mouseover mouseout", function(event) {
	if ( event.type == "mouseover" ) {
		jQuery(this).find(".item-menu").show();
	} else {
		jQuery(this).find(".item-menu").hide();
	}
});

jQuery('#solution_search').live('keyup', function(ev) {
	if (this.value == '') {
		jQuery('#default_solution_suggestions').show(); 
		jQuery('#more_search_results').hide();
	}
});

jQuery("#searchmoreform").submit(function(ev){
	ev.preventDefault();
	var query = $('solution_search').value;
	jQuery('#default_solution_suggestions').hide();
	jQuery("#more_search_results").show().addClass("sloading loading-small");
	jQuery('#more_search_results')
	  .load('/search/search_solutions/ticket/' + <%=@ticket.id%> + '?q='+encodeURIComponent(query), 
	        function() {
	    jQuery("#more_search_results").removeClass("sloading loading-small");
	  });
	  
	return false;
});
</script>