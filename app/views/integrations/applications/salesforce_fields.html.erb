<% content_for :helpcard do -%>
  <div class="helpcard">
      <%=t("integrations.salesforce.helptext").html_safe%>
  </div>
<%- end %>

    <h3 class="lead"><%=t("integrations.salesforce.form.salesforce_settings")%></h3>
    <% method_type = (@action == "install") ? "post" : "put" %>
    <%= form_tag("/integrations/salesforce/#{@action}", :method => method_type)  do %>

    <% default_fields = ["Name"]%>
    <ul class="ui-form">
      <li class="inline-field">
        <label class="caption">
          <div class="logo application-logo-salesforce"></div>
          <div class="logo info-data">
            <%=t('integrations.salesforce.desc')%>
          </div>
        </label>
        <% divider_class = "hidden" %>
        <% if current_account.features?(:salesforce_sync) %>
          <% divider_class = "" %>
          <div class="ticket_sync">
            <% sync_checked = false%>
            <%unless @installed_app.blank? %>
              <% installed_sync_checked = @installed_app.configs_salesforce_sync_option %>
              <% sync_checked = installed_sync_checked.to_bool if installed_sync_checked.present? %>
            <%end%>
            <%= content_tag(:span, "Sync tickets to salesforce") %>
            <%= check_box(:salesforce_sync_option, "value", :checked => sync_checked) %>
          </div>  
        <% end%>
        <div class="salesforce-wrapper salesforce-new-block">
          <span class="seperator <%= divider_class %>"></span>
          <div class="row-fluid">
            <div class="sf-contact-fields sf-settings-widget"> 
              <h3 class="leftselect2"><%=t("integrations.salesforce.form.contact")%></h3>
              <div id='sfcontacts'>
                <span>
                  <div id="contactslist">
                    <ul>
                      <%selected_fields = default_fields.collect{|x| x} %>
                      <%unless @installed_app.blank? %>
                        <%selected_fields.push(@installed_app.configs_contact_fields.split(",").collect!{ |x| next if  default_fields.include?(x);
                           x
                          })%>
                      <%end%>
                    </ul>
                  </div>
                  <!--select_tag input for selected fields is considering it as string if we directly pass the array object. Hence this workaround to convert it at runtime -->
                  <%data =selected_fields.join(",").html_safe%>
                  <% contact_fields = @salesforce_config['contact_fields'] %>
                  <% # order the fields in such a way so that default fields come at the top
                    contact_fields_list = []
                    default_fields.each { |field| contact_fields_list.push([contact_fields[field],field]) } 
                    @salesforce_config['contact_fields'].keys.collect{|field|
                      contact_fields_list.push([contact_fields[field],field]) if not default_fields.include?(field); 
                    }
                  %>
                  <%=hidden_field_tag :contact_labels %>
                  <%= select_tag :contacts, 
                          options_for_select(contact_fields_list,data.split(",")), { :multiple => true, :class => "select2-fields salesforce-int-select","data-placeholder" => " "} %> <!-- space in placeholder to add an empty option -->
                </span>
              </div>
            </div>
            <div class="sf-lead-fields sf-settings-widget">
              <h3><%=t("integrations.salesforce.form.lead")%></h3>   
              <div id="sfleads">
                <span>
                  <div id="leadslist">
                    <ul>
                      <%selected_lead_fields = default_fields.collect{|x| x} # use a copy to not change default fields %>
                      <%unless @installed_app.blank? %>
                        <%selected_lead_fields.push(@installed_app.configs_lead_fields.split(",").collect!{ |x| next if default_fields.include?(x);
                         x
                         })%>
                      <%end%>
                    </ul>
                  </div>
                  <%data =selected_lead_fields.join(",").html_safe%>
                  <% lead_fields = @salesforce_config['lead_fields'] %>
                  <% # order the fields in such a way so that default fields come at the top
                    lead_fields_list = []
                    default_fields.each { |field| lead_fields_list.push([lead_fields[field],field]) } 
                    @salesforce_config['lead_fields'].keys.collect{|field|
                      lead_fields_list.push([lead_fields[field],field]) if not default_fields.include?(field); 
                    }
                    %>
                  <%=hidden_field_tag :lead_labels %>
                  <%= select_tag :leads, 
                            options_for_select(lead_fields_list,data.split(",")),{:multiple=>true, :class=>"select2-fields salesforce-int-select","data-placeholder" => " "} %><!-- space in placeholder to add an empty option -->
                </span>
              </div>
            </div>
            <div class="sf-account-fields sf-settings-widget"> 
              <h3 class="leftselect2"><%=t("integrations.salesforce.form.account")%></h3>
              <div id='sfaccounts'>
                <span>
                  <div id="accountslist">
                    <ul>
                      <%selected_fields = default_fields.collect{|x| x} %>
                      <%unless @installed_app.blank? %> 
                        <%config_account_fields = @installed_app.configs[:inputs]['account_fields'] ? @installed_app.configs[:inputs]['account_fields'] : ""%>
                        <%selected_fields.push(config_account_fields.split(",").collect!{ |x| next if  default_fields.include?(x);
                           x
                          })%>
                      <%end%>
                    </ul>
                  </div>
                  <!--select_tag input for selected fields is considering it as string if we directly pass the array object. Hence this workaround to convert it at runtime -->
                  <%data =selected_fields.join(",").html_safe%>
                  <% account_fields = @salesforce_config['account_fields'] %>
                  <% # order the fields in such a way so that default fields come at the top
                    account_fields_list = []
                    default_fields.each { |field| account_fields_list.push([account_fields[field],field]) } 
                    @salesforce_config['account_fields'].keys.collect{|field|
                      account_fields_list.push([account_fields[field],field]) if not default_fields.include?(field); 
                    }
                  %>
                  <%=hidden_field_tag :account_labels %>
                  <%= select_tag :accounts, 
                          options_for_select(account_fields_list,data.split(",")), { :multiple => true, :class => "select2-fields salesforce-int-select","data-placeholder" => " "} %> <!-- space in placeholder to add an empty option -->
                </span>
              </div>
            </div>
            <div class="sf-opportunity-fields sf-settings-widget">
              <% opportunity_view = false %>
              <% agent_settings = false %> 
              <%unless @installed_app.blank? %>
                <% installed_opp_view = @installed_app.configs_opportunity_view %>
                <% opportunity_view = installed_opp_view.to_bool if installed_opp_view.present? %>
                <% installed_agent_settings = @installed_app.configs_agent_settings %>
                <% agent_settings = installed_agent_settings.to_bool if installed_agent_settings.present? %>
              <%end%>
              <div id="opportunity-info" data-child="opportunity-settings">
                <%=content_tag(:h3, t("integrations.salesforce.form.opportunity"), :class => 'opportunity-header') %>
                <%= check_box(:opportunity_view, "value", :checked => opportunity_view) %>
                <% hide =  opportunity_view ? "" : "hide" %>
                <% disabled = !opportunity_view %>
              </div>
              <div id='sfopportunities' class="opportunity-settings mt5 <%=hide%>">
                <span>
                  <div id="opportunitieslist">
                    <ul>
                      <%opportunity_default_fields = ["Name", "StageName", "CloseDate"] %>
                      <%selected_fields = opportunity_default_fields.collect{|x| x} %>
                      <%unless @installed_app.blank? %>
                        <%selected_fields.push(@installed_app.configs_opportunity_fields.split(",").collect!{ |x| next if  opportunity_default_fields.include?(x);
                           x
                          }) if @installed_app.configs_opportunity_fields.present? %>
                      <%end%>
                    </ul>
                  </div>
                  <!--select_tag input for selected fields is considering it as string if we directly pass the array object. Hence this workaround to convert it at runtime -->
                  <%data = selected_fields.join(",").html_safe%>
                  <% opportunity_fields = @salesforce_config['opportunity_fields'] %>
                  <% # order the fields in such a way so that default fields come at the top
                    opportunity_fields_list = []
                    opportunity_default_fields.each { |field| opportunity_fields_list.push([opportunity_fields[field],field]) } 
                    @salesforce_config['opportunity_fields'].keys.collect{|field|
                      opportunity_fields_list.push([opportunity_fields[field],field]) if not opportunity_default_fields.include?(field); 
                    }
                  %>
                  <%=hidden_field_tag :opportunity_labels %>
                  <%= select_tag :opportunities, 
                          options_for_select(opportunity_fields_list,data.split(",")), { :multiple => true, :class => "select2-fields salesforce-int-select","data-placeholder" => " "} %> <!-- space in placeholder to add an empty option -->
                </span>
              </div>
            </div>
          </div>
        </div>
      </li>
    </ul>
    <div class="button-container">
      <%= link_to t('back'), {:controller => 'applications', :action => 'index'}, :class => "btn" %>
      <%= submit_tag t('update'), :class => "btn btn-primary",:onclick => "return fillLabels();" %>
    </div>
  <%end%>


<script type="text/javascript">

function fillLabels(){
   var selectedValues = []; 
   var leadValues =[];   
   var accountValues =[]; 
   var opportunityValues = [];  
    jQuery("#contacts :selected").each(function(){
        selectedValues.push(jQuery(this).text()); 
    });
    jQuery('#contact_labels').val(selectedValues);

    jQuery("#leads :selected").each(function(){
        leadValues.push(jQuery(this).text()); 
    });
    jQuery('#lead_labels').val(leadValues);

    jQuery("#accounts :selected").each(function(){
        accountValues.push(jQuery(this).text()); 
    });
    jQuery('#account_labels').val(accountValues);
    jQuery("#opportunities :selected").each(function(){
        opportunityValues.push(jQuery(this).text()); 
    });
    jQuery('#opportunity_labels').val(opportunityValues);
    return true;
}

  jQuery("#salesforce_sync_option_value").itoggle();

  jQuery("#opportunity_view_value").itoggle({buttonClass:"toggle-button toggle_child_on_click"});

  jQuery("#contacts").select2({maximumSelectionSize: 10,removeOptionOnBackspace:false})

  jQuery("#leads").select2({maximumSelectionSize: 10,removeOptionOnBackspace:false})

  jQuery("#accounts").select2({maximumSelectionSize: 10,removeOptionOnBackspace:false})

  jQuery("#opportunities").select2({maximumSelectionSize: 10,removeOptionOnBackspace:false})

  //setting the Name as default field(can't be removed.)
  jQuery("#sfcontacts ul .select2-search-choice div").each(function(index,element){
    value = jQuery(element).text();
    if(value =="Full Name"){
      jQuery(element).next("a").remove();
    }
  });

jQuery("#sfleads ul .select2-search-choice div").each(function(index,element){
    value = jQuery(element).text();
    if(value =="Full Name"){
      jQuery(element).next("a").remove();
    }
  });
  jQuery("#sfaccounts ul .select2-search-choice div").each(function(index,element){
    value = jQuery(element).text();
    if(value =="Account Name"){
      jQuery(element).next("a").remove();
    }
  });

  //setting Name, Stage and Close Date as default opportunity fields(can't be removed.)
  jQuery("#sfopportunities ul .select2-search-choice div").each(function(index,element){
    value = jQuery(element).text();
    if(value =="Name" || value == "Stage" || value == "Close Date"){
      jQuery(element).next("a").remove();
    }
  });

// This event will turn the plus select icon to grey on reaching the maximum selection size
  jQuery(".select2-fields").on('change',function(){
    var list_elements = jQuery(this).prev(".select2-container-multi").children().children();
    var list_size = list_elements.length - 1;
    if(list_size == 10){
      jQuery(this).addClass('salesforce-disable-select');
    }
    else{
      if(jQuery(this).hasClass('salesforce-disable-select')){
        jQuery(this).removeClass('salesforce-disable-select');
      }
    }
  });

  jQuery('body').on('click', '.toggle_child_on_click', function() {
    var div = jQuery(this).parent().data('child');
    var input = jQuery('#agent_settings.' + div).find('input');
    input.attr('disabled', !input.attr('disabled'));
    jQuery('.' + div).slideToggle();
  });

  jQuery('body').on('click', '.checkbox_label', function(ev) {
    if (!jQuery(ev.target).is('input[type=checkbox]')) {
      var checkbox = jQuery(this).prev("input[type=checkbox]");
      checkbox.prop('checked', !checkbox.prop('checked'));
    }
  });

</script>
