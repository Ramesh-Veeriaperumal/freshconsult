<% content_for :helpcard do -%>
  <div class="helpcard">
      <%=t("integrations.salesforce.helptext").html_safe%>
  </div>
<%- end %>

	<h3 class="lead"><%=t("integrations.salesforce.form.salesforce_settings")%></h3>

  <%form_tag("/integrations/applications/oauth_install/salesforce?install=true", :method=> "post")  do %>

  <div class="all-post-heading tooltip">
    <div style="float:left;" id="field_visiblity">
      Field Visiblity
    </div>
    <div id="field_mapping">
      Field Mapping
    </div>
  </div>
   <% default_fields = ["Name"]%>
    <ul class="ui-form">
    <li class="inline-field">
      <label class="caption">
        <div class="logo application-logo-salesforce"></div>
        <div class="logo info-data">
          <%=t('integrations.salesforce.desc')%>
        </div>
      </label>
      <div class="salesforce-wrapper" id="field_visiblity_div">
        <div class="contact-fields"> 
          <h3 class="leftselect2"><%=t("integrations.salesforce.form.contact")%></h3>
      		<div id='sfcontacts'>
      			<span>
      				<div id="contactslist">
      	  			<ul>
                  <%selected_fields = default_fields.collect{|x| x} %>
                  <%unless @installed_app.blank? %>
                    <%selected_fields.push(@installed_app.configs_contact_fields.split(",").collect!{ |x| next if  default_fields.include?(x);
                       x
                      })%>
                  <%end%>
                </ul>
    	  			</div>
              <!--select_tag input for selected fields is considering it as string if we directly pass the array object. Hence this workaround to convert it at runtime -->
              <%data =selected_fields.join(",").html_safe%>
              <% contact_fields = @salesforce_config['contact_fields'] %>
              <% # order the fields in such a way so that default fields come at the top
                contact_fields_list = []
                default_fields.each { |field| contact_fields_list.push([contact_fields[field],field]) } 
                @salesforce_config['contact_fields'].keys.collect{|field|
                  contact_fields_list.push([contact_fields[field],field]) if not default_fields.include?(field); 
                }
              %>
              <%=hidden_field_tag :contact_labels %>
      			  <%= select_tag :contacts, 
                			options_for_select(contact_fields_list,data.split(",")), { :multiple => true, :class => "select2-fields int-select","data-placeholder" => " "} %> <!-- space in placeholder to add an empty option -->
          	</span>
      		</div>
        </div>
        <div class="lead-fields">
          <h3><%=t("integrations.salesforce.form.lead")%></h3>   
      		<div id="sfleads">
      			<span>
      			<div id="leadslist">
      	  				<ul>
                    <%selected_lead_fields = default_fields.collect{|x| x} # use a copy to not change default fields %>
                  <%unless @installed_app.blank? %>
                  <%selected_lead_fields.push(@installed_app.configs_lead_fields.split(",").collect!{ |x| next if default_fields.include?(x);
                   x
                   })%>
                  <%end%>
                  </ul>
      	  	</div>
            <%data =selected_lead_fields.join(",").html_safe%>
            <% lead_fields = @salesforce_config['lead_fields'] %>
            <% # order the fields in such a way so that default fields come at the top
              lead_fields_list = []
              default_fields.each { |field| lead_fields_list.push([lead_fields[field],field]) } 
              @salesforce_config['lead_fields'].keys.collect{|field|
                lead_fields_list.push([lead_fields[field],field]) if not default_fields.include?(field); 
              }
              %>
            <%=hidden_field_tag :lead_labels %>
      			<%= select_tag :leads, 
                			options_for_select(lead_fields_list,data.split(",")),{:multiple=>true, :class=>"select2-fields int-select","data-placeholder" => " "} %><!-- space in placeholder to add an empty option -->
                </span>
      	  </div>
        </div>
        <div class="account-fields"> 
          <h3 class="leftselect2"><%=t("integrations.salesforce.form.account")%></h3>
      		<div id='sfaccounts'>
      			<span>
      				<div id="accountslist">
      	  			<ul>
                  <%selected_fields = default_fields.collect{|x| x} %>
                  <%unless @installed_app.blank? %> 
                    <%config_account_fields = @installed_app.configs[:inputs]['account_fields'] ? @installed_app.configs[:inputs]['account_fields'] : ""%>
                    <%selected_fields.push(config_account_fields.split(",").collect!{ |x| next if  default_fields.include?(x);
                       x
                      })%>
                  <%end%>
                </ul>
    	  			</div>
              <!--select_tag input for selected fields is considering it as string if we directly pass the array object. Hence this workaround to convert it at runtime -->
              <%data =selected_fields.join(",").html_safe%>
              <% account_fields = @salesforce_config['account_fields'] %>
              <% # order the fields in such a way so that default fields come at the top
                account_fields_list = []
                default_fields.each { |field| account_fields_list.push([account_fields[field],field]) } 
                @salesforce_config['account_fields'].keys.collect{|field|
                  account_fields_list.push([account_fields[field],field]) if not default_fields.include?(field); 
                }
              %>
              <%=hidden_field_tag :account_labels %>
      			  <%= select_tag :accounts, 
                			options_for_select(account_fields_list,data.split(",")), { :multiple => true, :class => "select2-fields int-select","data-placeholder" => " "} %> <!-- space in placeholder to add an empty option -->
          	</span>
      		</div>
        </div>
      </div>
      <div class="all-post-heading tooltip" id="field_mapping_div" style="display: none;">
        <%
        existing_companies = [{"fd_field" => "name", "sf_field" => "Name"}]
        existing_contacts = [{"fd_field" => "name", "sf_field" => "Name"}, {"fd_field" => "email", "sf_field" => "Email"}, {"fd_field" => "company_name", "sf_field" => "AccountId"}]
        existing_companies = @installed_app.configs_companies unless @installed_app.nil?
        existing_contacts = @installed_app.configs_contacts unless @installed_app.nil?
        %>
        <input type="checkbox" id="sync_with_sf" name="sync_with_sf"/>Sync data with salesforce CRM</br>
        <input type="radio" id="sf_sync_type" name="sf_sync_type" value="both" checked />Either-way sync</br>
        <input type="radio" id="sf_sync_type" name="sf_sync_type" value="push" />Only push to Salesforce</br>
        <input type="radio" id="sf_sync_type" name="sf_sync_type" value="pull" />Only pull to Freshdesk</br>
        <div id="company" style="float:left;">
          Company |
        </div>
        <div id="contact">
          &nbsp;Contact
        </div>
        <div class="salesforce-wrapper">
          <div id="company_div">
            <div>
              <div style="float:left;">Freshdesk Fields  </div>
              <div>Salesforce Account Fields  </div>
            </div>
            <div>
              <% @data = [
                {:type => 'dropdown', :options => @salesforce_config['fd_company'], :name => 'inputs[companies][][fd_field]', :refer_key => 'fd_field'},
                {:type => 'dropdown', :options => @salesforce_config['sf_company'], :name => 'inputs[companies][][sf_field]', :refer_key => 'sf_field'}
                ] %>
              <%= construct_rules(@data, existing_companies.to_json.html_safe) %>
            </div>
          </div>
          <div id="contact_div" style="display: none;">
            <input type="radio" id="contacts_sync_type" name="contacts_sync_type" value="all" checked />Sync all contacts</br>
            <input type="radio" id="contacts_sync_type" name="contacts_sync_type" value="required"/>Sync only if the company is available in salesforce
            <div>
              <div style="float:left;">Freshdesk Fields  </div>
              <div>Salesforce Account Fields  </div>
            </div>
            <div >
              <% @data = [
                {:type => 'dropdown', :options => @salesforce_config['fd_contact'], :name => 'inputs[contacts][][fd_field]', :refer_key => 'fd_field'},
                {:type => 'dropdown', :options => @salesforce_config['sf_contact'], :name => 'inputs[contacts][][sf_field]', :refer_key => 'sf_field'}
                ] %>
              <%= construct_rules(@data, existing_contacts.to_json.html_safe) %>
            </div>
          </div>
        </div>
      </div>
    </li>
    </ul>
    <input type="checkbox" id="sync_existing_data" name="sync_existing_data"/>Run field mapping changes on existing freshdesk customers</br>
    <div class="button-container">
      <%= link_to t('back'), {:controller => 'applications', :action => 'index'}, :class => "btn" %>
      <%= submit_tag t('update'), :class => "btn btn-primary",:onclick => "return fillLabels();" %>
    </div>

  <%end%>



<script type="text/javascript">

function fillLabels(){
   var selectedValues = []; 
   var leadValues =[];   
   var accountValues =[];   
    jQuery("#contacts :selected").each(function(){
        selectedValues.push(jQuery(this).text()); 
    });
    jQuery('#contact_labels').val(selectedValues);

    jQuery("#leads :selected").each(function(){
        leadValues.push(jQuery(this).text()); 
    });
    jQuery('#lead_labels').val(leadValues);

    jQuery("#accounts :selected").each(function(){
        accountValues.push(jQuery(this).text()); 
    });
    jQuery('#account_labels').val(accountValues);
    return true;
}
  jQuery("#contacts").select2({maximumSelectionSize: 10,removeOptionOnBackspace:false})

  jQuery("#leads").select2({maximumSelectionSize: 10,removeOptionOnBackspace:false})

  jQuery("#accounts").select2({maximumSelectionSize: 10,removeOptionOnBackspace:false})

  //setting the Name as default field(can't be removed.)
  jQuery("#sfcontacts ul .select2-search-choice div").each(function(index,element){
    value = jQuery(element).text();
    if(value =="Full Name"){
      jQuery(element).next("a").remove();
    }
  });

jQuery("#sfleads ul .select2-search-choice div").each(function(index,element){
    value = jQuery(element).text();
    if(value =="Full Name"){
      jQuery(element).next("a").remove();
    }
  });
  jQuery("#sfaccounts ul .select2-search-choice div").each(function(index,element){
    value = jQuery(element).text();
    if(value =="Account Name"){
      jQuery(element).next("a").remove();
    }
  });

  jQuery("#field_mapping").click(function(){
    jQuery("#field_mapping_div").show();
    jQuery("#field_visiblity_div").hide();
    jQuery("#company_div").show();
  });

  jQuery("#field_visiblity").click(function(){
    jQuery("#field_mapping_div").hide();
    jQuery("#field_visiblity_div").show();
    jQuery("#company_div").hide();
    jQuery("#contact_div").hide();
  });

  jQuery("#contact").click(function(){
    jQuery("#contact_div").show();
    jQuery("#company_div").hide();
  });

  jQuery("#company").click(function(){
    jQuery("#company_div").show();
    jQuery("#contact_div").hide();
  });

  jQuery(document).ready(function(){
    jQuery('#sync_with_sf').prop('checked', "<%= @salesforce_config['sync_with_sf'] %>");
    jQuery('#sync_existing_data').prop('checked', "<%= @salesforce_config['sync_existing_data'] %>");
    jQuery('input[name="contacts_sync_type"][value="' + "<%= @salesforce_config['contacts_sync_type'] %>" + '"]').attr('checked', true);
    jQuery('input[name="sf_sync_type"][value="' + "<%= @salesforce_config['sf_sync_type'] %>" + '"]').attr('checked', true);
  });

  jQuery(function(){
    
    jQuery('.construct_rules').constructRules();
});


</script>
