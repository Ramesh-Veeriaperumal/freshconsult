<ul>
  <li class="inline-field">
    <% divider_class = "hidden" %>
    <% if @element_config["element"] == "salesforce_v2"%>
      <% divider_class = "" %>
      <div>
        <% sync_checked = false%>
        <%unless @installed_app.blank? %>
          <% installed_sync_checked = @installed_app.configs_ticket_sync_option %>
          <% sync_checked = installed_sync_checked.to_bool if installed_sync_checked.present? %>
        <%end%>
        <%= content_tag(:span, "Sync tickets to salesforce") %>
        <%= check_box(:ticket_sync_option, "value", :checked => sync_checked) %>
      </div>  
    <% end%>
    <div class="salesforce-wrapper salesforce-new-block cloud-elements">
      <span class="seperator <%= divider_class %>"></span>
      <div class="row-fluid">
        <div class="sf-contact-fields sf-settings-widget"> 
          <h3 class="leftselect2"><%=t("integrations.cloud_elements.form.contact")%></h3>
          <div id='sfcontacts'>
            <span>
              <div id="contactslist">
                <ul>
                  <%selected_fields = default_fields['contact'].collect{|x| x} %>
                  <%unless @installed_app.blank? %>
                    <%selected_fields.push(@installed_app.configs_contact_fields.split(",").collect!{ |x| next if  default_fields['contact'].include?(x);
                       x
                      })%>
                  <%end%>
                </ul>
              </div>
              <!--select_tag input for selected fields is considering it as string if we directly pass the array object. Hence this workaround to convert it at runtime -->
              <%data =selected_fields.join(",").html_safe%>
              <% contact_fields = @element_config['contact_fields'] %>
              <% contact_fields.merge!(@element_config['additional_fields']['contact']) if @element_config['additional_fields']['contact'].present? %>
              <% # order the fields in such a way so that default fields come at the top
                contact_fields_list = []
                default_fields['contact'].each { |field| contact_fields_list.push([contact_fields[field],field]) } 
                contact_fields.keys.collect{|field|
                  contact_fields_list.push([contact_fields[field],field]) if not default_fields['contact'].include?(field); 
                }
              %>
              <%=hidden_field_tag :contact_labels %>
              <%= select_tag :contacts, 
                      options_for_select(contact_fields_list,data.split(",")), { :multiple => true, :class => "select2-fields salesforce-int-select","data-placeholder" => " "} %> <!-- space in placeholder to add an empty option -->
            </span>
          </div>
        </div>
        <%if @element_config["objects"].include? "lead"%>
        <div class="sf-lead-fields sf-settings-widget">
          <h3><%=t("integrations.cloud_elements.form.lead")%></h3>   
          <div id="sfleads">
            <span>
              <div id="leadslist">
                <ul>
                  <%selected_lead_fields = default_fields['lead'].collect{|x| x} # use a copy to not change default fields %>
                  <%unless @installed_app.blank? %>
                    <%selected_lead_fields.push(@installed_app.configs_lead_fields.split(",").collect!{ |x| next if default_fields['lead'].include?(x);
                     x
                     })%>
                  <%end%>
                </ul>
              </div>
              <%data =selected_lead_fields.join(",").html_safe%>
              <% lead_fields = @element_config['lead_fields'] %>
              <% lead_fields.merge!(@element_config['additional_fields']['lead']) if @element_config['additional_fields']['lead'].present? %>
              <% # order the fields in such a way so that default fields come at the top
                lead_fields_list = []
                default_fields['lead'].each { |field| lead_fields_list.push([lead_fields[field],field]) } 
                lead_fields.keys.collect{|field|
                  lead_fields_list.push([lead_fields[field],field]) if not default_fields['lead'].include?(field); 
                }
                %>
              <%=hidden_field_tag :lead_labels %>
              <%= select_tag :leads, 
                        options_for_select(lead_fields_list,data.split(",")),{:multiple=>true, :class=>"select2-fields salesforce-int-select","data-placeholder" => " "} %><!-- space in placeholder to add an empty option -->
            </span>
          </div>
        </div>
        <%end%>
        <div class="sf-account-fields sf-settings-widget"> 
          <h3 class="leftselect2"><%=t("integrations.cloud_elements.form.account")%></h3>
          <div id='sfaccounts'>
            <span>
              <div id="accountslist">
                <ul>
                  <%selected_fields = default_fields['account'].collect{|x| x} %>
                  <%unless @installed_app.blank? %> 
                    <%config_account_fields = @installed_app.configs[:inputs]['account_fields'] ? @installed_app.configs[:inputs]['account_fields'] : ""%>
                    <%selected_fields.push(config_account_fields.split(",").collect!{ |x| next if  default_fields['account'].include?(x);
                       x
                      })%>
                  <%end%>
                </ul>
              </div>
              <!--select_tag input for selected fields is considering it as string if we directly pass the array object. Hence this workaround to convert it at runtime -->
              <%data =selected_fields.join(",").html_safe%>
              <% account_fields = @element_config['account_fields'] %>
              <% account_fields.merge!(@element_config['additional_fields']['account']) if @element_config['additional_fields']['account'].present? %>
              <% # order the fields in such a way so that default fields come at the top
                account_fields_list = []
                default_fields['account'].each { |field| account_fields_list.push([account_fields[field],field]) } 
                account_fields.keys.collect{|field|
                  account_fields_list.push([account_fields[field],field]) if not default_fields['account'].include?(field); 
                }
              %>
              <%=hidden_field_tag :account_labels %>
              <%= select_tag :accounts, 
                      options_for_select(account_fields_list,data.split(",")), { :multiple => true, :class => "select2-fields salesforce-int-select","data-placeholder" => " "} %> <!-- space in placeholder to add an empty option -->
            </span>
          </div>
        </div>
        <%if @element_config['element'] === "salesforce_v2" || @element_config['element'] === "dynamics_v2" %>
            <%=render :partial => "/integrations/applications/crm/salesforce_visibility",
                   :locals => { :default_fields => @element_config['default_fields'] }%>
        <%end%>
      </div>
    </div>
  </li>
</ul>
