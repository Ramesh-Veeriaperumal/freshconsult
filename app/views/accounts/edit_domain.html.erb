<!doctype html>
<%= open_html_tag %>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Getting Started</title>
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- Adding meta tag for CSRF token -->
    <%= csrf_meta_tag %>
    <!-- End meta tag for CSRF token -->
    <!-- Mobile viewport optimized-->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <%= stylesheet_link_tag_with_rtl :'cdn/edit_domain' %>

    <script type="text/javascript">
        cloudfront_version = "<%= CLOUDFRONT_VERSION %>";
    </script>
    <%= javascript_include_tag :'cdn/defaults' %>
    <%= javascript_include_tag :'cdn/frameworks' %>
    <%= javascript_include_tag :'cdn/workspace' %>

    <link rel="shortcut icon" href="/images/misc/favicon.ico">
    <link rel="apple-touch-icon" href="/images/touch/touch-icon-iphone.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/images/touch/touch-icon-ipad.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/images/touch/touch-icon-iphone-retina.png">
</head>
<body>
    <div class="body-wrapper">
        <div class="body-container">
            <div class="header">
                <div class="logo-container">
                    <%= image_tag '/assets/onboarding/fd-logo.png', :alt => t('logo'), :class => "logo-image",
          :onerror => "default_image_error(this)",
          :"data-type" => "logo" %>
                </div>
                <h2 class="title-text"><%=t('.title2')%></h2>
            </div>

            <div class="form-wrapper set-domain-form-wrapper">
                <%= form_tag update_domain_accounts_path, method: :put, id:"update_domain_form" ,class: "set-domain-form" do %>
                <%= hidden_field_tag :company_domain, current_account.domain %>
                <%= hidden_field_tag :support_email,  current_account.primary_email_config.to_email.split("@")[0] %>
                <%= hidden_field_tag :authenticity_token, form_authenticity_token %>

                <fieldset class="input-fieldset domain-fieldset active">
                    <label class="label-text"><%=t('.url_label')%></label>
                    <div class="input-container underlined domain-input-container" data-container=".domain-fieldset" container data-toggle="popover" data-placement="right" data-content="<%= t('.url_error1') %>">
                        <span class="domain-name editable-span" contenteditable="true" data-editable="domain"><%= current_account.domain %></span>
                        <span class="domain-ext app-domain">.<%= AppConfig['base_domain'][Rails.env]%></span>
                    </div>
                </fieldset>

                <fieldset class="input-fieldset email-fieldset">
                    <label class="label-text"><%=t('.email_label')%></label>
                    <div class="input-container underlined email-input-container" data-container=".domain-fieldset" container data-toggle="popover" data-placement="right" data-content="<%= t('.email_error') %>">
                        <span class="email-name editable-span " contenteditable="true" data-editable="email"><%= current_account.primary_email_config.to_email.split("@")[0] %></span>
                        <span class="domain-ext email-domain">@<%= current_account.full_domain %></span>
                    </div>
                    <small class="info-text"><%=t('.email_info_text')%></small>
                </fieldset>
                <div class="account-flash">
                    <%= t('.account_url_defaulted') %>
                </div>
                <%= button_tag t('.submit_button_text'), class: "submit-button" %>
                <% end %>
            </div>
        </div>
    </div>
</body>
<script>
    (function ($) {
        $(document).ready(function () {
            setInputFocus();
            var invalidDomain = false;
            var invalidEmail = false;
            var domainExistsError = "<%= t('.url_error1') %>";
            var invalidDomainError = "<%= t('.email_error') %>";
            // input containers
            var domainInputContainer = $(".domain-input-container");
            var emailInputContainer = $(".email-input-container");
            var waitTime = 500;
            var timeCount;
            var editableSpan = $(".editable-span");
            $(".input-fieldset:not(active)").click(function () {
                resetActiveFieldset(this);
            });
            $(".editable-span.domain-name").on('input', function () {
                updateEmailDomain();
            });

            editableSpan.on('keydown', function (e) {
                if (e.key.match(/[^a-z0-9A-Z-]/g, "") || e.keyCode == 13) {
                    return false;
                }
            });

            editableSpan.on('input', function (e) {
                // to lower case
                var editableType = $(this).data("editable");
                updateMargin($(this), e.currentTarget.innerText.length );
                if (editableType == "domain") {
                    // checking with max values
                    if (e.currentTarget.innerText.length <= 2) {
                        invalidDomainPopover(invalidDomainError);
                    } else {
                        clearTimeout(timeCount);
                        timeCount = setTimeout(function(){
                            validateDomain($(this))
                        }, waitTime);
                    }
                }
                if (editableType == "email") {
                    validateEmail(e);
                    if (!invalidEmail) {
                        $(this).parent('.input-container').removeClass('error').popover("hide").popover("disable");
                    }
                }
            });
            $(".set-domain-form .submit-button").click(function (event) {
                event.preventDefault();
                // validate domain
                    if ($(".editable-span.domain-name").text().length <= 2) {
                        invalidDomainPopover(invalidDomainError);
                    } 
                // validate email
                    var e = {};
                    e.currentTarget = {}
                    e.currentTarget.innerText = $(".editable-span.email-name").text();
                    validateEmail(e);

                if(!invalidEmail && !invalidDomain) {
                    populateFormFields();
                    var postData = $("#update_domain_form").serializeArray();
                    var formURL = $("#update_domain_form").attr("action");
                    $.ajax({
                        url: formURL,
                        type: "PUT",
                        data: postData,
                        dataType: "json",
                        statusCode: {
                            200: function (xhr) {
                                // redirect to domain
                                window.location = xhr.url;
                            },
                            422: function () {
                                // invalid domain
                                invalidDomainPopover(domainExistsError);
                            },
                            408: function (xhr) {
                                // domain created
                                window.location = xhr.responseText.url;
                                $(".account-flash").show();
                                window.setTimeout(function () {
                                    window.location = xhr.responseText.url;
                                }, 5000);
                            }
                        }
                    });
                } else {
                    if(invalidDomain) {
                        // show domain popover
                        $('.domain-input-container').popover().popover("show");
                    } 
                    if(invalidEmail) {
                        // show email popover
                        $('.email-input-container').popover().popover("show");
                    }
                }
                return false;
            });

            function validateDomain($this) {
                populateFormFields();
                var postData = $("#update_domain_form").serializeArray();
                var formURL = $("#update_domain_form").attr("action");
                $.ajax({
                    url: "/accounts/validate_domain",
                    type: "GET",
                    data: {
                        company_domain: $(".editable-span.domain-name").text(),
                    },
                    statusCode: {
                        422: function (xhr) {
                            invalidDomain = true;
                            invalidDomainPopover(domainExistsError);
                        },
                        200: function () {
                            invalidDomain = false;
                            validDomain();
                        }
                    }
                });
                return false;
            }
            function updateMargin($this, length){
                if (length == 0 ){
                    $this.closest('.input-container').children('.domain-ext').addClass('margin-left-0');
                }
                else{
                    $this.closest('.input-container').children('.domain-ext').removeClass('margin-left-0');
                }
            }

            function validateEmail(e) {
                var text = e.currentTarget.innerText;
                var email = text + "@" + $(".editable-span.domain-name").text() + ".<%= AppConfig['base_domain'][Rails.env] %>";
                var exp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                if (!exp.test(email) || text.length <= 2) {
                    invalidEmail = true;
                    $(e.currentTarget).parent('.input-container').addClass("error").popover().popover("enable").popover("show");
                } else {
                    invalidEmail = false;

                }
            }

            function updateEmailDomain() {
                var emailDomainName = "@" + $(".editable-span.domain-name").text() + ".<%= AppConfig['base_domain'][Rails.env] %>"
                $(".domain-ext.email-domain").text(emailDomainName);
            }

            function populateFormFields() {
                $("#company_domain").val($(".input-fieldset .editable-span.domain-name").text());
                $("#support_email").val($(".input-fieldset .editable-span.email-name").text());
            }

            function resetActiveFieldset(elem) {
                $(".input-fieldset").removeClass('active');
                $(elem).addClass('active');
                setInputFocus();
            }

            function setInputFocus() {
                $(".input-fieldset.active .editable-span").focus();
            }

            // invalid domain
            function invalidDomainPopover(message) {
                invalidDomain = true;
                $('.domain-input-container').attr('data-content', message).addClass('error').popover().popover("enable").popover('show');
            }
            // valid domain
            function validDomain() {
                invalidDomain = false;
                $('.domain-input-container').removeClass('error').popover("hide").popover("disable");

            }
            // DEBOUNCE technique based on underscore
        });

    }(jQuery));
</script>
</html>