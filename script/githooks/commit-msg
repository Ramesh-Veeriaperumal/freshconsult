#!/bin/bash

# This commit hook validates the commit message for the following
#   - It should contains a JIRA id 

printMsg(){
  echo "$*"
  echo "----------------------------"
}

issuePattern="(FDCORE|FRESHPIPE|FRESHCALL|TH|FD)-([0-9]+)"
commitMsgFile=$1

if [[ -f ~/.fr_auth ]]; then
  chmod +x ~/.fr_auth
  . ~/.fr_auth
else
  echo "Missing Freshrelease auth file.Run the following command to setup.

bash script/githooks/setupGit
"
  exit 1;
fi


frID=`cat $1 | head -n 1 | egrep -o -m 1 "${issuePattern}"`
msgWordCount=`cat $1 | head -n 1 | tr -s ' ' '\n' | egrep -v "${issuePattern}" | wc -l`

#merge commit
if [[ `git rev-parse -q --verify MERGE_HEAD | wc -c` -gt 1 ]]
then
  exit 0;
fi

#Sos for override
if [[ `cat $1 | head -n 1 | grep SoS | wc -l` -gt 0 ]]
then
  exit 0;
fi

if [[ ${msgWordCount} -lt 3 ]]
then
  printMsg "Please enter a decriptive commit msg title"
  exit 1;
fi

echo "Issue found  ${frID}"

if [[ "$frID" == "" ]]
then
  numIssueIdsInDesc=`cat $1 | egrep -o  "${issuePattern}" | wc -l | awk '{print $1}'`
  if [[ ${numIssueIdsInDesc} -gt 0 ]]
    then
      printMsg "$numIssueIdsInDesc Issue Id was found as part of the commit description.
Please enter a valid Jira Id in the commit message instead."
    else
      read -r -d '' MSG << EndOfMessage
Missing Issue id. The commit message needs to contain a valid Issue id.
Example :

FDCORE-3352 : This is a sample commit message
EndOfMessage
      printMsg "$MSG"
  fi
  exit 1;
fi

command -v osascript &> /dev/null  && osascript -e 'display notification "Validating Freshrelease ID for commit" with title "Hang in there"'
echo "issue id ${frID}"
echo "token ${FR_TOKEN}"
curl -X GET \
  "https://freshworks.freshrelease.com/FD/issues/${frID}" \
  -H 'accept: application/json' \
  -H "authorization: Token token=${FR_TOKEN}" \
  -H 'content-type: application/json' > /tmp/FRResult.txt
   if [[ $? -ne 0  || `cat /tmp/FRResult.txt | grep errorMessages | wc -l` -gt 0 || `cat /tmp/FRResult.txt | grep "<html>" | wc -l` -gt 0 ]]
    then
      cat /tmp/FRResult.txt
      echo "\n Error accessing Issues status. Could not complete commit. Please run script/githooks/setupGit if you need to setup access to Freshrelease"
      exit 1;
    fi;
    assigneeEmail=`cat /tmp/FRResult.txt | ruby -r rubygems -r json -e "puts (JSON[STDIN.read])['users'][0]['email'];"`
    issueStatus=`cat /tmp/FRResult.txt | ruby -r rubygems -r json -e "puts (JSON[STDIN.read])['issue']['status_id'];"`

    gitUserEmail=`git var GIT_AUTHOR_IDENT | egrep -o "<.*?@.*?.com>" | sed -e 's/[<>]//g'`

    if [[ "$issueStatus" != "19" &&  "$issueStatus" != "18" && "$issueStatus" != "4409" ]]
    then
      printMsg "Issue needs to be [In Progress] or [Open] or [Ready for Review].
    Kindly update the status before the commit"
    exit 1;
    fi;

    if [[ "$assigneeEmail" != "$gitUserEmail" ]]
    then
      printMsg "You are not the assignee on the Issue [$frID].
    Assignee: '$assigneeEmail'
    Your Email (git): '$gitUserEmail'

    Tip : If your git email is incorrect, update your email in git using the following command
    git config user.email ${assigneeEmail}"
    exit 1;
    fi;

exit 0;
