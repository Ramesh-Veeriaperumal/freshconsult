{
  "swagger": "2.0",
  "info": {
    "title": "Freshdesk Private API",
    "version": "1.0.0"
  },
  "basePath": "/api/_",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/bootstrap": {
      "get": {
        "summary": "API Bootstrap",
        "tags": [
          "Bootstrap"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/bootstrap"
            }
          }
        }
      }
    },
    "/tickets": {
      "get": {
        "tags": [
          "ticket"
        ],
        "description": "Listing all tickets with pagination & applied filter",
        "summary": "List all",
        "parameters": [
          {
            "name": "query_hash",
            "in": "query",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "type": "string",
            "enum": [
              "spam",
              "deleted",
              "overdue",
              "pending",
              "open",
              "due_today",
              "new",
              "new_and_my_open",
              "all_tickets",
              "unresolved",
              "article_feedback",
              "my_article_feedback",
              "watching",
              "on_hold",
              "raised_by_me"
            ]
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "description": "Comma-separated values",
            "enum": [
              "requester",
              "survey",
              "company",
              "count"
            ]
          },
          {
            "name": "ids",
            "in": "query",
            "type": "string",
            "description": "Comma-separated values"
          },
          {
            "name": "company_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "requester_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string"
          },
          {
            "name": "updated_since",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "enum": [
              "due_by",
              "created_at",
              "updated_at",
              "priority",
              "status",
              "agent_responded_at",
              "requester_responded_at"
            ]
          },
          {
            "name": "order_type",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_index"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ticket"
        ],
        "description": "Create a ticket",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_show"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Show Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "required": true
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "description": "Comma-separated values",
            "enum": [
              "conversations",
              "requester",
              "company",
              "survey"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_show"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      },
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      },
      "put": {
        "tags": [
          "ticket"
        ],
        "description": "Update a ticket",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_show"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/restore": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Restore Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/spam": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Spam Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/unspam": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "unspam Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/execute_scenario": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Execute Scenario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/execute_scenario_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/link": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Link Ticket",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/link_input"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/unlink": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Unlink Ticket",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/bulk_link": {
      "put": {
        "summary": "Bulk Link",
        "tags": [
          "ticket"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bulk_action_input"
                },
                {
                  "$ref": "#/definitions/link_input"
                }
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/tickets/bulk_delete": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Bulk Delete tickets",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/bulk_restore": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Bulk Restore tickets",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/bulk_spam": {
      "put": {
        "summary": "Bulk Spam",
        "tags": [
          "ticket"
        ],
        "description": "Mark multiple tickets as spam",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/bulk_unspam": {
      "put": {
        "summary": "Bulk Unspam",
        "tags": [
          "ticket"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/bulk_execute_scenario": {
      "put": {
        "summary": "Bulk Execute Scenario",
        "operationId": "bulk_execute_scenario",
        "tags": [
          "ticket"
        ],
        "parameters": [
          {
            "name": "scenario_id",
            "in": "query",
            "type": "integer",
            "format": "int64",
            "required": true,
            "description": "ID of scenario to be executed"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bulk_action_input"
                },
                {
                  "$ref": "#/definitions/execute_scenario_input"
                }
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/bulk_update": {
      "put": {
        "tags": [
          "ticket"
        ],
        "description": "Bulk Update",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_bulk_update_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/latest_note": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Latest Note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/latest_note"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/prime_association": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Prime Association",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "description": "Display ID of related/child ticket",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/prime_association"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/associated_tickets": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Associated Tickets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "description": "Display ID of Tracker/Parent ticket",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/associated_tickets"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/split_note": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Split Note",
        "description": "Splitting the note of a ticket and creating a new ticket from that. A Ticket object will be returned on succesfull response. This can also be accessed via the route 'api/_/tickets/{id}/split_note/{note_id}'.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "required": true
          },
          {
            "name": "note_id",
            "in": "query",
            "type": "integer",
            "format": "int64",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_show"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/draft": {
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "Save Draft",
        "description": "Agent specific draft version of the reply for a ticket will be saved.",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/draft_create_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          },
          "424": {
            "description": "Failed dependancy"
          }
        }
      },
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Show Draft",
        "description": "Retrieves agent specific draft version of the reply for a ticket",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/draft"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      },
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Discard Draft",
        "description": "Clears the draft version of the reply for a ticket",
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/merge": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Merge tickets",
        "description": "Some part of this merge is done in sidekiq workers. For the merge tickets action to be completed you need to run sidekiq workers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_merge_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/empty_spam": {
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Empty Spam",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/empty_trash": {
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Empty Trash",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/delete_forever": {
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete Forever",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Display Ids of tickets",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/update_properties": {
      "put": {
        "tags": [
          "ticket"
        ],
        "description": "Update Properties",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_update_properties_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/tickets/export_csv": {
      "post": {
        "summary": "Export ticket fields",
        "tags": [
          "ticket"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_export_csv_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/activities": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Activities",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before_id",
            "in": "query",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "since_id",
            "in": "query",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_activity"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/conversations": {
      "get": {
        "tags": [
          "ticket"
        ],
        "description": "Conversations",
        "parameters": [
          {
            "name": "since_id",
            "in": "query",
            "type": "number",
            "description": "Conversation ID from which converations have to be fetched"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/conversations_show"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/notes": {
      "post": {
        "tags": [
          "conversation"
        ],
        "description": "Create a Note",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/note_create_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_note"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/tickets/{id}/reply": {
      "post": {
        "tags": [
          "conversation"
        ],
        "description": "Create a Reply",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/note_reply_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_note"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/reply_template": {
      "get": {
        "tags": [
          "conversation"
        ],
        "description": "Reply Template",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/conversation_template"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/forward": {
      "post": {
        "tags": [
          "conversation"
        ],
        "description": "Forward Ticket",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/note_forward_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_note"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/broadcast": {
      "post": {
        "tags": [
          "conversation"
        ],
        "description": "Create a Broadcast Note",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/note_broadcast_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_note"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/tickets/{id}/forward_template": {
      "get": {
        "tags": [
          "conversation"
        ],
        "description": "Forward Template",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/conversation_template"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/latest_note_forward_template": {
      "get": {
        "tags": [
          "conversation"
        ],
        "description": "Latest Note Forward Template",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/conversation_template"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/facebook_reply": {
      "post": {
        "tags": [
          "conversation"
        ],
        "description": "Facebook Reply",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/facebook_reply_input"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_note"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/tweet": {
      "post": {
        "tags": [
          "conversation"
        ],
        "description": "Reply/DM to a Twitter ticket",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/twitter_reply_input"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_note"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/conversations/{id}": {
      "put": {
        "tags": [
          "conversation"
        ],
        "description": "Update a Note",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/note_update_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_note"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/conversations/{id}/full_text": {
      "get": {
        "tags": [
          "conversation"
        ],
        "description": "Full Text",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_text"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Conversation not found"
          }
        }
      }
    },
    "/conversations/{id}/forward_template": {
      "get": {
        "tags": [
          "conversation"
        ],
        "description": "Note Forward Template",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/conversation_template"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "contact"
        ],
        "summary": "List all",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mobile",
            "in": "query",
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "type": "string"
          },
          {
            "name": "company_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "state",
            "in": "query",
            "type": "string",
            "enum": [
              "blocked",
              "deleted",
              "unverified",
              "verified"
            ]
          },
          {
            "name": "tag",
            "in": "query",
            "type": "string"
          },
          {
            "name": "letter",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "contacts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/extended_contact"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/meta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "contact"
        ],
        "description": "Create a contact",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contact_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_contact"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "contact"
        ],
        "summary": "Show contact",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_contact"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete Contact",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "contact"
        ],
        "description": "Update a contact",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contact_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_contact"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/contacts/{id}/restore": {
      "put": {
        "summary": "Restore Contact",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/{id}/send_invite": {
      "put": {
        "summary": "Send Invite",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true,
            "description": "ID of contact"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/{id}/update_password": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Update Password",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_password"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/contacts/{id}/make_agent": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Make Agent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/make_agent_response"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/make_agent_params"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "409": {
            "description": "Inconsistent state"
          }
        }
      }
    },
    "/contacts/{id}/whitelist": {
      "put": {
        "summary": "Whitelist",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true,
            "description": "ID of contact"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/{id}/activities": {
      "get": {
        "summary": "Activities",
        "description": "Recent Activities of the User based on Tickets & Forums. You can filter activity by using params in url : 1. ?type=tickets for tickets, 2. ?type=forums for forums & 3. ?type=archived_tickets for archived tickets activities.",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/contact_activity"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/{id}/assume_identity": {
      "put": {
        "summary": "Assume identity",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/bulk_delete": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Bulk Delete",
        "description": "Bulk delete contacts",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/contacts/bulk_restore": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Bulk Restore",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/contacts/bulk_send_invite": {
      "put": {
        "summary": "Bulk Send Invite",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          }
        }
      }
    },
    "/contacts/bulk_whitelist": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Bulk Whitelist",
        "description": "Bulk whitelist contacts",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/contacts/merge": {
      "post": {
        "tags": [
          "contact"
        ],
        "summary": "Merge",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contact_merge_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Contact not found"
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "List all",
        "description": "Lists all companies with its associations",
        "parameters": [
          {
            "name": "letter",
            "in": "query",
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "description": "Comma-separated, possible values - contacts_count"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "companies": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/company_with_associations"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/meta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "company"
        ],
        "description": "Create a company",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_company"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "View a company",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_company"
            }
          },
          "404": {
            "description": "Company not found"
          }
        }
      },
      "put": {
        "tags": [
          "company"
        ],
        "description": "Update a company",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_company"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "company"
        ],
        "summary": "Delete a company",
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Company not found"
          }
        }
      }
    },
    "/companies/{id}/activities": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "Recent Activities",
        "description": "Lists all recent tickets raised by company contacts",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "enum": [
              "tickets",
              "archived_tickets"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/company_activities_with_meta"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/companies/bulk_delete": {
      "put": {
        "tags": [
          "company"
        ],
        "summary": "Bulk Delete",
        "description": "Bulk delete companies",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/attachments/{id}": {
      "post": {
        "tags": [
          "attachment"
        ],
        "summary": "Create a draft attachment",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/attachment_create_input"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/attachment"
            }
          },
          "400": {
            "description": "Bad request error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      },
      "delete": {
        "tags": [
          "attachment"
        ],
        "summary": "Delete Attachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "description": "ID of attachment to be deleted",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Attachment not found"
          }
        }
      }
    },
    "/attachments/{id}/unlink": {
      "put": {
        "tags": [
          "attachment"
        ],
        "summary": "Unlink Shared Attachment",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "attachable_id",
                "attachable_type"
              ],
              "properties": {
                "attachable_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID of the attachable item"
                },
                "attachable_type": {
                  "type": "string",
                  "enum": [
                    "ticket",
                    "conversation",
                    "canned_response",
                    "ticket_template",
                    "solution_article",
                    "solution_draft",
                    "post",
                    "user",
                    "user_draft",
                    "account"
                  ],
                  "description": "Type of the attachable item"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Attachment not found"
          }
        }
      }
    },
    "/ticket_filters": {
      "post": {
        "tags": [
          "ticket filter"
        ],
        "summary": "Create Ticket Filter",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_filter_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_filter"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ticket filter"
        ],
        "summary": "List all Ticket Filters",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ticket_filter"
              }
            }
          }
        }
      }
    },
    "/ticket_filters/{id}": {
      "get": {
        "tags": [
          "ticket filter"
        ],
        "summary": "Show Ticket Filter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_filter"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ticket filter"
        ],
        "summary": "Update Ticket Filter",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_filter_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_filter"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ticket filter"
        ],
        "summary": "Delete Ticket Filter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/{id}/watch": {
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "Add watcher",
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/add_watcher_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/unwatch": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Remove watcher",
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Ticket/Subscription not found"
          }
        }
      }
    },
    "/tickets/{id}/watchers": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "List watchers",
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/watchers"
            }
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/watch": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Bulk Watch",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bulk_action_input"
                },
                {
                  "$ref": "#/definitions/add_watcher_input"
                }
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/unwatch": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Bulk Unwatch",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "description": "Display Ids of tickets",
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/canned_response_folders": {
      "get": {
        "summary": "Folder Listing",
        "description": "Listing all canned response folders",
        "tags": [
          "canned response"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/extended_canned_response_folder"
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Canned response not found"
          }
        }
      }
    },
    "/canned_response_folders/{id}": {
      "get": {
        "summary": "Folder Details",
        "description": "Details of a canned response folder with the canned responses inside the folder",
        "tags": [
          "canned response"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true,
            "description": "ID of canned response"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/canned_response_folder_details"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Canned response not found"
          }
        }
      }
    },
    "/canned_responses/": {
      "get": {
        "summary": "List all",
        "description": "Lists all Canned Responses",
        "tags": [
          "canned response"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/canned_response"
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/canned_responses/{id}": {
      "get": {
        "summary": "Show",
        "description": "Details of a canned response",
        "tags": [
          "canned response"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true,
            "description": "ID of canned response"
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "description": "Comma-separated values, possible values - evaluated_response"
          },
          {
            "name": "ticket_id",
            "in": "query",
            "type": "string",
            "description": "ID of the ticket for which the canned response should be evaluated"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/canned_response_show"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Canned response not found"
          }
        }
      }
    },
    "/canned_responses/search": {
      "get": {
        "summary": "Search",
        "tags": [
          "canned response"
        ],
        "parameters": [
          {
            "name": "ticket_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "search_string",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/canned_response"
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Record not found"
          }
        }
      }
    },
    "/agents": {
      "get": {
        "tags": [
          "agent"
        ],
        "summary": "List all agents",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/agent"
              }
            }
          }
        }
      }
    },
    "/agents/{id}": {
      "get": {
        "tags": [
          "agent"
        ],
        "summary": "Show an agent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/agent"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/agents/me": {
      "get": {
        "tags": [
          "agent"
        ],
        "summary": "Show me",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/agent"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/scenario_automations": {
      "get": {
        "tags": [
          "scenario automation"
        ],
        "summary": "List all",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/scenario_automation"
              }
            }
          }
        }
      }
    },
    "/portals": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "List all",
        "description": "List all portals",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/portal"
              }
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "tags": [
          "todos"
        ],
        "summary": "List all",
        "description": "Lists all todos",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "query",
            "type": "integer",
            "format": "int64",
            "description": "Ticket ID to filter todo of a ticket"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "todos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/todo_details"
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "todos"
        ],
        "description": "Create a todo",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "body": {
                  "type": "string",
                  "description": "content of the todo"
                },
                "ticket_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Ticket id, if its associated with a ticket."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/todo_details"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "get": {
        "summary": "Todo Details",
        "description": "Details of a selected todo",
        "tags": [
          "todos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true,
            "description": "ID of todo"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/todo_details"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Canned response not found"
          }
        }
      },
      "put": {
        "tags": [
          "todos"
        ],
        "description": "Update a todo",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string"
                },
                "completed": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/todo_details"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete todo",
        "tags": [
          "todos"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/installed_applications": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "List all",
        "description": "List all enabled apps",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "App Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "installed_applications": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/installed_applications"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Installed Apps"
          }
        }
      }
    },
    "/installed_applications/{id}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true,
            "description": "App Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/installed_applications"
            }
          },
          "404": {
            "description": "Application not available"
          }
        }
      }
    },
    "/integrated_resources": {
      "get": {
        "tags": [
          "Integrated Resources"
        ],
        "summary": "List a particular resource",
        "description": "List the integrated resource of the currently logged in user",
        "parameters": [
          {
            "name": "installed_application_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "local_integratable_id",
            "in": "query",
            "type": "integer",
            "format": "int64",
            "required": true
          },
          {
            "name": "local_integratable_type",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "integrated_resources": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/integrated_resources"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No resource available"
          }
        }
      }
    },
    "/integrated_resources/{id}": {
      "get": {
        "tags": [
          "Integrated Resources"
        ],
        "summary": "View a resource",
        "description": "Details of a selected resource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "required": true,
            "description": "Resource Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/integrated_resources"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrated Resources"
        ],
        "summary": "Create resource",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/integrated_resource_create"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/integrated_resources"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete resource",
        "tags": [
          "Integrated Resources"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "description": "Resource id to be deleted",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not available"
          }
        }
      }
    },
    "/integrated_users": {
      "get": {
        "tags": [
          "Integrated Users"
        ],
        "summary": "List a particular integrated user resource",
        "description": "List the integrated user resource",
        "parameters": [
          {
            "name": "installed_application_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "integrated_users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/integrated_users"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No resource available"
          }
        }
      }
    },
    "/integrated_users/{id}": {
      "get": {
        "tags": [
          "Integrated Users"
        ],
        "summary": "User Resource Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Resource Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/integrated_users"
            }
          }
        }
      }
    },
    "/cloud_files/{id}": {
      "delete": {
        "summary": "Delete Cloud Attachment",
        "tags": [
          "attachment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not available"
          }
        }
      }
    },
    "/twitter_handles": {
      "get": {
        "tags": [
          "social"
        ],
        "description": "Twitter Handles",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/twitter_handle"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/twitter_handles/{id}/check_following": {
      "get": {
        "tags": [
          "social"
        ],
        "description": "Check Following for an User",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "name": "screen_name",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "Twitter ID of the user for whom following check is done"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "following": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Twitter Handle Not Found"
          },
          "424": {
            "description": "Unable to connect to Twitter",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/surveys": {
      "get": {
        "tags": [
          "Survey"
        ],
        "summary": "List all",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "type": "string",
            "enum": [
              "active"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/extended_survey"
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/dashboards/activities": {
      "get": {
        "tags": [
          "dashboard_activities"
        ],
        "summary": "Dashboard activities",
        "parameters": [
          {
            "name": "since_id",
            "in": "query",
            "type": "number"
          },
          {
            "name": "before_id",
            "in": "query",
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "type": "number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/dashboard_activities"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Activities not found"
          }
        }
      }
    },
    "/dashboards": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "description": "Config of all the widgets in dashboard",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/dashboard_widget_config"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/dashboards/ticket_summaries": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "description": "Get the scorecard widget",
        "parameters": [
          {
            "name": "group_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Selected group's id for filtering scorecard"
          },
          {
            "name": "product_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Selected product's id for filtering scorecard"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/scorecard"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/dashboards/satisfaction_surveys": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "description": "customer satisfaction survey widget",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/satisfaction_survey_widget"
            }
          },
          "403": {
            "description": "access denied"
          }
        }
      }
    },
    "/dashboards/forum_moderations": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "description": "Forum moderation widget",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/forum_moderation_widget"
            }
          },
          "403": {
            "description": "access denied"
          }
        }
      }
    },
    "/dashboards/unresolved_tickets": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "description": "Unresolved Tickets Count",
        "parameters": [
          {
            "name": "widget",
            "description": "Should be present if called for widget",
            "in": "query",
            "type": "number"
          },
          {
            "name": "group_by",
            "description": "Columns for grouping counts",
            "type": "string",
            "in": "query",
            "required": true,
            "enum": [
              "group_id",
              "responder_id"
            ]
          },
          {
            "name": "group_ids",
            "description": "Selected groups for filtering",
            "type": "array",
            "in": "query",
            "items": {
              "type": "number"
            }
          },
          {
            "name": "responder_ids",
            "description": "Selected agents for filtering",
            "type": "array",
            "in": "query",
            "items": {
              "type": "number"
            }
          },
          {
            "name": "status_ids",
            "description": "Selected statuses for filtering",
            "type": "array",
            "in": "query",
            "items": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/unresolved_tickets"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/dashboards/ticket_trends": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "description": "Ticket trends widgets",
        "parameters": [
          {
            "name": "group_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Selected group's id for filtering scorecard"
          },
          {
            "name": "product_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Selected product's id for filtering scorecard"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_trends_widget"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "503": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dashboards/ticket_metrics": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "description": "Ticket metrics widgets",
        "parameters": [
          {
            "name": "group_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Selected group's id for filtering scorecard"
          },
          {
            "name": "product_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Selected product's id for filtering scorecard"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ticket_metrics_widget"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/dashboards/leaderboard_agents": {
      "get": {
        "tags": [
          "leaderboard"
        ],
        "description": "Leaderboard information about agents",
        "parameters": [
          {
            "name": "mini_list",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/leaderboard_agents_lists"
            }
          },
          "400": {
            "description": "Bad request error"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    }
  },
  "definitions": {
    "id": {
      "type": "integer",
      "format": "int64",
      "minimum": 1
    },
    "custom_field": {
      "type": "object"
    },
    "bootstrap": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "agent": {
              "allOf": [
                {
                  "$ref": "#/definitions/agent"
                },
                {
                  "properties": {
                    "last_active_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "points": {
                      "type": "integer"
                    },
                    "scoreboard_level_id": {
                      "type": "integer"
                    },
                    "assumable_agents": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "next_level_id": {
                      "type": "object"
                    },
                    "abilities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "preferences": {
                      "type": "object",
                      "properties": {
                        "shortcuts_enabled": {
                          "type": "boolean"
                        },
                        "shortcuts_mapping": {
                          "type": "array"
                        },
                        "notification_timestamp": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "show_onBoarding": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "account": {
              "type": "object",
              "properties": {
                "full_domain": {
                  "type": "string"
                },
                "helpdesk_name": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "time_zone": {
                  "type": "string"
                },
                "date_format": {
                  "type": "object",
                  "properties": {
                    "moment_date_with_week": {
                      "type": "string"
                    },
                    "datepicker": {
                      "type": "string"
                    },
                    "datepicker_escaped": {
                      "type": "string"
                    },
                    "datepicker_full_date": {
                      "type": "string"
                    },
                    "mediumDate": {
                      "type": "string"
                    }
                  }
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "launched": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subscription": {
                  "type": "object",
                  "description": "Available only if he is an admin",
                  "properties": {
                    "agent_limit": {
                      "type": "integer"
                    },
                    "state": {
                      "type": "string"
                    },
                    "subscription_plan": {
                      "type": "string"
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "properties": {
                    "personalized_email_replies": {
                      "type": "boolean"
                    },
                    "componse_email_enabled": {
                      "type": "boolean"
                    },
                    "include_survey_manually": {
                      "type": "boolean"
                    }
                  }
                },
                "agents": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "group_ids": {
                      "type": "array"
                    }
                  }
                },
                "groups": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "agent_ids": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "csrf_token": {
              "type": "string"
            }
          }
        }
      }
    },
    "bulk_action_error": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/request_error"
          }
        }
      }
    },
    "bad_request_error": {
      "title": "data",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/request_error"
          }
        }
      }
    },
    "request_error": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "bulk_action_input": {
      "title": "data",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "maxItems": 50,
          "items": {
            "type": "integer",
            "minimum": 1,
            "example": 987
          }
        }
      },
      "required": [
        "ids"
      ]
    },
    "make_agent_params": {
      "type": "object",
      "properties": {
        "occasional": {
          "type": "boolean",
          "description": "Set to true if this is an occasional agent (true => occasional, false => full-time)"
        },
        "signature": {
          "type": "string",
          "description": "Signature of the agent in HTML format"
        },
        "ticket_scope": {
          "type": "integer",
          "description": "Ticket permission of the agent (1 -> Global Access, 2 -> Group Access, 3 -> Restricted Access). Current logged in agent can't update his/her ticket_scope"
        },
        "group_ids": {
          "type": "array",
          "description": "Group IDs associated with the agent",
          "items": {
            "type": "integer"
          }
        },
        "role_ids": {
          "type": "array",
          "description": "Role IDs associated with the agent. Atleast one role should be assoicated with the agent. Current logged in agent can't update his/her role_ids",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "attachment_create_input": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "content": {
          "type": "string",
          "format": "byte"
        },
        "inline": {
          "type": "boolean"
        },
        "inline_type": {
          "type": "string",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "description": "1 - Ticket, 2 - Forum, 3 - Solution, 4 - Email notification, 5 - Template"
        }
      },
      "required": [
        "content"
      ]
    },
    "company_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/company"
        },
        {
          "properties": {
            "avatar_id": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "contact_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/contact"
        },
        {
          "properties": {
            "view_all_tickets": {
              "type": "boolean"
            },
            "avatar_id": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "contact_merge_input": {
      "type": "object",
      "properties": {
        "primary_id": {
          "description": "ID of the primary contact",
          "type": "integer"
        },
        "target_ids": {
          "description": "Ids of contacts that will be merged into the Primary contact",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "primary_id",
        "target_ids"
      ]
    },
    "update_password": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "format": "password"
        }
      },
      "required": [
        "password"
      ]
    },
    "note_create_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "properties": {
            "user_id": {
              "type": "integer"
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            },
            "attachment_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "incoming": {
              "type": "boolean"
            },
            "notify_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "private": {
              "type": "boolean"
            },
            "last_note_id": {
              "type": "number"
            }
          }
        }
      ]
    },
    "note_update_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "properties": {
            "attachments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            },
            "attachment_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "cloud_files": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cloud_file_input"
              }
            }
          }
        }
      ]
    },
    "note_reply_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "properties": {
            "full_text": {
              "type": "string"
            },
            "user_id": {
              "type": "integer"
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            },
            "attachment_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "from_email": {
              "type": "string"
            },
            "cc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bcc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "send_survey": {
              "type": "boolean"
            },
            "last_note_id": {
              "type": "number"
            }
          }
        }
      ]
    },
    "note_forward_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "properties": {
            "full_text": {
              "type": "string"
            },
            "include_quoted_text": {
              "type": "boolean"
            },
            "include_original_attachments": {
              "type": "boolean"
            },
            "agent_id": {
              "type": "integer"
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            },
            "attachment_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "cloud_file_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "from_email": {
              "type": "string"
            },
            "to_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "cc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bcc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "note_broadcast_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "properties": {
            "user_id": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "facebook_reply_input": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "integer",
          "description": "User ID of agent replying to the ticket"
        },
        "note_id": {
          "type": "integer",
          "description": "ID of note when replying to a comment"
        },
        "body": {
          "type": "string"
        }
      }
    },
    "twitter_reply_input": {
      "type": "object",
      "required": [
        "tweet_type",
        "twitter_handle_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "properties": {
            "tweet_type": {
              "type": "string",
              "enum": [
                "dm",
                "mention"
              ],
              "description": "Whether to send this as Direct Message or as a Mention",
              "default": "mention"
            },
            "twitter_handle_id": {
              "type": "integer",
              "format": "int64",
              "description": "Twitter Handle ID (To be fetched in a seperate API)"
            }
          }
        }
      ]
    },
    "conversation_template": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "template": {
              "type": "string",
              "format": "HTML"
            },
            "quoted_text": {
              "type": "string",
              "format": "HTML"
            },
            "signature": {
              "type": "string",
              "format": "HTML"
            }
          }
        }
      }
    },
    "full_text": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "html": {
          "type": "string",
          "format": "HTML"
        }
      }
    },
    "ticket_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ticket"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "facebook_id": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "twitter_id": {
              "type": "string"
            },
            "attachment_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "parent_id": {
              "type": "integer"
            },
            "related_ticket_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "cc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "cloud_files": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cloud_file_input"
              }
            }
          }
        }
      ]
    },
    "ticket_bulk_update_input": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "properties": {
          "$ref": "#/definitions/ticket_update_input"
        },
        "reply": {
          "type": "object",
          "properties": {
            "body": {
              "type": "string",
              "description": "reply content"
            },
            "from_email": {
              "type": "string"
            },
            "attachment_ids": {
              "type": "array",
              "description": "Draft attachment/Shared attachment IDs",
              "items": {
                "type": "integer"
              }
            },
            "cloud_files": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cloud_file_input"
              }
            }
          }
        }
      }
    },
    "ticket_update_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ticket"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "facebook_id": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "twitter_id": {
              "type": "string"
            },
            "skip_close_notification": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "ticket_merge_input": {
      "type": "object",
      "required": [
        "primary_id"
      ],
      "properties": {
        "primary_id": {
          "type": "integer",
          "description": "ID of the Primary ticket"
        },
        "ticket_ids": {
          "type": "array",
          "description": "Ids of the tickets that will be merged into the Primary ticket",
          "minItems": 1,
          "maxItems": 30,
          "items": {
            "type": "integer"
          }
        },
        "note_in_primary": {
          "type": "object",
          "properties": {
            "body": {
              "type": "string"
            },
            "private": {
              "type": "boolean"
            }
          }
        },
        "note_in_secondary": {
          "type": "object",
          "properties": {
            "body": {
              "type": "string"
            },
            "private": {
              "type": "boolean"
            }
          }
        },
        "convert_recepients_to_cc": {
          "type": "boolean",
          "default": false,
          "description": "Whether to Add secondary ticket recipients to CC"
        }
      }
    },
    "ticket_update_properties_input": {
      "type": "object",
      "properties": {
        "due_by": {
          "type": "string",
          "format": "date-time"
        },
        "responder_id": {
          "type": "integer"
        },
        "group_id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "priority": {
          "type": "integer"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skip_close_notification": {
          "type": "boolean"
        }
      }
    },
    "ticket_export_csv_input": {
      "type": "object",
      "properties": {
        "query_hash": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/query_hash"
          }
        },
        "format": {
          "type": "string",
          "enum": [
            "csv",
            "xls"
          ]
        },
        "ticket_state_filter": {
          "type": "string",
          "enum": [
            "1",
            "4",
            "7",
            "30"
          ]
        },
        "date_filter": {
          "type": "string",
          "enum": [
            "created_at",
            "resolved_at",
            "closed_at"
          ]
        },
        "start_date": {
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "type": "string",
          "format": "date-time"
        },
        "ticket_fields": {
          "type": "object",
          "properties": {
            "display_id": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "status_name": {
              "type": "string"
            },
            "priority_name": {
              "type": "string"
            },
            "source_name": {
              "type": "string"
            },
            "ticket_type": {
              "type": "string"
            },
            "responder_name": {
              "type": "string"
            },
            "group_name": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "resolved_at": {
              "type": "string"
            },
            "closed_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "time_tracked_hours": {
              "type": "string"
            },
            "outbound_count": {
              "type": "string"
            },
            "inbound_count": {
              "type": "string"
            },
            "ticket_tags": {
              "type": "string"
            },
            "ticket_survey_results": {
              "type": "string"
            },
            "skill_name": {
              "type": "string"
            },
            "due_by": {
              "type": "string"
            },
            "first_response_time": {
              "type": "string"
            },
            "first_res_time_bhrs": {
              "type": "string"
            },
            "resolution_time_bhrs": {
              "type": "string"
            },
            "resolution_status": {
              "type": "string"
            },
            "first_response_status": {
              "type": "string"
            },
            "custom_fields": {
              "$ref": "#/definitions/custom_field"
            }
          }
        },
        "contact_fields": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "contact_id": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            },
            "fb_profile_id": {
              "type": "string"
            },
            "job_title": {
              "type": "string"
            },
            "twitter_id": {
              "type": "string"
            },
            "company_name": {
              "type": "string"
            },
            "client_manager": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "time_zone": {
              "type": "string"
            },
            "language": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "custom_fields": {
              "$ref": "#/definitions/custom_field"
            }
          }
        },
        "company_fields": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "domains": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "note": {
              "type": "string"
            },
            "custom_fields": {
              "$ref": "#/definitions/custom_field"
            }
          }
        }
      }
    },
    "add_watcher_input": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "ID of agent to be added to list of watchers"
        }
      }
    },
    "draft_create_input": {
      "type": "object",
      "required": [
        "body",
        "quoted_text"
      ],
      "properties": {
        "body": {
          "type": "string",
          "description": "content of the ticket reply"
        },
        "quoted_text": {
          "type": "string",
          "description": "quoted text of the ticket reply"
        },
        "cc_emails": {
          "type": "array",
          "description": "cc_emails for the ticket reply",
          "items": {
            "type": "string"
          }
        },
        "bcc_emails": {
          "type": "array",
          "description": "bcc_emails for the ticket reply",
          "items": {
            "type": "string"
          }
        },
        "from_email": {
          "type": "string"
        },
        "attachment_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "execute_scenario_input": {
      "type": "object",
      "required": [
        "scenario_id"
      ],
      "properties": {
        "scenario_id": {
          "type": "integer",
          "format": "int64",
          "description": "ID of scenario to be executed"
        }
      }
    },
    "link_input": {
      "type": "object",
      "required": [
        "tracker_id"
      ],
      "properties": {
        "tracker_id": {
          "type": "integer",
          "format": "int64",
          "description": "Display ID of tracker ticket"
        }
      }
    },
    "cloud_file_input": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "application_id": {
          "type": "integer",
          "format": "int64"
        },
        "application_name": {
          "type": "string"
        }
      }
    },
    "query_hash": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ticket_filter_input": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "order_type": {
          "type": "string"
        },
        "per_page": {
          "type": "integer"
        },
        "query_hash": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/query_hash"
          }
        },
        "visibility": {
          "type": "object",
          "properties": {
            "visibility": {
              "type": "string"
            },
            "group_id": {
              "type": "integer"
            }
          }
        }
      }
    },
    "integrated_resource_create": {
      "type": "object",
      "required": [
        "application_id",
        "integrated_resource"
      ],
      "properties": {
        "application_id": {
          "type": "integer",
          "description": "App id"
        },
        "integrated_resource": {
          "type": "object",
          "description": "Resource hash",
          "properties": {
            "local_integratable_id": {
              "type": "integer",
              "format": "int64"
            },
            "local_integratable_type": {
              "type": "string",
              "enum": [
                "Ticket",
                "Timesheet"
              ],
              "description": "Whether the local integratable type is ticket or timesheet"
            },
            "remote_integratable_id": {
              "type": "string"
            },
            "installed_application_id": {
              "type": "integer"
            },
            "remote_integratable_type": {
              "type": "string"
            }
          }
        }
      }
    },
    "contact": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "company_id": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "job_title": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "time_zone": {
          "type": "string"
        },
        "twitter_id": {
          "type": "string"
        },
        "other_emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "custom_fields": {
          "$ref": "#/definitions/custom_field"
        },
        "view_all_tickets": {
          "type": "boolean"
        },
        "company": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "view_all_tickets": {
              "type": "boolean"
            }
          }
        },
        "other_companies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "view_all_tickets": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "avatar": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/attachment"
        },
        {
          "properties": {
            "thumb_url": {
              "type": "string"
            }
          }
        }
      ]
    },
    "broadcast_message": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "company": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "note": {
          "type": "string"
        },
        "custom_fields": {
          "$ref": "#/definitions/custom_field"
        }
      }
    },
    "note": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        }
      }
    },
    "ticket": {
      "type": "object",
      "properties": {
        "email_config_id": {
          "type": "integer"
        },
        "group_id": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "requester_id": {
          "type": "integer"
        },
        "responder_id": {
          "type": "integer"
        },
        "source": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            7,
            8,
            9,
            10
          ]
        },
        "status": {
          "type": "integer",
          "enum": [
            2,
            3,
            4,
            5,
            6,
            7
          ]
        },
        "subject": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Question",
            "Incident",
            "Problem",
            "Feature Request"
          ]
        },
        "product_id": {
          "type": "integer"
        },
        "due_by": {
          "type": "string",
          "format": "date-time"
        },
        "fr_due_by": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "custom_fields": {
          "type": "object"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "attachment": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "properties": {
            "content_type": {
              "type": "string"
            },
            "size": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            },
            "attachment_url": {
              "type": "string"
            },
            "inline_url": {
              "type": "string"
            },
            "is_shared": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "agent": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "occasional": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "ticket_scope": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "group_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "role_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "available_since": {
          "type": "string"
        },
        "contact": {
          "type": "object",
          "properties": {
            "active": {
              "type": "boolean"
            },
            "email": {
              "type": "string"
            },
            "job_title": {
              "type": "string"
            },
            "language": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "time_zone": {
              "type": "string"
            },
            "avatar": {
              "$ref": "#/definitions/avatar"
            }
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "sla_policy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "applicable_to": {
          "type": "object",
          "properties": {
            "product_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "company_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "group_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "sources": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ticket_types": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "is_default": {
          "type": "boolean"
        },
        "position": {
          "type": "integer"
        }
      }
    },
    "draft": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/draft_create_input"
        },
        {
          "properties": {
            "saved_at": {
              "type": "string",
              "format": "date-time",
              "description": "Represents the time at which the draft is saved"
            }
          }
        }
      ]
    },
    "canned_response": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "folder_id": {
          "type": "integer"
        }
      }
    },
    "canned_response_folder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "fb_post": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "properties": {
            "post_id": {
              "type": "integer",
              "format": "int64"
            },
            "msg_type": {
              "type": "string"
            },
            "post_type": {
              "type": "string"
            },
            "can_comment?": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "fb_page": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "profile_id": {
          "type": "integer"
        },
        "page_id": {
          "type": "integer"
        },
        "page_name": {
          "type": "string"
        },
        "page_image_url": {
          "type": "string"
        },
        "page_link": {
          "type": "string"
        },
        "enable_page": {
          "type": "boolean"
        },
        "product_id": {
          "type": "integer"
        }
      }
    },
    "ticket_filter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "query_hash": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/query_hash"
          }
        },
        "order_by": {
          "type": "string"
        },
        "order_type": {
          "type": "string"
        },
        "per_page": {
          "type": "integer"
        },
        "visibility": {
          "type": "object",
          "properties": {
            "visibility": {
              "type": "integer",
              "enum": [
                1,
                2,
                3
              ],
              "description": "1 - All Agents | 2 - Agents in the group specified by group_id | 3 - Just the owner(user_id)"
            },
            "group_id": {
              "type": "integer"
            }
          }
        }
      }
    },
    "tweet_post": {
      "type": "object",
      "properties": {
        "tweet_id": {
          "type": "integer",
          "format": "int64"
        },
        "tweet_type": {
          "type": "string",
          "enum": [
            "dm",
            "mention"
          ]
        },
        "twitter_handle_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "survey_result": {
      "type": "object",
      "properties": {
        "survey_id": {
          "type": "integer",
          "format": "int64"
        },
        "agent_id": {
          "type": "integer",
          "format": "int64"
        },
        "group_id": {
          "type": "integer",
          "format": "int64"
        },
        "ratings": {
          "type": "object"
        }
      }
    },
    "freshfone_call": {
      "type": "object",
      "description": "freshfone call",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "description": "duration is in seconds"
        },
        "recording": {
          "$ref": "#/definitions/attachment"
        }
      }
    },
    "ticket_topic": {
      "type": "object",
      "description": "ticket topic",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "description": "title of the forum topic"
        }
      }
    },
    "survey_question": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "accepted_ratings": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "survey": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/survey_question"
          }
        }
      }
    },
    "ticket_stats": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "object",
          "properties": {
            "agent_responded_at": {
              "type": "string",
              "format": "date-time"
            },
            "requester_responded_at": {
              "type": "string",
              "format": "date-time"
            },
            "resolved_at": {
              "type": "string",
              "format": "date-time"
            },
            "first_responded_at": {
              "type": "string",
              "format": "date-time"
            },
            "closed_at": {
              "type": "string",
              "format": "date-time"
            },
            "status_updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "pending_since": {
              "type": "string",
              "format": "date-time"
            },
            "reopened_at": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    },
    "portal": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            },
            "host": {
              "type": "string"
            },
            "default": {
              "type": "boolean"
            },
            "product_id": {
              "type": "integer"
            },
            "ssl_enabled": {
              "type": "boolean"
            },
            "solution_category_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "discussion_category_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      ]
    },
    "installed_applications": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "properties": {
            "application_id": {
              "type": "integer",
              "description": "App Id"
            },
            "app_name": {
              "type": "string",
              "description": "App Name"
            },
            "app_display_name": {
              "type": "string",
              "description": "App Display Name"
            },
            "display_option": {
              "type": "integer",
              "description": "Display option of the App"
            },
            "configs": {
              "type": "object",
              "description": "Installed App Configs"
            }
          }
        }
      ]
    },
    "integrated_users": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "properties": {
            "installed_application_id": {
              "type": "integer",
              "description": "Installed App Id"
            },
            "user_id": {
              "type": "integer",
              "description": "User Id"
            },
            "auth_info": {
              "type": "object",
              "description": "Auth configs"
            },
            "remote_user_id": {
              "type": "string",
              "description": "Remote User Id"
            }
          }
        }
      ]
    },
    "integrated_resources": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "properties": {
            "installed_application_id": {
              "type": "integer",
              "description": "Installed App Id"
            },
            "remote_integratable_id": {
              "type": "string",
              "description": "Remote Integratable Id"
            },
            "remote_integratable_type": {
              "type": "string",
              "description": "Remote Integratable Type"
            },
            "local_integratable_id": {
              "type": "integer",
              "description": "Local integratable Id"
            }
          }
        }
      ]
    },
    "scenario_automation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "extension_generic": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "extended_contact": {
      "allOf": [
        {
          "$ref": "#/definitions/contact"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            },
            {
              "properties": {
                "active": {
                  "type": "boolean"
                },
                "deleted": {
                  "type": "boolean"
                },
                "whitelisted": {
                  "type": "boolean"
                },
                "avatar": {
                  "$ref": "#/definitions/avatar"
                }
              }
            }
          ]
        }
      ]
    },
    "extended_company": {
      "allOf": [
        {
          "$ref": "#/definitions/company"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            },
            {
              "properties": {
                "sla_policies": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/extended_sla_policy"
                  }
                },
                "avatar": {
                  "$ref": "#/definitions/avatar"
                }
              }
            }
          ]
        }
      ]
    },
    "extended_note": {
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            },
            {
              "properties": {
                "body_text": {
                  "type": "string"
                },
                "ticket_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "user_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "incoming": {
                  "type": "boolean"
                },
                "private": {
                  "type": "boolean"
                },
                "support_email": {
                  "type": "string"
                },
                "from_email": {
                  "type": "string"
                },
                "to_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cc_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "bcc_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "source": {
                  "type": "integer",
                  "format": "int64"
                },
                "category": {
                  "type": "integer",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                  ]
                },
                "has_quoted_text": {
                  "type": "boolean"
                },
                "last_edited_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "last_edited_user_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/attachment"
                  }
                },
                "cloud_files": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/extended_cloud_file"
                  }
                },
                "fb_post": {
                  "$ref": "#/definitions/fb_post"
                },
                "tweet": {
                  "$ref": "#/definitions/tweet_post"
                },
                "freshfone_call": {
                  "$ref": "#/definitions/freshfone_call"
                },
                "survey_result": {
                  "$ref": "#/definitions/survey_result"
                }
              }
            }
          ]
        }
      ]
    },
    "extended_ticket": {
      "allOf": [
        {
          "$ref": "#/definitions/ticket"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            },
            {
              "properties": {
                "cc_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fwd_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "reply_cc_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fr_escalated": {
                  "type": "boolean"
                },
                "spam": {
                  "type": "boolean"
                },
                "to_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "is_escalated": {
                  "type": "boolean"
                },
                "association_type": {
                  "type": "integer",
                  "enum": [
                    1,
                    2,
                    3,
                    4
                  ]
                },
                "associated_tickets_count": {
                  "type": "integer"
                },
                "description_text": {
                  "type": "string"
                },
                "cloud_files": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/extended_cloud_file"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    "extended_sla_policy": {
      "allOf": [
        {
          "$ref": "#/definitions/sla_policy"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            }
          ]
        }
      ]
    },
    "extended_canned_response": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/canned_response"
        },
        {
          "properties": {
            "content": {
              "type": "string"
            },
            "content_html": {
              "type": "string"
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        }
      ]
    },
    "extended_canned_response_folder": {
      "allOf": [
        {
          "$ref": "#/definitions/canned_response_folder"
        },
        {
          "type": "object",
          "properties": {
            "personal": {
              "type": "boolean"
            },
            "responses_count": {
              "type": "integer",
              "description": "count of canned responses inside the folder"
            }
          }
        }
      ]
    },
    "extended_cloud_file": {
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "$ref": "#/definitions/cloud_file_input"
        }
      ]
    },
    "extended_survey": {
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "$ref": "#/definitions/survey"
        }
      ]
    },
    "ticket_index": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/extension_generic"
              },
              {
                "properties": {
                  "email_config_id": {
                    "type": "integer"
                  },
                  "group_id": {
                    "type": "integer"
                  },
                  "priority": {
                    "type": "integer"
                  },
                  "requester_id": {
                    "type": "integer"
                  },
                  "responder_id": {
                    "type": "integer"
                  },
                  "source": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "integer"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "integer"
                  },
                  "due_by": {
                    "type": "string"
                  },
                  "fr_due_by": {
                    "type": "string"
                  },
                  "description": {
                    "type": "integer"
                  },
                  "custom_fields": {
                    "type": "object"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "survey_result": {
                    "$ref": "#/definitions/survey_result"
                  },
                  "requester": {
                    "type": "object"
                  },
                  "company": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            ]
          },
          {
            "$ref": "#/definitions/ticket_stats"
          },
          {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/extension_generic"
              },
              {
                "properties": {
                  "cc_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fwd_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "reply_cc_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fr_escalated": {
                    "type": "boolean"
                  },
                  "spam": {
                    "type": "boolean"
                  },
                  "to_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "is_escalated": {
                    "type": "boolean"
                  },
                  "association_type": {
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4
                    ]
                  },
                  "associated_tickets_count": {
                    "type": "integer"
                  },
                  "description_text": {
                    "type": "string"
                  },
                  "cloud_files": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/extended_cloud_file"
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "ticket_show": {
      "allOf": [
        {
          "$ref": "#/definitions/extended_ticket"
        },
        {
          "type": "object",
          "properties": {
            "freshfone_call": {
              "$ref": "#/definitions/freshfone_call"
            },
            "fb_post": {
              "allOf": [
                {
                  "$ref": "#/definitions/fb_post"
                },
                {
                  "properties": {
                    "fb_page": {
                      "$ref": "#/definitions/fb_page"
                    }
                  }
                }
              ]
            },
            "tweet": {
              "$ref": "#/definitions/tweet_post"
            },
            "survey_result": {
              "$ref": "#/definitions/survey_result"
            },
            "ticket_topic": {
              "$ref": "#/definitions/ticket_topic"
            },
            "stats": {
              "$ref": "#/definitions/ticket_stats"
            },
            "meta": {
              "type": "object",
              "properties": {
                "user_agent": {
                  "type": "string"
                },
                "referrer": {
                  "type": "string"
                },
                "created_by": {
                  "type": "integer"
                },
                "time": {
                  "type": "string",
                  "format": "datetime"
                }
              }
            }
          }
        }
      ]
    },
    "canned_response_folder_details": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/canned_response_folder"
        },
        {
          "properties": {
            "canned_responses": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "title": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "todo_details": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "properties": {
            "body": {
              "type": "string"
            },
            "completed": {
              "type": "boolean"
            },
            "ticket_id": {
              "type": "integer",
              "format": "int64"
            },
            "user_id": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "meta": {
      "type": "object",
      "title": "meta",
      "properties": {
        "count": {
          "type": "integer"
        }
      }
    },
    "conversations_show": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/extended_note"
      }
    },
    "partial_success_response": {
      "title": "data",
      "type": "object",
      "description": "Partial Success Response",
      "properties": {
        "succeeded": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "failed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bulk_action_error"
          }
        }
      },
      "example": {
        "succeeded": [
          11,
          12
        ],
        "failed": [
          {
            "id": 13,
            "errors": [
              {
                "field": "product_id",
                "message": "Invalid integer",
                "code": "invalid_integer"
              }
            ]
          }
        ]
      }
    },
    "make_agent_response": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "job_title": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "last_login_at": {
          "type": "string",
          "format": "date-time"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "time_zone": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "agent": {
          "$ref": "#/definitions/agent"
        }
      }
    },
    "watchers": {
      "title": "data",
      "type": "object",
      "properties": {
        "watcher_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "latest_note": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/extended_note"
        },
        {
          "properties": {
            "user": {
              "$ref": "#/definitions/extended_contact"
            }
          }
        }
      ]
    },
    "prime_association": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "requester_id": {
          "type": "integer"
        },
        "responder_id": {
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "association_type": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "status": {
          "type": "integer"
        },
        "broadcast_message": {
          "$ref": "#/definitions/broadcast_message"
        }
      }
    },
    "associated_tickets": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "group_id": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "requester_id": {
          "type": "integer"
        },
        "responder_id": {
          "type": "integer"
        },
        "source": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            7,
            8,
            9,
            10
          ]
        },
        "company_id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "stats": {
          "$ref": "#/definitions/ticket_stats"
        },
        "subject": {
          "type": "string"
        },
        "product_id": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "Question",
            "Incident",
            "Problem",
            "Feature Request"
          ]
        },
        "due_by": {
          "type": "string",
          "format": "date-time"
        },
        "fr_due_by": {
          "type": "string",
          "format": "date-time"
        },
        "is_escalated": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "company_with_associations": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/company"
        },
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "properties": {
            "contacts_count": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "contact_activity": {
      "title": "data",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "post/ticket/archiveticket": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "topic_id": {
                    "description": "Will be present for Forum Activity",
                    "type": "integer"
                  },
                  "title": {
                    "description": "Will be present for Forum Activity",
                    "type": "string"
                  },
                  "comment": {
                    "description": "Will be present for Forum Activity",
                    "type": "boolean"
                  },
                  "forum": {
                    "description": "Will be present for Forum Activity",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "description_text": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "tags": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "responder_id": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "integer"
                  },
                  "due_by": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string",
                    "format": "date-time"
                  },
                  "requester_id": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "subject": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "group_id": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "status": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "fr_due_by": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "stats": {
                    "$ref": "#/definitions/ticket_stats"
                  },
                  "created_at": {
                    "description": "Will be present for all activities",
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "description": "Will be present for all activities",
                    "type": "string",
                    "format": "date-time"
                  },
                  "position": {
                    "description": "Will be present for all activities",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "meta": {
          "title": "meta data",
          "type": "object",
          "properties": {
            "more_tickets": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "company_activity": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "ticket/archiveticket": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "description_text": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "tags": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "responder_id": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "integer"
                  },
                  "due_by": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string",
                    "format": "date-time"
                  },
                  "requester_id": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "subject": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "group_id": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "status": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "fr_due_by": {
                    "description": "Will be present for Ticket/Archived Activity",
                    "type": "string"
                  },
                  "stats": {
                    "$ref": "#/definitions/ticket_stats"
                  },
                  "created_at": {
                    "description": "Will be present for all activities",
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "description": "Will be present for all activities",
                    "type": "string",
                    "format": "date-time"
                  },
                  "position": {
                    "description": "Will be present for all activities",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "meta": {
          "title": "meta data",
          "type": "object",
          "properties": {
            "more_tickets": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "company_activities_with_meta": {
      "$ref": "#/definitions/company_activity"
    },
    "twitter_handle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Twitter Handle's id in the account's context"
        },
        "twitter_user": {
          "type": "integer",
          "description": "User Id provided by Twitter"
        },
        "screen_name": {
          "type": "string",
          "example": "freshdesk",
          "description": "Twitter user handle or the screen name"
        },
        "product_id": {
          "type": "integer"
        },
        "capture_dm_as_ticket": {
          "type": "boolean"
        },
        "capture_mention_as_ticket": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ticket_activity": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "performer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "user",
                  "system"
                ]
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "agent": {
                    "type": "boolean"
                  },
                  "avatar_url": {
                    "type": "string"
                  },
                  "deleted": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "system": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "exists": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "round_robin",
                      "business",
                      "scenario",
                      "supervisor",
                      "observer",
                      "app_business",
                      "installed_app",
                      "api_webhook"
                    ]
                  }
                }
              }
            }
          },
          "performed_at": {
            "type": "string",
            "format": "date-time"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "property_update",
                    "add_tag",
                    "remove_tag",
                    "add_watcher",
                    "delete_status",
                    "execute_scenario",
                    "add_a_cc",
                    "spam",
                    "archive",
                    "deleted",
                    "email_to_requester",
                    "email_to_group",
                    "email_to_agent",
                    "ticket_merge_source",
                    "ticket_merge_target",
                    "ticket_split_source",
                    "ticket_split_target",
                    "ticket_import",
                    "round_robin",
                    "shared_ownership_reset",
                    "timesheet_create",
                    "timesheet_edit",
                    "timesheet_delete",
                    "timer_running",
                    "time_spent"
                  ]
                },
                "content": {
                  "type": "object",
                  "description": "Value corresponding to the action type."
                }
              }
            }
          },
          "highlight": {
            "type": "integer",
            "description": "Shows which action has to be highlighted"
          }
        }
      }
    },
    "canned_response_show": {
      "allOf": [
        {
          "$ref": "#/definitions/extended_canned_response"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extended_canned_response"
            },
            {
              "properties": {
                "evaluated_response": {
                  "type": "string",
                  "description": "Has to be sideloaded with ?include=evaluated_response"
                }
              }
            }
          ]
        }
      ]
    },
    "dashboard_activities": {
      "type": "array",
      "description": "Dashboard activities",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "object_id": {
            "type": "number"
          },
          "object_type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "performer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "performer_type": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "is_agent": {
                    "type": "boolean"
                  },
                  "deleted": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "performed_at": {
            "type": "string",
            "format": "date-time"
          },
          "actions": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "dashboard_widget_config": {
      "type": "object",
      "properties": {
        "dashboards": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "id of the dashboard object"
            },
            "widgets": {
              "description": "This will give all the data about widget configuration which include widget's name and physical attributes",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Id of the widget"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the widget"
                  },
                  "width": {
                    "type": "integer",
                    "description": "Width of the widget"
                  },
                  "height": {
                    "type": "integer",
                    "description": "Height of the widget"
                  },
                  "x": {
                    "type": "integer",
                    "description": "Horiontal postion in the xy plane"
                  },
                  "y": {
                    "type": "integer",
                    "description": "Vertical postion in the xy plane"
                  }
                }
              }
            }
          }
        }
      }
    },
    "scorecard": {
      "type": "object",
      "properties": {
        "ticket_summaries": {
          "description": "Ticket summary data for scorecard widget",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "represents id of ticket summary item"
              },
              "name": {
                "type": "string",
                "description": "Name of the status on the scorecard"
              },
              "value": {
                "type": "integer",
                "description": "Count of tickets in that status"
              }
            }
          }
        }
      }
    },
    "satisfaction_survey_widget": {
      "type": "object",
      "properties": {
        "satisfaction_surveys": {
          "description": "data for customer satisfaction survey",
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "survey_responded": {
              "type": "integer",
              "description": "number of survey responses that agent has got"
            },
            "results": {
              "type": "object",
              "properties": {
                "positive": {
                  "type": "integer",
                  "description": "percentage of positive responses to the survey"
                },
                "neutral": {
                  "type": "integer",
                  "description": "percentage of neutral responses to the survey"
                },
                "negative": {
                  "type": "integer",
                  "description": "percentage of negative responses to the survey"
                }
              }
            }
          }
        }
      }
    },
    "forum_moderation_widget": {
      "type": "object",
      "properties": {
        "moderation_counts": {
          "description": "Forum posts count that are awaiting moderation or spam",
          "type": "object",
          "properties": {
            "spam": {
              "type": "integer",
              "description": "Count of spam forum posts"
            },
            "unpublished": {
              "type": "integer",
              "description": "Count of unpublished forum posts awaiting moderation"
            }
          }
        }
      }
    },
    "unresolved_tickets": {
      "type": "object",
      "properties": {
        "unresolved_tickets": {
          "description": "Aggregated values of unresolved tickets for group by values",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "group_by_choice": {
                "type": "integer",
                "description": "Either group_id or responder_id value based on group_by choice in request"
              },
              "stats": {
                "type": "array",
                "description": "Count value for each status",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status ID"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Count of tickets with provided group_id/responder_id and status"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ticket_trends_widget": {
      "type": "object",
      "properties": {
        "today": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "yesterday": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "last_dump_time": {
          "type": "string"
        }
      }
    },
    "ticket_metrics_widget": {
      "type": "object",
      "properties": {
        "received": {
          "type": "number"
        },
        "resolved": {
          "type": "number"
        },
        "first_response": {
          "type": "string"
        },
        "avg_response": {
          "type": "string"
        },
        "sla": {
          "type": "number"
        },
        "last_dump_time": {
          "type": "string"
        }
      }
    },
    "leaderboard_agents_lists": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "rank_holders": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "rank": {
                  "type": "number"
                },
                "score": {
                  "type": "number"
                },
                "user_id": {
                  "type": "number"
                },
                "avatar": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "id": {
      "name": "id",
      "in": "path",
      "required": true,
      "description": "An unique identifier",
      "type": "integer",
      "format": "int64",
      "minimum": 1,
      "x-example": 10
    }
  }
}