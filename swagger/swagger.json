{
  "swagger": "2.0",
  "info": {
    "title": "Freshdesk Private API",
    "version": "1.0.0"
  },
  "basePath": "/api/_",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "contact"
        ],
        "summary": "List all",
        "description": "Work in Progress",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mobile",
            "in": "query",
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "type": "string"
          },
          {
            "name": "company_id",
            "in": "query",
            "type": "id"
          },
          {
            "name": "state",
            "in": "query",
            "type": "string",
            "enum": [
              "blocked",
              "deleted",
              "unverified",
              "verified"
            ]
          },
          {
            "name": "tag",
            "in": "query",
            "type": "string"
          },
          {
            "name": "letter",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "contacts": {
                      "$ref": "#/definitions/array_of_contacts"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "contact"
        ],
        "description": "Create a contact",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contact_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_contact"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "delete": {
        "summary": "Delete Contact",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/{id}/restore": {
      "put": {
        "summary": "Restore Contact",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/{id}/send_invite": {
      "put": {
        "summary": "Send Invite",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true,
            "description": "ID of contact"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/{id}/update_password": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Update Password",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_password"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/contacts/{id}/make_agent": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Make Agent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/make_agent_response"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/make_agent_params"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "409": {
            "description": "Inconsistent state"
          }
        }
      }
    },
    "/contacts/{id}/whitelist": {
      "put": {
        "summary": "Whitelist",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true,
            "description": "ID of contact"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/{id}/activities": {
      "get": {
        "summary": "Activities",
        "description": "Recent Activities of the User based on Tickets & Forums. You can filter activity by using params in url : 1. ?type=tickets for tickets, 2. ?type=forums for forums & 3. ?type=archived_tickets for archived tickets activities.",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true
          }
        ],
        "examples": [
          {
            "id": 22
          },
          {
            "id": 23
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/contact_activity"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/bulk_delete": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Bulk Delete",
        "description": "Bulk delete contacts",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/contacts/bulk_restore": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Bulk Restore",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/contacts/bulk_send_invite": {
      "put": {
        "summary": "Bulk Send Invite",
        "tags": [
          "contact"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          }
        }
      }
    },
    "/contacts/bulk_whitelist": {
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Bulk Whitelist",
        "description": "Bulk whitelist contacts",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/contacts/merge": {
      "post": {
        "tags": [
          "contact"
        ],
        "summary": "Merge",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contact_merge_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Contact not found"
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "List all",
        "description": "Lists all companies with its associations",
        "parameters": [
          {
            "name": "letter",
            "in": "query",
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "description": "Comma-separated, possible values - contacts_count, sla_policies"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "companies": {
                      "$ref": "#/definitions/array_of_companies"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets": {
      "post": {
        "tags": [
          "ticket"
        ],
        "description": "Create a ticket",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_ticket"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}": {
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/restore": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Restore Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/spam": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Spam Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/unspam": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "unspam Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/execute_scenario": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Execute Scenario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "description": "Display ID of ticket",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/execute_scenario_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/bulk_delete": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Bulk Delete tickets",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/bulk_restore": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Bulk Restore tickets",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/bulk_spam": {
      "put": {
        "summary": "Bulk Spam",
        "tags": [
          "ticket"
        ],
        "description": "Mark multiple tickets as spam",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/bulk_unspam": {
      "put": {
        "summary": "Bulk Unspam",
        "tags": [
          "ticket"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/bulk_execute_scenario": {
      "put": {
        "summary": "Bulk Execute Scenario",
        "operationId": "bulk_execute_scenario",
        "tags": [
          "ticket"
        ],
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "type": "number",
            "required": true,
            "description": "ID of scenario to be executed"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bulk_action_input"
                },
                {
                  "$ref": "#/definitions/execute_scenario_input"
                }
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/bulk_update": {
      "put": {
        "tags": [
          "ticket"
        ],
        "description": "Bulk Update",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_bulk_update_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/latest_note": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Latest Note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "description": "Display ID of ticket",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/latest_note"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/split_note/{note_id}": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Split Note **",
        "description": "Splitting the note of a ticket and creating a new ticket from that. A Ticket object will be returned on succesfull response.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "description": "Display ID of ticket",
            "required": true
          },
          {
            "name": "note_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_ticket"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/draft": {
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "Save Draft",
        "description": "Agent specific draft version of the reply for a ticket will be saved.",
        "parameters": [
          {
            "name": "id",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/draft_create_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          },
          "424": {
            "description": "Failed dependancy"
          }
        }
      },
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Show Draft",
        "description": "Retrieves agent specific draft version of the reply for a ticket",
        "parameters": [
          {
            "name": "id",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/draft"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      },
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Discard Draft",
        "description": "Clears the draft version of the reply for a ticket",
        "parameters": [
          {
            "name": "id",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/merge": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Merge tickets",
        "description": "Some part of this merge is done in sidekiq workers. For the merge tickets action to be completed you need to run sidekiq workers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ticket_merge_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/empty_spam": {
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Empty Spam",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/empty_trash": {
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Empty Trash",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tickets/delete_forever": {
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete Forever",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Display Ids of tickets",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/delete_forever_spam": {
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete Forever Spam",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Display Ids of tickets",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/activities": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Activities",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "performer": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "system"
                        ]
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "agent": {
                            "type": "boolean"
                          },
                          "avatar_url": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "rule": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "observer",
                              "dispatcher",
                              "supervisor",
                              "scenario_automation"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "performed_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Eg: note, priority, status, responder_id and the custom_fields would start with custom_field."
                        },
                        "value": {
                          "type": "string",
                          "description": "Can be any type based on the property. Will be empty if it is reply/note/forward..."
                        },
                        "label": {
                          "type": "string",
                          "description": "Sometimes the value cannot be converted to labels, as the option might have been removed. In those cases, this label can be used"
                        },
                        "note": {
                          "type": "string",
                          "description": "Will be present only for notes"
                        }
                      }
                    }
                  },
                  "highlight": {
                    "type": "string",
                    "description": "Shows which action has to be highlighted"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}/notes": {
      "post": {
        "tags": [
          "conversation"
        ],
        "description": "Create a Note",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/note_create_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/note_create"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/reply": {
      "post": {
        "tags": [
          "conversation"
        ],
        "description": "Create a Reply",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/note_reply_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/note_reply"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/{id}/forward": {
      "post": {
        "tags": [
          "conversation"
        ],
        "description": "Forward Ticket",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/note_forward_input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/note_forward"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/attachments": {
      "post": {
        "tags": [
          "attachment"
        ],
        "summary": "Create a draft attachment",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/attachment_create_input"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/attachment"
            }
          },
          "400": {
            "description": "Bad request error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/tickets/{id}/watch": {
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "Add watcher",
        "parameters": [
          {
            "name": "id",
            "type": "id",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/add_watcher_input"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/{id}/unwatch": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Remove watcher",
        "parameters": [
          {
            "name": "id",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Ticket/Subscription not found"
          }
        }
      }
    },
    "/tickets/{id}/watchers": {
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "List watchers",
        "parameters": [
          {
            "name": "id",
            "type": "id",
            "description": "Display ID of ticket",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/watchers"
            }
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/tickets/watch": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Bulk Watch",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bulk_action_input"
                },
                {
                  "$ref": "#/definitions/add_watcher_input"
                }
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/tickets/unwatch": {
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Bulk Unwatch",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "description": "Display Ids of tickets",
            "schema": {
              "$ref": "#/definitions/bulk_action_input"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/partial_success_response"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          }
        }
      }
    },
    "/canned_response_folders": {
      "get": {
        "summary": "Folder Listing",
        "description": "Listing all canned response folders",
        "tags": [
          "canned response"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/array_of_canned_response_folders"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Canned response not found"
          }
        }
      }
    },
    "/canned_response_folders/{id}": {
      "get": {
        "summary": "Folder Details",
        "description": "Details of a canned response folder with the canned responses inside the folder",
        "tags": [
          "canned response"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true,
            "description": "ID of canned response"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/canned_response_folder_details"
            }
          },
          "400": {
            "description": "Bad Request Error",
            "schema": {
              "$ref": "#/definitions/bad_request_error"
            }
          },
          "404": {
            "description": "Canned response not found"
          }
        }
      }
    },
    "/canned_responses/{id}": {
      "get": {
        "summary": "Show **",
        "description": "Details of a canned response",
        "tags": [
          "canned response"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true,
            "description": "ID of canned response"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/extended_canned_response"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Canned response not found"
          }
        }
      }
    }
  },
  "definitions": {
    "id": {
      "type": "number",
      "minimum": 1
    },
    "custom_field": {
      "type": "object"
    },
    "bulk_action_error": {
      "type": "object",
      "properties": {
        "id": {
          "type": "id"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/request_error"
          }
        }
      }
    },
    "bad_request_error": {
      "title": "data",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/request_error"
          }
        }
      }
    },
    "request_error": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "bulk_action_input": {
      "title": "data",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "number",
            "minimum": 1,
            "example": 987
          }
        }
      },
      "required": [
        "ids"
      ]
    },
    "make_agent_params": {
      "type": "object",
      "properties": {
        "occasional": {
          "type": "boolean",
          "description": "Set to true if this is an occasional agent (true => occasional, false => full-time)"
        },
        "signature": {
          "type": "string",
          "description": "Signature of the agent in HTML format"
        },
        "ticket_scope": {
          "type": "number",
          "description": "Ticket permission of the agent (1 -> Global Access, 2 -> Group Access, 3 -> Restricted Access). Current logged in agent can't update his/her ticket_scope"
        },
        "group_ids": {
          "type": "array",
          "description": "Group IDs associated with the agent",
          "items": {
            "type": "number"
          }
        },
        "role_ids": {
          "type": "array",
          "description": "Role IDs associated with the agent. Atleast one role should be assoicated with the agent. Current logged in agent can't update his/her role_ids",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "attachment_create_input": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "number"
        },
        "content": {
          "type": "string",
          "format": "byte"
        }
      },
      "required": [
        "body"
      ]
    },
    "contact_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/contact"
        },
        {
          "properties": {
            "view_all_tickets": {
              "type": "boolean"
            },
            "avatar_id": {
              "type": "number"
            }
          }
        }
      ]
    },
    "contact_merge_input": {
      "type": "object",
      "properties": {
        "primary_id": {
          "description": "ID of the primary contact",
          "type": "number"
        },
        "target_ids": {
          "description": "Ids of contacts that will be merged into the Primary contact",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "primary_id",
        "target_ids"
      ]
    },
    "update_password": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "format": "password"
        }
      },
      "required": [
        "password"
      ]
    },
    "note_create_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "properties": {
            "user_id": {
              "type": "id"
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            },
            "attachment_ids": {
              "type": "array",
              "items": {
                "type": "id"
              }
            },
            "incoming": {
              "type": "boolean"
            },
            "notify_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "private": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "note_reply_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "properties": {
            "user_id": {
              "type": "id"
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            },
            "attachment_ids": {
              "type": "array",
              "items": {
                "type": "id"
              }
            },
            "from_email": {
              "type": "string"
            },
            "cc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bcc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "note_forward_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "properties": {
            "include_quoted_text": {
              "type": "boolean"
            },
            "include_original_attachments": {
              "type": "boolean"
            },
            "agent_id": {
              "type": "id"
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            },
            "attachment_ids": {
              "type": "array",
              "items": {
                "type": "id"
              }
            },
            "cloud_file_ids": {
              "type": "array",
              "items": {
                "type": "id"
              }
            },
            "from_email": {
              "type": "string"
            },
            "to_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "cc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bcc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ticket_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ticket"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "facebook_id": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "twitter_id": {
              "type": "string"
            },
            "attachment_ids": {
              "type": "array",
              "items": {
                "type": "id"
              }
            },
            "cc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ticket_bulk_update_input": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "id"
          }
        },
        "properties": {
          "$ref": "#/definitions/ticket_update_input"
        },
        "reply": {
          "type": "object",
          "description": "** pending implementation",
          "properties": {
            "body": {
              "type": "string",
              "description": "reply content"
            },
            "attachment_ids": {
              "type": "array",
              "description": "attachment ids",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "ticket_update_input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ticket"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "facebook_id": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "twitter_id": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ticket_merge_input": {
      "type": "object",
      "properties": {
        "primary_id": {
          "type": "number",
          "description": "ID of the Primary ticket",
          "required": true
        },
        "ticket_ids": {
          "type": "array",
          "description": "Ids of the tickets that will be merged into the Primary ticket",
          "minItems": 1,
          "maxItems": 30,
          "items": {
            "type": "number"
          }
        },
        "note_in_primary": {
          "type": "object",
          "properties": {
            "body": {
              "type": "string"
            },
            "private": {
              "type": "boolean"
            }
          }
        },
        "note_in_secondary": {
          "type": "object",
          "properties": {
            "body": {
              "type": "string"
            },
            "private": {
              "type": "boolean"
            }
          }
        },
        "convert_recepients_to_cc": {
          "type": "boolean",
          "default": false,
          "description": "Whether to Add secondary ticket recipients to CC"
        }
      }
    },
    "add_watcher_input": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "id",
          "description": "ID of agent to be added to list of watchers"
        }
      }
    },
    "draft_create_input": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string",
          "required": true,
          "description": "content of the ticket reply"
        },
        "cc_emails": {
          "type": "array",
          "description": "cc_emails for the ticket reply",
          "items": {
            "type": "string"
          }
        },
        "bcc_emails": {
          "type": "array",
          "description": "bcc_emails for the ticket reply",
          "items": {
            "type": "string"
          }
        },
        "from_email": {
          "type": "string"
        },
        "attachment_ids": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "execute_scenario_input": {
      "type": "object",
      "properties": {
        "scenario_id": {
          "type": "number",
          "required": true,
          "description": "ID of scenario to be executed"
        }
      }
    },
    "contact": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "company_id": {
          "type": "id"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "job_title": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "time_zone": {
          "type": "string"
        },
        "twitter_id": {
          "type": "string"
        },
        "other_emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "custom_fields": {
          "$ref": "#/definitions/custom_field"
        }
      }
    },
    "avatar": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/attachment"
        },
        {
          "properties": {
            "thumb_url": {
              "type": "string"
            }
          }
        }
      ]
    },
    "company": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "note": {
          "type": "string"
        },
        "custom_fields": {
          "$ref": "#/definitions/custom_field"
        }
      }
    },
    "note": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        }
      }
    },
    "ticket": {
      "type": "object",
      "properties": {
        "email_config_id": {
          "type": "number"
        },
        "group_id": {
          "type": "number"
        },
        "priority": {
          "type": "number",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "requester_id": {
          "type": "number"
        },
        "responder_id": {
          "type": "number"
        },
        "source": {
          "type": "number",
          "enum": [
            1,
            2,
            3,
            7,
            8,
            9,
            10
          ]
        },
        "status": {
          "type": "number",
          "enum": [
            2,
            3,
            4,
            5,
            6,
            7
          ]
        },
        "subject": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Question",
            "Incident",
            "Problem",
            "Feature Request"
          ]
        },
        "product_id": {
          "type": "number"
        },
        "due_by": {
          "type": "string",
          "format": "date-time"
        },
        "fr_due_by": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "custom_fields": {
          "type": "object"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "attachment": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/extension_generic"
        },
        {
          "properties": {
            "content_type": {
              "type": "string"
            },
            "size": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "attachment_url": {
              "type": "string"
            }
          }
        }
      ]
    },
    "agent": {
      "type": "object",
      "properties": {
        "available_since": {
          "type": "string"
        },
        "available": {
          "type": "boolean"
        },
        "occasional": {
          "type": "boolean"
        },
        "signature": {
          "type": "string"
        },
        "group_ids": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "role_ids": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "id": {
          "type": "number"
        },
        "ticket_scope": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "sla_policy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "applicable_to": {
          "type": "object",
          "properties": {
            "product_ids": {
              "type": "array",
              "items": {
                "type": "id"
              }
            },
            "company_ids": {
              "type": "array",
              "items": {
                "type": "id"
              }
            },
            "group_ids": {
              "type": "array",
              "items": {
                "type": "id"
              }
            },
            "sources": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ticket_types": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "is_default": {
          "type": "boolean"
        },
        "position": {
          "type": "number"
        }
      }
    },
    "draft": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/draft_create_input"
        },
        {
          "properties": {
            "saved_at": {
              "type": "string",
              "format": "date-time",
              "description": "Represents the time at which the draft is saved"
            }
          }
        }
      ]
    },
    "canned_response": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "content_html": {
          "type": "string"
        }
      }
    },
    "canned_response_folder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "extension_generic": {
      "type": "object",
      "properties": {
        "id": {
          "type": "id"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "extended_contact": {
      "allOf": [
        {
          "$ref": "#/definitions/contact"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            },
            {
              "properties": {
                "active": {
                  "type": "boolean"
                },
                "deleted": {
                  "type": "boolean"
                },
                "avatar": {
                  "$ref": "#/definitions/avatar"
                }
              }
            }
          ]
        }
      ]
    },
    "extended_company": {
      "allOf": [
        {
          "$ref": "#/definitions/company"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            },
            {
              "properties": {
                "contacts_count": {
                  "type": "number"
                },
                "sla_policies": {
                  "$ref": "#/definitions/array_of_sla_policies"
                }
              }
            }
          ]
        }
      ]
    },
    "extended_note": {
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            },
            {
              "properties": {
                "body_text": {
                  "type": "string"
                },
                "ticket_id": {
                  "type": "id"
                }
              }
            }
          ]
        }
      ]
    },
    "extended_ticket": {
      "allOf": [
        {
          "$ref": "#/definitions/ticket"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            },
            {
              "properties": {
                "cc_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fwd_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "reply_cc_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fr_escalated": {
                  "type": "boolean"
                },
                "spam": {
                  "type": "boolean"
                },
                "to_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "is_escalated": {
                  "type": "boolean"
                },
                "description_text": {
                  "type": "string"
                }
              }
            }
          ]
        }
      ]
    },
    "extended_sla_policy": {
      "allOf": [
        {
          "$ref": "#/definitions/sla_policy"
        },
        {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/extension_generic"
            }
          ]
        }
      ]
    },
    "extended_canned_response": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/canned_response"
        },
        {
          "properties": {
            "folder_id": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "extended_canned_response_folder": {
      "allOf": [
        {
          "$ref": "#/definitions/canned_response_folder"
        },
        {
          "type": "object",
          "properties": {
            "personal": {
              "type": "boolean"
            },
            "responses_count": {
              "type": "integer",
              "description": "count of canned responses inside the folder"
            }
          }
        }
      ]
    },
    "array_of_tickets": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/extended_ticket"
      }
    },
    "array_of_contacts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/extended_contact"
      }
    },
    "array_of_companies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/extended_company"
      }
    },
    "array_of_sla_policies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/extended_sla_policy"
      }
    },
    "array_of_canned_response_folders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/extended_canned_response_folder"
      }
    },
    "canned_response_folder_details": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/canned_response_folder"
        },
        {
          "properties": {
            "responses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/canned_response"
              }
            }
          }
        }
      ]
    },
    "meta": {
      "type": "object",
      "title": "meta",
      "properties": {
        "count": {
          "type": "number"
        }
      }
    },
    "note_create": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "$ref": "#/definitions/extended_note"
        },
        {
          "properties": {
            "user_id": {
              "type": "id"
            },
            "incoming": {
              "type": "boolean"
            },
            "private": {
              "type": "boolean"
            },
            "support_email": {
              "type": "string"
            },
            "notified_to": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/attachment"
              }
            }
          }
        }
      ]
    },
    "note_reply": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "$ref": "#/definitions/extended_note"
        },
        {
          "properties": {
            "user_id": {
              "type": "id"
            },
            "from_email": {
              "type": "string"
            },
            "cc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bcc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "replied_to": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/attachment"
              }
            }
          }
        }
      ]
    },
    "note_forward": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/note"
        },
        {
          "$ref": "#/definitions/extended_note"
        },
        {
          "properties": {
            "agent_id": {
              "type": "id"
            },
            "from_email": {
              "type": "string"
            },
            "forwarded_to": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "cc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bcc_emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/attachment"
              }
            }
          }
        }
      ]
    },
    "partial_success_response": {
      "title": "data",
      "type": "object",
      "description": "Partial Success Response",
      "properties": {
        "succeeded": {
          "type": "array",
          "items": {
            "type": "id"
          }
        },
        "failed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bulk_action_error"
          }
        }
      },
      "example": {
        "succeeded": [
          11,
          12
        ],
        "failed": [
          {
            "id": 13,
            "errors": [
              {
                "field": "product_id",
                "message": "Invalid number",
                "code": "invalid_number"
              }
            ]
          }
        ]
      }
    },
    "make_agent_response": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "job_title": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "last_login_at": {
          "type": "string",
          "format": "date-time"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "time_zone": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "agent": {
          "$ref": "#/definitions/agent"
        }
      }
    },
    "watchers": {
      "title": "data",
      "type": "object",
      "properties": {
        "watcher_ids": {
          "type": "array",
          "items": {
            "type": "id"
          }
        }
      }
    },
    "latest_note": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "from_email": {
          "type": "string"
        },
        "cc_emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bcc_emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "body": {
          "type": "string"
        },
        "body_text": {
          "type": "string"
        },
        "ticket_id": {
          "type": "integer"
        },
        "to_emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "$ref": "#/definitions/extended_contact"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "contact_activity": {
      "title": "data",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Post",
            "Ticket"
          ]
        },
        "id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "topic_id": {
          "description": "Will be present for Forum Activity",
          "type": "integer"
        },
        "topic_title": {
          "description": "Will be present for Forum Activity",
          "type": "string"
        },
        "replied": {
          "description": "Will be present for Forum Activity",
          "type": "boolean",
          "enum": [
            "True",
            "False"
          ]
        },
        "status": {
          "description": "Will be present for Ticket Activity",
          "type": "integer"
        },
        "agent_id": {
          "description": "Will be present for Ticket Activity",
          "type": "integer"
        },
        "subject": {
          "description": "Will be present for Ticket Activity",
          "type": "string"
        }
      }
    }
  }
}