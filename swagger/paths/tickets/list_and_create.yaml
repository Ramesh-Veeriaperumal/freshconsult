get:
  tags: [ticket]
  description: Listing all tickets with pagination & applied filter
  summary: List all
  parameters:
    - name: query_hash
      in: query
      type: string
    - name: filter
      in: query
      type: string
      enum: ["spam", "deleted", "overdue", "pending", "open", "due_today", "new", "new_and_my_open", "all_tickets", "unresolved", "article_feedback", "my_article_feedback", "watching", "on_hold", "raised_by_me"] 
    - name: include
      in: query
      type: string
      description: Comma-separated values
      enum: ["requester", "stats", "survey"]
    - name: ids
      in: query
      type: string
      description: Comma-separated values
  responses:
    200:
      description: Success
      schema:
        $ref: '#/definitions/ticket_index'
    400:
      description: Bad Request Error
      schema:
        $ref: '#/definitions/bad_request_error'

post:
  tags: [ticket]
  description: Create a ticket
  parameters:
    - name: data
      in: body
      required: true
      schema:
        $ref: '#/definitions/ticket_input'
  responses:
    200:
      description: Success
      schema:
        $ref: '#/definitions/extended_ticket'
    400:
      description: Bad Request Error
      schema:
        $ref: '#/definitions/bad_request_error'