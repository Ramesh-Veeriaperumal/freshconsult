#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

module HelpdeskActivities
  module DashboardActivities
    require 'thrift'
    require 'helpdesk_activities/activity_types'
    class Client
      include ::Thrift::Client

      def dashboard_activities(dash_act, limit)
        send_dashboard_activities(dash_act, limit)
        return recv_dashboard_activities()
      end

      def send_dashboard_activities(dash_act, limit)
        send_message('dashboard_activities', Dashboard_activities_args, :dash_act => dash_act, :limit => limit)
      end

      def recv_dashboard_activities()
        result = receive_message(Dashboard_activities_result)
        return result.success unless result.success.nil?
        raise result.error unless result.error.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'dashboard_activities failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_dashboard_activities(seqid, iprot, oprot)
        args = read_args(iprot, Dashboard_activities_args)
        result = Dashboard_activities_result.new()
        begin
          result.success = @handler.dashboard_activities(args.dash_act, args.limit)
        rescue ::HelpdeskActivities::DashboardException => error
          result.error = error
        end
        write_result(result, oprot, 'dashboard_activities', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Dashboard_activities_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      DASH_ACT = 1
      LIMIT = 2

      FIELDS = {
        DASH_ACT => {:type => ::Thrift::Types::STRUCT, :name => 'dash_act', :class => ::HelpdeskActivities::DashboardDetail},
        LIMIT => {:type => ::Thrift::Types::I32, :name => 'limit'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Dashboard_activities_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0
      ERROR = 1

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::STRUCT, :class => ::HelpdeskActivities::DashboardData}},
        ERROR => {:type => ::Thrift::Types::STRUCT, :name => 'error', :class => ::HelpdeskActivities::DashboardException}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
