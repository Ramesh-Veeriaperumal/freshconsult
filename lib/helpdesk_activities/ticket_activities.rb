#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

module HelpdeskActivities
  module TicketActivities
    require 'thrift'
    require 'helpdesk_activities/activity_types'
    class Client
      include ::Thrift::Client

      def get_activities(activity_param, limit)
        send_get_activities(activity_param, limit)
        return recv_get_activities()
      end

      def send_get_activities(activity_param, limit)
        send_message('get_activities', Get_activities_args, :activity_param => activity_param, :limit => limit)
      end

      def recv_get_activities()
        result = receive_message(Get_activities_result)
        return result.success unless result.success.nil?
        raise result.error unless result.error.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_activities failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_get_activities(seqid, iprot, oprot)
        args = read_args(iprot, Get_activities_args)
        result = Get_activities_result.new()
        begin
          result.success = @handler.get_activities(args.activity_param, args.limit)
        rescue ::HelpdeskActivities::ActivityException => error
          result.error = error
        end
        write_result(result, oprot, 'get_activities', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Get_activities_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ACTIVITY_PARAM = 1
      LIMIT = 2

      FIELDS = {
        ACTIVITY_PARAM => {:type => ::Thrift::Types::STRUCT, :name => 'activity_param', :class => ::HelpdeskActivities::TicketDetail},
        LIMIT => {:type => ::Thrift::Types::I32, :name => 'limit'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Get_activities_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0
      ERROR = 1

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::HelpdeskActivities::ActivityData},
        ERROR => {:type => ::Thrift::Types::STRUCT, :name => 'error', :class => ::HelpdeskActivities::ActivityException}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
