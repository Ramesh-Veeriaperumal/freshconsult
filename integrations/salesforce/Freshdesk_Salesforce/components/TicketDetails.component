<apex:component controller="TicketDetailsController">
<apex:includeScript value="{!$Resource.jquery}" />
<apex:includeScript value="{!$Resource.scrollTo}" />
<apex:includeScript value="{!$Resource.validate}" />
<apex:stylesheet value="{!URLFOR($Resource.bootstrapcss, 'bootstrapcss/css/bootstrap_min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.redactor, 'redactor/css/redactor.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.redactor, 'redactor/redactor.min.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.chosen, 'chosen/chosen.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.chosen, 'chosen/chosen.jquery.min.js')}"/>
<apex:attribute name="sObjectType" description=""  type="String" required="true"/>
<apex:attribute name="sObjectId" description="" type="String" required="true"/>
<apex:attribute name="sObjectName" description=""  type="String" required="true"/>
<apex:attribute name="sObjectEmail" description=""  type="String" required="true"/>
<apex:attribute name="valid_fd" description=""  type="Boolean" required="true"/>
<apex:attribute name="valid_agent" description=""  type="Boolean" required="true"/>
<apex:attribute name="url" description=""  type="String" required="true"/>
<apex:attribute name="ticket" description=""  type="Ticket" required="true"/>
<apex:attribute name="ticketId" description=""  type="String" required="true"/>
<apex:attribute name="ticket_notes" description=""  type="TicketComment[]" required="true"/>
<apex:attribute name="customFields" description=""  type="CustomFields[]" required="true"/>
<apex:attribute name="api_key" description=""  type="String" required="true"/>
<apex:attribute name="errorMessage" description=""  type="String" required="true"/>
<apex:attribute name="ticketCsat" description=""  type="String" required="true"/>

<style>
section { padding-top: 20px; }
</style>
<script type="text/javascript">
HashMap = function(){
  this._dict = [];
}
HashMap.prototype._get = function(key){
  for(var i=0, couplet; couplet = this._dict[i]; i++){
    if(couplet[0] === key){
      return couplet;
    }
  }
}
HashMap.prototype.put = function(key, value){
  var couplet = this._get(key);
  if(couplet){
    couplet[1] = value;
  }else{
    this._dict.push([key, value]);
  }
  return this; // for chaining
}
HashMap.prototype.get = function(key){
  var couplet = this._get(key);
  if(couplet){
    return couplet[1];
  }
}

custom_field_values = new HashMap();            
</script>
<style>

.btnRightEnd {
	float:right;
	margin-right:35px;
}

/** Copying from Bootstrap **/
span.ticketId {
    color:#999;
}
#ticketDetails section {padding:10px;}
.custom_fields dt {
    font-weight:normal;
    color:#999;
}

#phHeaderLogoImage {
    max-width: 175px;
}

.row-fluid.comment {
    margin-bottom: 10px;
	padding:5px 5px 20px;
	border-top: solid 1px #EFEFEF;
}
#ticketDetails .user { 
	font-size:1.1em;
	display: inline-block;
	margin-bottom: 10px; 
}
.note_from_integrations, .freshdesk_quote {
	display:none;
}

textarea.redactor {
	height:150px;
}
/** End of Bootstrap **/
h2.ticket-subject {
	font-size:1.5em;
} 

.infobox h4 {
	display:block;
	font-size:1.2em;
}

.infobox dl, .infobox dd { margin-left:0; }
.important { color:#3f78a6 ; }
.ticketDescription { font-size: 1.1em; margin-bottom: 25px;}
.invisible { visibility:hidden; }
.greyText { color:#888 }
.actionButtons { float:right; width:100px; margin: 0 10px; text-align:right; }
.infobox {
	margin: 15px 5px;
	border-radius: 5px;
	background: #fbfbfb;
	border: 1px solid #ddd;
	padding: 10px 5%;
	width: 90%;
}

.comment p {
	margin-bottom:2px;
}

#notify_agents, .chzn-container { width: 550px; }
.infobox dd{ margin-bottom: 10px; }
.tableStyle {border-collapse: collapse; border-spacing: 0px 0px; }
.colStyle1 { width: 16.5%;text-align:right; padding-top:3px; padding-bottom:5px }
.colStyle2 { width: 10%; padding-left:20px; padding-top:5px; padding-bottom:5px}
.rowstyle { border-bottom-style:solid; border-bottom-width:1px;border-bottom-color:#E8E8E8 }

.textralign {text-align:right;}




.fd_external_link {
	border:solid 1px #CFCFCF;
	padding:5px 0;
	width:100%;
	display:block;
	margin-bottom:10px;
	border-radius: 5px;
}

.fd_external_link a {
	background:url({!URLFOR($Resource.open_new)}) no-repeat top left;
	padding: 0 5px 5px 20px;
	text-decoration: underline;
	color: #000;
	margin: 15px;
}

a {
	text-decoration:underline;
}

#sidebarDiv .sidebarModuleHeader h2 { line-height:100% }
select, input,textarea {
	height:auto;
	width:auto;
	line-height:auto;
}

.rtDetails {
	min-height: 250px;
	height: auto !important;
	height: 250px; *zoom: 1;
	-moz-box-shadow: 0 0 40px rgba(0, 0, 0, 0.05) inset;
	-webkit-box-shadow: 0 0 40px rgba(0, 0, 0, 0.05) inset;
	-o-box-shadow: 0 0 40px rgba(0, 0, 0, 0.05) inset;
	box-shadow: 0 0 40px rgba(0, 0, 0, 0.05) inset;
	margin: 0;
	padding-top: 5px;
	z-index: 10;
	background-color: #ffffff;
	border: 1px solid #cfcfcf;
	position: relative;
	border-radius:5px;
}
.rtDetails h3.title {
	font-size: 14px;
	padding: 0px 10px 3px 10px;
	display: block;
	margin: 0px;
	margin-top: 5px;
}

.rtDetails .cnt {
	list-style: none;
	margin: -6px 0 0 0;
	padding: 0px 10px 8px 10px;
}

.rtDetails .cnt li {
	border-bottom: 1px solid #f3f3f3;
	padding: 6px 0px;
	margin-left:0;
}

.rtDetails .cnt li label {
	display: block;
	font-size: 11px;
	font-weight: bold;
	color: #666666;
	padding: 5px 0;
}

.required_star {
	color: #d00;
	font-size: 16px;
	font-weight: bold;
	position: relative;
	top: 4px;
}
.rtDetails .cnt li select {
	font-size: 11px;
	max-width: 100%;
}
.status_container {
	background-color: #fffbc9;
	border-bottom: 1px solid #fff46e;
	margin-top: -5px;
	margin-bottom: 13px;
	padding: 6px 0;
	border-radius:5px 5px 0 0;
}

.status_container p {
	padding: 0 10px;
	margin: 0;
	color: #94875a;
	font-style: italic;
}
body button, body .x-btn, body .btn, body .btnDisabled, body .btnCancel, body .menuButton .menuButtonButton, 
body input.btn, body input.btnDisabled, body input.btnCancel { padding:2px 10px }
.ticket_icon { float: right; content: ""; width: 32px; height: 32px; margin: 0px; }
.email-reply { background: url('{!URLFOR($Resource.ticket_icons)}') 0 -150px; }
.email-forward { background: url('{!URLFOR($Resource.ticket_icons)}') 0 -86px; }
.email-receive { background: url('{!URLFOR($Resource.ticket_icons)}') 0 -118px; }
.note-public { background: url('{!URLFOR($Resource.ticket_icons)}') 0 -358px; }
.note-private { background: url('{!URLFOR($Resource.ticket_icons)}') 0 -326px; }
.tweet-note { background: url('{!URLFOR($Resource.ticket_icons)}') 0 -820px; }

.form-actions {
	padding: 10px 20px 18px 0;
	margin-top: 18px;
	margin-bottom: 18px;
	background:none;
	border-top: 1px solid #ddd;
}
.redactor_box iframe { border-radius: 6px;}
</style>

<apex:pageBlock rendered="{!errorMessage != ''}">
{!errorMessage} 
</apex:pageBlock>

<apex:outputPanel rendered="{!errorMessage == ''}">		
<section id="ticketDetails">

<div class="container-fluid">
    <div class="row-fluid">
        <div class="span9">
        
<apex:outputPanel rendered="{!sObjectType == 'Lead'}">
	<a href="{!URLFOR($Action.Lead.View, sObjectId)}">&laquo; Back to Ticket list</a>
</apex:outputPanel>
<apex:outputPanel rendered="{!sObjectType == 'Contact'}">
	<a href="{!URLFOR($Action.Contact.View, sObjectId)}" class="">&laquo; Back to Ticket list</a>
</apex:outputPanel>
<apex:outputPanel rendered="{!sObjectType == 'Account'}">
	<a href="{!URLFOR($Action.Account.View, sObjectId)}" class="">&laquo; Back to Ticket list</a>
</apex:outputPanel>

        
        	<div class="row-fluid">
	        	<div class="span12">
	        	<apex:outputPanel rendered="{!AND(ticketCsat != '', ticketCsat != null)}">
	        		<img src="{!url}/images/{!ticketCsat}"/>&nbsp;
	        	</apex:outputPanel>
	        		<h2 class="ticket-subject">{!ticket.subject} - #{!HTMLENCODE(ticketId)}</h2>

	        	<hr />
	        	<span class="user"><strong>{!HTMLENCODE(sObjectName)}</strong> <span class='greyText'>&lt;{!HTMLENCODE(sObjectEmail)}&gt; on {!HTMLENCODE(ticket.createdAt)}</span></span>
	        			
	        	</div>     
	        </div>
	        <div class="row-fluid">
		        <div class="span12 ticketDescription">
		        	<apex:outputText escape="false"  value="{!SUBSTITUTE(SUBSTITUTE(JSENCODE(ticket.description),"\r", " "),'\n','<br/>')}"/>
		        </div>
		        <div class="span12">
		       		<div class="actionButtons">
		        		<button id="showReplyForm">Add Note</button> <br /> <br />
		       		</div>
	       		</div>
		    </div>
		    <form id="addComment" style="display:none">
			<div class="control-group">
			  <h4><label class="control-label" for="newComment">Add a note </label></h4>
			  
			  <div class="controls">
			    <textarea class="input-xxlarge required" id="newComment" rows="3" name="comment"></textarea>
			  </div>
			  <br />
			  <div class="controls">
			  	
		     	<input style="float:left; width:10px;" type="checkbox" id="isPrivate" name="isPrivate" value="0" />
		     	<label style="display:inline-block; margin-left:10px;" for="isPrivate" >This is a private note, don't show this to the requester.</label>
			  </div>
			  <!-- <br />
			  <div class="controls">
			  	<label for="notify_agents" >Notify Agents</label>
			  	<select id="notify_agents" name="notify_agents" multiple="multiple" class="chzn-select" data-placeholder="Select Agent"></select>
			  </div>-->
			  
		     <div class="form-actions">
		       <button id="btnAddComment" class="btn" data-disabled-text="Adding note ..." data-default-text="Add note"  onClick='javascript:addComment("{!JSENCODE(ticketId)}");  return false;'>Add note</button>
		       <button class="btn" id="cancelComment" type="reset" >Cancel</button>
		     </div>
			</div>
			</form>
	    	<div id="commentList">
			</div>
			<apex:repeat value="{!ticket_notes}" var="tComment">
			<apex:outputPanel rendered="{!NOT(tComment.deleted)}">
				<div id="tmp_comment">
					<div class="row-fluid comment comment_{!tComment.user_type}">
					    <div class="span12">
					        <span class="user"><strong>{!HTMLENCODE(tComment.user)}</strong> <span class="greyText"> on {!HTMLENCODE(tComment.updatedAt)}</span></span>
					        	<apex:outputPanel rendered="{!tComment.source == '5'}">
					        		<div class="ticket_icon tweet-note"></div>
					        	</apex:outputPanel>
					        	<apex:outputPanel rendered="{!tComment.source == '5'}">
					        		<div class="ticket_icon tweet-note"></div>
					        	</apex:outputPanel>
					        	<apex:outputPanel rendered="{!tComment.source == '0' && tComment.user_type == 'requester'}">
					        		<div class="ticket_icon email-receive"></div>
					        	</apex:outputPanel>
					        	<apex:outputPanel rendered="{!tComment.source == '0' && tComment.user_type == 'agent'}">
					        		<div class="ticket_icon email-reply"></div>
					        	</apex:outputPanel>
					        	<apex:outputPanel rendered="{!tComment.source == '8' && tComment.user_type == 'agent'}">
					        		<div class="ticket_icon email-forward"></div>
					        	</apex:outputPanel>
					        	<apex:outputPanel rendered="{!tComment.source == '2' && tComment.is_private == false}">
					        		<div class="ticket_icon note-public"></div>
					        	</apex:outputPanel>
					        	<apex:outputPanel rendered="{!tComment.source == '2' && tComment.is_private}">
					        		<div class="ticket_icon note-private"></div>
					        	</apex:outputPanel>
					        	
					        	<apex:outputText escape="false" value="{!tComment.comment}"/>
						        	
						        <div class="">	
						        <apex:outputPanel rendered = "{!tComment.attachments.size > 0}" >
							        <!-- <h4> {!tComment.attachments.size} attachments </h4>  -->
							        <apex:repeat value="{!tComment.attachments}" var="att">
							        	<div><a target="_blank" class="attachment" href="{!url + '/helpdesk/attachments/' + att.attachment_id}"><i class="icon-file"></i> {!HTMLENCODE(att.content_file_name)}  </a></div>
							        </apex:repeat>
						        </apex:outputPanel>
						        </div>
					    </div>
					</div>
				</div>
			</apex:outputPanel>	
			<script type='text/javascript'>
				$('#commentList').prepend($("#tmp_comment").html());
				$('#tmp_comment').remove();
			</script>
			</apex:repeat>
        </div>
        <div class="span3">
        	<div  class="fd_external_link">
            <a target="_blank" href="{!url}/helpdesk/tickets/{!JSENCODE(ticket.ticketId)}" title="View in Freshdesk">
                Open in Freshdesk
            </a>
            </div>
<script type="text/javascript">
<apex:repeat value="{!ticket.custom_fields}" var="custom_fields">
	custom_field_values.put("{!custom_fields.field_name}","{!JSINHTMLENCODE(custom_fields.field_value)}");
</apex:repeat>

</script>
            
            <div class="rtDetails">
            	<div class="status_container"> 
            	<apex:outputPanel rendered="{!ticket.status_id != '4' && ticket.status_id != '5' }" >
            		<h3 class="title">Due By</h3>
            		<p>{!ticket.dueDate}</p>
           		</apex:outputPanel>
            	<apex:outputPanel rendered="{!ticket.status_id == '4' }" >
            		<h3 class="title">Resolved</h3>
           		</apex:outputPanel>
            	<apex:outputPanel rendered="{!ticket.status_id == '5' }" >
            		<h3 class="title">Closed</h3>
           		</apex:outputPanel>
            	</div>
            	
            	<form id="editTicket">
            	<h3 class="title">Ticket Properties</h3>
            	<ul class="cnt">
            		
      <apex:repeat value="{!customFields}" var="field">
		<script type="text/javascript">
			
			var field_type = "{!field.field_type}";
			var field_name = "{!field.field_name}";
			
			
                	var selected_value = custom_field_values.get("{!JSINHTMLENCODE(field.field_name)}") || "";
                	var form_element = "", reqd_class="";;
                	
                	if ( selected_value == '' || selected_value == 'null' || selected_value == null)
                	{
              			selected_value ='N/A';
                	}
                	if ( '{!field.field_required}' == 'true') {
                		reqd_class = " required ";
                	}
                	
                	
                	switch (field_type) {
                		case "custom_text":
                		case "custom_number":
                			form_element += "<input id='cf_{!JSINHTMLENCODE(field.field_name)}' type='text' value='" + selected_value + "' class='" + reqd_class + "'  name='{!JSINHTMLENCODE(field.field_name)}' />";
                			break;
                			
                		case "custom_dropdown":
                			form_element += "<select id='cf_{!JSINHTMLENCODE(field.field_name)}' name='{!JSINHTMLENCODE(field.field_name)}' class='" + reqd_class + "'  />";
                			
                			console.log("{!field.field_name}");
  
                			<apex:repeat value="{!field.options}" var="option">
                			 if (selected_value == "{!option.id}") {
                			console.log("inside if - ");
                				form_element += "<option value='{!option.value}' selected='selected'>{!option.id}</option>";
                			
                			}else {
                				form_element += "<option value='{!option.id}'>{!option.value}</option>";
               				}
                			</apex:repeat>
                			form_element += "</select>";
                			break;
                		case "custom_paragraph":
                			form_element += "<textarea id='cf_{!JSINHTMLENCODE(field.field_name)}' name='{!JSINHTMLENCODE(field.field_name)}' class='" + reqd_class + "' >" + selected_value + "</textarea>";
                			break;
                		case "custom_checkbox":
                			form_element += "<input value='0' type='hidden' name='{!JSINHTMLENCODE(field.field_name)}' />";
                			form_element += "<input value='1' id='cf_{!JSINHTMLENCODE(field.field_name)}' type='checkbox' name='{!JSINHTMLENCODE(field.field_name)}'";
                			if (selected_value == "true")
                				form_element += " checked='checked' ";
                			form_element += '/>';
                			break;
                		case "default_status":
                			form_element += "<select id='cf_{!JSINHTMLENCODE(field.field_name)}' name='{!JSINHTMLENCODE(field.field_name)}' class='" + reqd_class + "'  />";
                			<apex:repeat value="{!field.options}" var="option">
                			
                			if ("{!ticket.status}" == "{!option.id}") {
                				form_element += "<option value='{!option.value}' selected='selected'>{!option.id}</option>";
                			} else {
                				form_element += "<option value='{!option.value}'>{!option.id}</option>";
               				}
                			</apex:repeat>
                			form_element += "</select>";
                			break;
                		case "default_ticket_type":
                			form_element += "<select id='cf_{!JSINHTMLENCODE(field.field_name)}' name='{!JSINHTMLENCODE(field.field_name)}' class='" + reqd_class + "'  />";
                			<apex:repeat value="{!field.options}" var="option">
                			
                			if ("{!ticket.ticketType}" == "{!option.id}") {
                				form_element += "<option value='{!option.value}' selected='selected'>{!option.id}</option>";
                			} else {
                				form_element += "<option value='{!option.value}'>{!option.id}</option>";
               				}
                			</apex:repeat>
                			form_element += "</select>";
                			break;
                		case "default_priority":
                			form_element += "<select id='cf_{!JSINHTMLENCODE(field.field_name)}' name='{!JSINHTMLENCODE(field.field_name)}' class='" + reqd_class + "'  />";
                			<apex:repeat value="{!field.options}" var="option">
                			
                			if ("{!ticket.priority}" == "{!option.id}") {
                				form_element += "<option value='{!option.value}' selected='selected'>{!option.id}</option>";
                			} else {
                				form_element += "<option value='{!option.value}'>{!option.id}</option>";
               				}
                			</apex:repeat>
                			form_element += "</select>";
                			break;
                		case "default_group":
                			form_element += "<select id='cf_{!JSINHTMLENCODE(field.field_name)}' name='{!JSINHTMLENCODE(field.field_name)}' class='" + reqd_class + "'  />";
                			<apex:repeat value="{!field.options}" var="option">
                			
                			if (selected_value == "{!option.id}") {
                				form_element += "<option value='{!option.value}' selected='selected'>{!option.id}</option>";
                			} else {
                				form_element += "<option value='{!option.value}'>{!option.id}</option>";
               				}
                			</apex:repeat>
                			form_element += "</select>";
                			break;
                		case "default_agent":
                			form_element += "<select id='cf_{!JSINHTMLENCODE(field.field_name)}' name='{!JSINHTMLENCODE(field.field_name)}' class='" + reqd_class + "'  />";
                			
                			<apex:repeat value="{!field.options}" var="option">
                			
                			$('#notify_agents').append("<option value='{!option.email}'>{!option.id} &lt;{!option.email}&gt; </option>");
                			if (selected_value == "{!option.id}") {
                				form_element += "<option value='{!option.value}' selected='selected'>{!option.id}</option>";
                			} else {
                				form_element += "<option value='{!option.value}'>{!option.id}</option>";
               				}
                			</apex:repeat>
                			form_element += "</select>";
                			break;
                		
                		
                	}
                	
                	if (form_element != "") {
	                	
                		document.write('<li>');
                		document.write('<label for="cf_{!JSINHTMLENCODE(field.field_name)}">{!JSINHTMLENCODE(field.field_label)}');
                		if ( '{!field.field_required}' == 'true') { //This is for Required fields
                			document.write(' <span class="reqd">*</span>');
               			}
               			document.write('</label>');
                		document.write(form_element);
                		document.write('</li>');
                		
                	}
                	
                </script>
                
        </apex:repeat>
					<li>
						<input type="submit" id="btnUpdateTkt" class="btn" value="Update"  data-default-text="Update" data-disabled-text="Updating..." />
					</li>
            	</ul>
            	</form>
            	
            </div>
        </div>
    </div>      
</div>
</section>

</apex:outputPanel>

<script>

	if(typeof freshdesk === 'undefined'){
	      window.freshdesk = {};
	      freshdesk.TicketDetailsController = TicketDetailsController;
	}
		function updateCookie(cookieId, value, expireDays){
			var expireString="";
			if(expireDate!==undefined){
				var expireDate=new Date();
				expireDate.setTime((24*60*60*1000*parseFloat(expireDays)) + expireDate.getTime());
				expireString="; expires="+expireDate.toGMTString();
			}
			return(document.cookie=escape(cookieId)+"="+escape(value||"") + expireString + "; path=/");
		}

		function getCookie(cookieId){
			var cookie=document.cookie.match(new RegExp("(^|;)\\s*"+escape(cookieId)+"=([^;\\s]*)"));
			return(cookie?unescape(cookie[2]):null);
		};

		function deleteCookie(cookieId){
			updateCookie(cookieId, "", -1);
		};
		
    function addComment(ticketId){
        
        if ( $("form#addComment textarea").val() != '' && !$("#btnAddComment").data('disabled') === true) {
	        var str = $("form#addComment").serialize();
	        var notify = $('#notify_agents').val();
	        $("#btnAddComment").data('disabled',true);
	        $("#btnAddComment").addClass('disabled');
	        $("#btnAddComment").attr('disabled','disabled');
	        $("#cancelComment").attr('disabled','disabled');
	        $("#btnAddComment").text($("#btnAddComment").data('disabled-text'));
	        freshdesk.TicketDetailsController.addComment(ticketId, str, $('#isPrivate').is(':checked'), null, function(updateResult, event)
	        {        
	                    
	            if (event.status) 
	            {
					updateCookie('commentAdded','true',1);
					if (updateResult.success) {
		                 top.location.reload();
	                 } else {
				        $("#btnAddComment").removeClass('disabled');
				        $("#btnAddComment").removeAttr('disabled');
				        $("#cancelComment").removeAttr('disabled');
	                 	$("#btnAddComment").text($("#btnAddComment").data('default-text'));
	                 	$("#btnAddComment").data('disabled',false);
	                 	$("form#addComment").removeAttr('style');
	                 	alert(updateResult.data);
                 	 }
	            }
	        }, {escape:true});
        } else {
        	
        }
        
        return false;
    }
    
    $("form#editTicket").submit(function(ev) {
    	ev.preventDefault();
    	updateTicket();
    	return false;
   	});
    function updateTicket(){
    	if ($("form#editTicket").valid() && !$("#btnUpdateTkt").data('disabled') === true) {
	    	ticketId = '{!ticketId}';
	    	$("form#editTicket input[type=checkbox]:checked").each(function(i,el) {
	    		$('form#editTicket input[name=' + $(el).attr('name') + '][type=hidden]').attr('disabled','disabled');
	    	} );
	    	
	        var str = $("form#editTicket").serialize();
        
           	$("#btnUpdateTkt").val($("#btnUpdateTkt").data('disabled-text'));
           	$("#btnUpdateTkt").data('disabled',true);
	        $("#btnUpdateTkt").addClass('disabled');
	        $("#btnUpdateTkt").attr('disabled','disabled');
            
	        freshdesk.TicketDetailsController.createTicket(str, 'true',ticketId, '', function(updateResult, event)
	        {                
	            if (event.status) 
	            {
	                 if (updateResult.success) {
		                 top.location.reload();
	                 } else {
				        $("#btnUpdateTkt").removeClass('disabled');
				        $("#btnUpdateTkt").removeAttr('disabled');
	                 	$("#btnUpdateTkt").val($("#btnUpdateTkt").data('default-text'));
	                 	$("#btnUpdateTkt").data('disabled',false);
	                 
				    	$("form#editTicket input[type=checkbox]:checked").each(function(i,el) {
				    		$('form#editTicket input[name=' + $(el).attr('name') + '][type=hidden]').removeAttr('disabled');
				    	} );
				    	
	                 	$("form#editTicket").removeAttr('style');
	                 	//alert('There was some problem in updating the ticket. Please try again');
	                 	alert(updateResult.data);
                 	 }
	            }
	        }, {escape:true});
        } else {
        	alert('Please fill in the required fields');
       	}
       	
       	return false;
        
    }
    
    
    $(window).load(function() {
        
        $('.chzn-select').chosen();
        $("#showEditTicket").click(function() {
        	$('#ticketDetails').slideUp(function() {
	       		$('#editDetails').fadeIn(function() {
	       			$('#editDetails .redactor').redactor({ autoresize: true, resize:true,  cleanUp:true, convertDivs:true, convertLinks:true, toolbar: 'freshdesk', removeStyles: true });
	       		});
    		});
       	
        });
        
        $("#showTicketDetails").click(function() {
        	$('#editDetails').slideUp(function() {
        		$('#editDetails .redactor').destroyEditor();
        		$('#ticketDetails').fadeIn();
       		});
        });
        
        $('#showReplyForm').click(function() {
        	$('#addComment').slideDown();
        	$.scrollTo('#addComment');
        	$('#newComment').redactor({ autoresize: true, cleanUp:true, convertDivs:true, convertLinks:true, toolbar: 'freshdesk', removeStyles: true, focus: true });
        });
        
        $('#cancelComment').click(function(ev) {
        	ev.preventDefault();
        	$('#newComment').destroyEditor();
        	$('#newComment').val('');
        	$('#addComment').fadeOut();
        	return false;
        });
        	
    });
    
</script>

</apex:component>